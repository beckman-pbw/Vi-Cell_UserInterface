<dialogs:Dialog x:Class="ScoutUI.Views.Dialogs.MessageHubView"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:dialogs="clr-namespace:ScoutUI.Views.Dialogs"
                xmlns:dataTemplates="clr-namespace:ScoutUI.Common"
                x:Name="MessageHubViewWindow" mc:Ignorable="d"
                WindowStyle="None" ResizeMode="NoResize" SizeToContent="Height"
                MinHeight="250" MaxHeight="695" Width="350" Title="Message Hub">

    <Window.Resources>

        <dataTemplates:MessageTypeDataTemplateSelector x:Key="MessageTypeDataTemplateSelector" />

        <ControlTemplate x:Key="ExpanderToggleButton" TargetType="{x:Type ToggleButton}" >
            <Border x:Name="Border" CornerRadius="20" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                    BorderThickness="1" Background="{DynamicResource Border_Gray}" BorderBrush="{DynamicResource GenericVeryDark}" Margin="1" >
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>

                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CollapsedArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpandededArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <Grid>
                    <Path x:Name="CollapsedArrow" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"
                          Fill="{DynamicResource GenericVeryDark}"/>

                    <Path x:Name="ExpandededArrow" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed" 
                          Data="M 0 4 L 4 0 L 8 4 Z" Fill="{DynamicResource GenericVeryDark}">
                    </Path>
                </Grid>

            </Border>
        </ControlTemplate>

        <Style TargetType="{x:Type Expander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ContentRow" Height="0" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Border x:Name="Border" Grid.Row="0" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" 
                                    Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">

                                <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <ToggleButton Width="25" Grid.Column="1" Margin="2" OverridesDefaultStyle="True" 
                                                  Background="{TemplateBinding Background}" Template="{StaticResource ExpanderToggleButton}" 
                                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                                    <ContentPresenter Grid.Column="0" Margin="4" ContentSource="Header" RecognizesAccessKey="True" />
                                </Grid>
                            </Border>

                            <Border x:Name="Content" Grid.Row="1" BorderThickness="1,0,1,1" CornerRadius="0,0,2,2"
                                    Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"  >
                                <ContentPresenter Margin="4" />
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ContentRow" Property="Height" Value="{Binding DesiredHeight, ElementName=Content}" />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="lvItemWithoutScrollBar" TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0,0,0,0"/>
        </Style>

        <Style x:Key="lvItemWithScrollBar" TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0,0,18,0"/>
        </Style>

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="45"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <!--Header-->
        <Grid Background="{StaticResource Level1Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Label Grid.Column="0" FontWeight="Bold" FontSize="18" Content="{Binding ResourceKeys[LID_MsgLabel_Notification], Source={StaticResource ScoutUILanguageResource}}"
                   Style="{StaticResource PopLabelHeader}" />

            <Button Grid.Column="1" Margin="0,0,10,0" Width="26" Height="26" HorizontalAlignment="Right" Visibility="Hidden"
                    Command="{Binding CloseCommand}" CommandParameter="{Binding ElementName=MessageHubViewWindow}"
                    Style="{StaticResource AdminRoundButton}" Background="{x:Null}">
                <Image Source="{StaticResource close_1Source}" />
            </Button>
        </Grid>

        <!--Messages-->
        <ListView x:Name="lstMsgs" Grid.Row="1" Background="{StaticResource Level4Background}" ItemsSource="{Binding MessagesCollectionView}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.ScrollChanged="OnScrollChanged"
                  ItemTemplateSelector="{StaticResource MessageTypeDataTemplateSelector}" >
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="Margin" Value="0,0,0,0"/>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

    </Grid>
</dialogs:Dialog>