//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ScoutUI.Views.Reports.InstrumentStatus {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("InstrumentStatusReportDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class InstrumentStatusReportDataSet : global::System.Data.DataSet {
        
        private InstrumentStatusReportTableHeaderDomainTableDataTable tableInstrumentStatusReportTableHeaderDomainTable;
        
        private InstrumentStatusReportCalibrationDomainTableDataTable tableInstrumentStatusReportCalibrationDomainTable;
        
        private InstrumentStatusUserListTableDataTable tableInstrumentStatusUserListTable;
        
        private InstrumentStatusCellTypeTableDataTable tableInstrumentStatusCellTypeTable;
        
        private InstrumentStatusRegentParametersTableDataTable tableInstrumentStatusRegentParametersTable;
        
        private InstrumentStatusTableVisibilityTableDataTable tableInstrumentStatusTableVisibilityTable;
        
        private InstrumentStatusSystemErrorDataTable tableInstrumentStatusSystemError;
        
        private InstrumentSensorStatusInfoTableDataTable tableInstrumentSensorStatusInfoTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public InstrumentStatusReportDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected InstrumentStatusReportDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["InstrumentStatusReportTableHeaderDomainTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportTableHeaderDomainTableDataTable(ds.Tables["InstrumentStatusReportTableHeaderDomainTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportCalibrationDomainTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportCalibrationDomainTableDataTable(ds.Tables["InstrumentStatusReportCalibrationDomainTable"]));
                }
                if ((ds.Tables["InstrumentStatusUserListTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusUserListTableDataTable(ds.Tables["InstrumentStatusUserListTable"]));
                }
                if ((ds.Tables["InstrumentStatusCellTypeTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusCellTypeTableDataTable(ds.Tables["InstrumentStatusCellTypeTable"]));
                }
                if ((ds.Tables["InstrumentStatusRegentParametersTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusRegentParametersTableDataTable(ds.Tables["InstrumentStatusRegentParametersTable"]));
                }
                if ((ds.Tables["InstrumentStatusTableVisibilityTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusTableVisibilityTableDataTable(ds.Tables["InstrumentStatusTableVisibilityTable"]));
                }
                if ((ds.Tables["InstrumentStatusSystemError"] != null)) {
                    base.Tables.Add(new InstrumentStatusSystemErrorDataTable(ds.Tables["InstrumentStatusSystemError"]));
                }
                if ((ds.Tables["InstrumentSensorStatusInfoTable"] != null)) {
                    base.Tables.Add(new InstrumentSensorStatusInfoTableDataTable(ds.Tables["InstrumentSensorStatusInfoTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusReportTableHeaderDomainTableDataTable InstrumentStatusReportTableHeaderDomainTable {
            get {
                return this.tableInstrumentStatusReportTableHeaderDomainTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusReportCalibrationDomainTableDataTable InstrumentStatusReportCalibrationDomainTable {
            get {
                return this.tableInstrumentStatusReportCalibrationDomainTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusUserListTableDataTable InstrumentStatusUserListTable {
            get {
                return this.tableInstrumentStatusUserListTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusCellTypeTableDataTable InstrumentStatusCellTypeTable {
            get {
                return this.tableInstrumentStatusCellTypeTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusRegentParametersTableDataTable InstrumentStatusRegentParametersTable {
            get {
                return this.tableInstrumentStatusRegentParametersTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusTableVisibilityTableDataTable InstrumentStatusTableVisibilityTable {
            get {
                return this.tableInstrumentStatusTableVisibilityTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusSystemErrorDataTable InstrumentStatusSystemError {
            get {
                return this.tableInstrumentStatusSystemError;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentSensorStatusInfoTableDataTable InstrumentSensorStatusInfoTable {
            get {
                return this.tableInstrumentSensorStatusInfoTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            InstrumentStatusReportDataSet cln = ((InstrumentStatusReportDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["InstrumentStatusReportTableHeaderDomainTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportTableHeaderDomainTableDataTable(ds.Tables["InstrumentStatusReportTableHeaderDomainTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportCalibrationDomainTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportCalibrationDomainTableDataTable(ds.Tables["InstrumentStatusReportCalibrationDomainTable"]));
                }
                if ((ds.Tables["InstrumentStatusUserListTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusUserListTableDataTable(ds.Tables["InstrumentStatusUserListTable"]));
                }
                if ((ds.Tables["InstrumentStatusCellTypeTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusCellTypeTableDataTable(ds.Tables["InstrumentStatusCellTypeTable"]));
                }
                if ((ds.Tables["InstrumentStatusRegentParametersTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusRegentParametersTableDataTable(ds.Tables["InstrumentStatusRegentParametersTable"]));
                }
                if ((ds.Tables["InstrumentStatusTableVisibilityTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusTableVisibilityTableDataTable(ds.Tables["InstrumentStatusTableVisibilityTable"]));
                }
                if ((ds.Tables["InstrumentStatusSystemError"] != null)) {
                    base.Tables.Add(new InstrumentStatusSystemErrorDataTable(ds.Tables["InstrumentStatusSystemError"]));
                }
                if ((ds.Tables["InstrumentSensorStatusInfoTable"] != null)) {
                    base.Tables.Add(new InstrumentSensorStatusInfoTableDataTable(ds.Tables["InstrumentSensorStatusInfoTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableInstrumentStatusReportTableHeaderDomainTable = ((InstrumentStatusReportTableHeaderDomainTableDataTable)(base.Tables["InstrumentStatusReportTableHeaderDomainTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusReportTableHeaderDomainTable != null)) {
                    this.tableInstrumentStatusReportTableHeaderDomainTable.InitVars();
                }
            }
            this.tableInstrumentStatusReportCalibrationDomainTable = ((InstrumentStatusReportCalibrationDomainTableDataTable)(base.Tables["InstrumentStatusReportCalibrationDomainTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusReportCalibrationDomainTable != null)) {
                    this.tableInstrumentStatusReportCalibrationDomainTable.InitVars();
                }
            }
            this.tableInstrumentStatusUserListTable = ((InstrumentStatusUserListTableDataTable)(base.Tables["InstrumentStatusUserListTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusUserListTable != null)) {
                    this.tableInstrumentStatusUserListTable.InitVars();
                }
            }
            this.tableInstrumentStatusCellTypeTable = ((InstrumentStatusCellTypeTableDataTable)(base.Tables["InstrumentStatusCellTypeTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusCellTypeTable != null)) {
                    this.tableInstrumentStatusCellTypeTable.InitVars();
                }
            }
            this.tableInstrumentStatusRegentParametersTable = ((InstrumentStatusRegentParametersTableDataTable)(base.Tables["InstrumentStatusRegentParametersTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusRegentParametersTable != null)) {
                    this.tableInstrumentStatusRegentParametersTable.InitVars();
                }
            }
            this.tableInstrumentStatusTableVisibilityTable = ((InstrumentStatusTableVisibilityTableDataTable)(base.Tables["InstrumentStatusTableVisibilityTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusTableVisibilityTable != null)) {
                    this.tableInstrumentStatusTableVisibilityTable.InitVars();
                }
            }
            this.tableInstrumentStatusSystemError = ((InstrumentStatusSystemErrorDataTable)(base.Tables["InstrumentStatusSystemError"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusSystemError != null)) {
                    this.tableInstrumentStatusSystemError.InitVars();
                }
            }
            this.tableInstrumentSensorStatusInfoTable = ((InstrumentSensorStatusInfoTableDataTable)(base.Tables["InstrumentSensorStatusInfoTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentSensorStatusInfoTable != null)) {
                    this.tableInstrumentSensorStatusInfoTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "InstrumentStatusReportDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/InstrumentStatusReportDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableInstrumentStatusReportTableHeaderDomainTable = new InstrumentStatusReportTableHeaderDomainTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusReportTableHeaderDomainTable);
            this.tableInstrumentStatusReportCalibrationDomainTable = new InstrumentStatusReportCalibrationDomainTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusReportCalibrationDomainTable);
            this.tableInstrumentStatusUserListTable = new InstrumentStatusUserListTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusUserListTable);
            this.tableInstrumentStatusCellTypeTable = new InstrumentStatusCellTypeTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusCellTypeTable);
            this.tableInstrumentStatusRegentParametersTable = new InstrumentStatusRegentParametersTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusRegentParametersTable);
            this.tableInstrumentStatusTableVisibilityTable = new InstrumentStatusTableVisibilityTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusTableVisibilityTable);
            this.tableInstrumentStatusSystemError = new InstrumentStatusSystemErrorDataTable();
            base.Tables.Add(this.tableInstrumentStatusSystemError);
            this.tableInstrumentSensorStatusInfoTable = new InstrumentSensorStatusInfoTableDataTable();
            base.Tables.Add(this.tableInstrumentSensorStatusInfoTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeInstrumentStatusReportTableHeaderDomainTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeInstrumentStatusReportCalibrationDomainTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeInstrumentStatusUserListTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeInstrumentStatusCellTypeTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeInstrumentStatusRegentParametersTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeInstrumentStatusTableVisibilityTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeInstrumentStatusSystemError() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeInstrumentSensorStatusInfoTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            InstrumentStatusReportDataSet ds = new InstrumentStatusReportDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void InstrumentStatusReportTableHeaderDomainTableRowChangeEventHandler(object sender, InstrumentStatusReportTableHeaderDomainTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void InstrumentStatusReportCalibrationDomainTableRowChangeEventHandler(object sender, InstrumentStatusReportCalibrationDomainTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void InstrumentStatusUserListTableRowChangeEventHandler(object sender, InstrumentStatusUserListTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void InstrumentStatusCellTypeTableRowChangeEventHandler(object sender, InstrumentStatusCellTypeTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void InstrumentStatusRegentParametersTableRowChangeEventHandler(object sender, InstrumentStatusRegentParametersTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void InstrumentStatusTableVisibilityTableRowChangeEventHandler(object sender, InstrumentStatusTableVisibilityTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void InstrumentStatusSystemErrorRowChangeEventHandler(object sender, InstrumentStatusSystemErrorRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void InstrumentSensorStatusInfoTableRowChangeEventHandler(object sender, InstrumentSensorStatusInfoTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusReportTableHeaderDomainTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusReportTableHeaderDomainTableRow> {
            
            private global::System.Data.DataColumn columnAboutHeader;
            
            private global::System.Data.DataColumn columnReagentsHeader;
            
            private global::System.Data.DataColumn columnUsersHeader;
            
            private global::System.Data.DataColumn columnCellTypesHeader;
            
            private global::System.Data.DataColumn columnAppTypes;
            
            private global::System.Data.DataColumn columnCalibrationHeader;
            
            private global::System.Data.DataColumn columnStorageHeader;
            
            private global::System.Data.DataColumn columnLowLevelsControlsHeader;
            
            private global::System.Data.DataColumn columnConcTableHeader;
            
            private global::System.Data.DataColumn columnAssayValueHeader;
            
            private global::System.Data.DataColumn columnExpirationDateHeader;
            
            private global::System.Data.DataColumn columnLotNumberHeader;
            
            private global::System.Data.DataColumn columnSensorStatusStateHeader;
            
            private global::System.Data.DataColumn columnMotorStatusStateHeader;
            
            private global::System.Data.DataColumn columnStatusStateHeader;
            
            private global::System.Data.DataColumn columnVoltageStateHeader;
            
            private global::System.Data.DataColumn columnTempStateHeader;
            
            private global::System.Data.DataColumn columnStorageSubHeader;
            
            private global::System.Data.DataColumn columnReagentsVisiblity;
            
            private global::System.Data.DataColumn columnUsersVisiblity;
            
            private global::System.Data.DataColumn columnCellTypesVisiblity;
            
            private global::System.Data.DataColumn columnAppTypesVisiblity;
            
            private global::System.Data.DataColumn columnCalibrationVisiblity;
            
            private global::System.Data.DataColumn columnStorageVisiblity;
            
            private global::System.Data.DataColumn columnLowLevelsControlsVisiblity;
            
            private global::System.Data.DataColumn columnSeverityHeader;
            
            private global::System.Data.DataColumn columnSystemHeader;
            
            private global::System.Data.DataColumn columnSubsystemHeader;
            
            private global::System.Data.DataColumn columnInstanceHeader;
            
            private global::System.Data.DataColumn columnDescriptionHeader;
            
            private global::System.Data.DataColumn columnSystemErrorHeader;
            
            private global::System.Data.DataColumn columnOpticsHeader;
            
            private global::System.Data.DataColumn columnStatusInformationHeader;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusReportTableHeaderDomainTableDataTable() {
                this.TableName = "InstrumentStatusReportTableHeaderDomainTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentStatusReportTableHeaderDomainTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected InstrumentStatusReportTableHeaderDomainTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AboutHeaderColumn {
                get {
                    return this.columnAboutHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReagentsHeaderColumn {
                get {
                    return this.columnReagentsHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UsersHeaderColumn {
                get {
                    return this.columnUsersHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CellTypesHeaderColumn {
                get {
                    return this.columnCellTypesHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AppTypesColumn {
                get {
                    return this.columnAppTypes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CalibrationHeaderColumn {
                get {
                    return this.columnCalibrationHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StorageHeaderColumn {
                get {
                    return this.columnStorageHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LowLevelsControlsHeaderColumn {
                get {
                    return this.columnLowLevelsControlsHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ConcTableHeaderColumn {
                get {
                    return this.columnConcTableHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AssayValueHeaderColumn {
                get {
                    return this.columnAssayValueHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ExpirationDateHeaderColumn {
                get {
                    return this.columnExpirationDateHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LotNumberHeaderColumn {
                get {
                    return this.columnLotNumberHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SensorStatusStateHeaderColumn {
                get {
                    return this.columnSensorStatusStateHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MotorStatusStateHeaderColumn {
                get {
                    return this.columnMotorStatusStateHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StatusStateHeaderColumn {
                get {
                    return this.columnStatusStateHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn VoltageStateHeaderColumn {
                get {
                    return this.columnVoltageStateHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TempStateHeaderColumn {
                get {
                    return this.columnTempStateHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StorageSubHeaderColumn {
                get {
                    return this.columnStorageSubHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReagentsVisiblityColumn {
                get {
                    return this.columnReagentsVisiblity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UsersVisiblityColumn {
                get {
                    return this.columnUsersVisiblity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CellTypesVisiblityColumn {
                get {
                    return this.columnCellTypesVisiblity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AppTypesVisiblityColumn {
                get {
                    return this.columnAppTypesVisiblity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CalibrationVisiblityColumn {
                get {
                    return this.columnCalibrationVisiblity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StorageVisiblityColumn {
                get {
                    return this.columnStorageVisiblity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LowLevelsControlsVisiblityColumn {
                get {
                    return this.columnLowLevelsControlsVisiblity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SeverityHeaderColumn {
                get {
                    return this.columnSeverityHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SystemHeaderColumn {
                get {
                    return this.columnSystemHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubsystemHeaderColumn {
                get {
                    return this.columnSubsystemHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InstanceHeaderColumn {
                get {
                    return this.columnInstanceHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DescriptionHeaderColumn {
                get {
                    return this.columnDescriptionHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SystemErrorHeaderColumn {
                get {
                    return this.columnSystemErrorHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OpticsHeaderColumn {
                get {
                    return this.columnOpticsHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StatusInformationHeaderColumn {
                get {
                    return this.columnStatusInformationHeader;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusReportTableHeaderDomainTableRow this[int index] {
                get {
                    return ((InstrumentStatusReportTableHeaderDomainTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusReportTableHeaderDomainTableRowChangeEventHandler InstrumentStatusReportTableHeaderDomainTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusReportTableHeaderDomainTableRowChangeEventHandler InstrumentStatusReportTableHeaderDomainTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusReportTableHeaderDomainTableRowChangeEventHandler InstrumentStatusReportTableHeaderDomainTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusReportTableHeaderDomainTableRowChangeEventHandler InstrumentStatusReportTableHeaderDomainTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddInstrumentStatusReportTableHeaderDomainTableRow(InstrumentStatusReportTableHeaderDomainTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusReportTableHeaderDomainTableRow AddInstrumentStatusReportTableHeaderDomainTableRow(
                        string AboutHeader, 
                        string ReagentsHeader, 
                        string UsersHeader, 
                        string CellTypesHeader, 
                        string AppTypes, 
                        string CalibrationHeader, 
                        string StorageHeader, 
                        string LowLevelsControlsHeader, 
                        string ConcTableHeader, 
                        string AssayValueHeader, 
                        string ExpirationDateHeader, 
                        string LotNumberHeader, 
                        string SensorStatusStateHeader, 
                        string MotorStatusStateHeader, 
                        string StatusStateHeader, 
                        string VoltageStateHeader, 
                        string TempStateHeader, 
                        string StorageSubHeader, 
                        string ReagentsVisiblity, 
                        string UsersVisiblity, 
                        string CellTypesVisiblity, 
                        string AppTypesVisiblity, 
                        string CalibrationVisiblity, 
                        string StorageVisiblity, 
                        string LowLevelsControlsVisiblity, 
                        string SeverityHeader, 
                        string SystemHeader, 
                        string SubsystemHeader, 
                        string InstanceHeader, 
                        string DescriptionHeader, 
                        string SystemErrorHeader, 
                        string OpticsHeader, 
                        string StatusInformationHeader) {
                InstrumentStatusReportTableHeaderDomainTableRow rowInstrumentStatusReportTableHeaderDomainTableRow = ((InstrumentStatusReportTableHeaderDomainTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AboutHeader,
                        ReagentsHeader,
                        UsersHeader,
                        CellTypesHeader,
                        AppTypes,
                        CalibrationHeader,
                        StorageHeader,
                        LowLevelsControlsHeader,
                        ConcTableHeader,
                        AssayValueHeader,
                        ExpirationDateHeader,
                        LotNumberHeader,
                        SensorStatusStateHeader,
                        MotorStatusStateHeader,
                        StatusStateHeader,
                        VoltageStateHeader,
                        TempStateHeader,
                        StorageSubHeader,
                        ReagentsVisiblity,
                        UsersVisiblity,
                        CellTypesVisiblity,
                        AppTypesVisiblity,
                        CalibrationVisiblity,
                        StorageVisiblity,
                        LowLevelsControlsVisiblity,
                        SeverityHeader,
                        SystemHeader,
                        SubsystemHeader,
                        InstanceHeader,
                        DescriptionHeader,
                        SystemErrorHeader,
                        OpticsHeader,
                        StatusInformationHeader};
                rowInstrumentStatusReportTableHeaderDomainTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusReportTableHeaderDomainTableRow);
                return rowInstrumentStatusReportTableHeaderDomainTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusReportTableHeaderDomainTableDataTable cln = ((InstrumentStatusReportTableHeaderDomainTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusReportTableHeaderDomainTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnAboutHeader = base.Columns["AboutHeader"];
                this.columnReagentsHeader = base.Columns["ReagentsHeader"];
                this.columnUsersHeader = base.Columns["UsersHeader"];
                this.columnCellTypesHeader = base.Columns["CellTypesHeader"];
                this.columnAppTypes = base.Columns["AppTypes"];
                this.columnCalibrationHeader = base.Columns["CalibrationHeader"];
                this.columnStorageHeader = base.Columns["StorageHeader"];
                this.columnLowLevelsControlsHeader = base.Columns["LowLevelsControlsHeader"];
                this.columnConcTableHeader = base.Columns["ConcTableHeader"];
                this.columnAssayValueHeader = base.Columns["AssayValueHeader"];
                this.columnExpirationDateHeader = base.Columns["ExpirationDateHeader"];
                this.columnLotNumberHeader = base.Columns["LotNumberHeader"];
                this.columnSensorStatusStateHeader = base.Columns["SensorStatusStateHeader"];
                this.columnMotorStatusStateHeader = base.Columns["MotorStatusStateHeader"];
                this.columnStatusStateHeader = base.Columns["StatusStateHeader"];
                this.columnVoltageStateHeader = base.Columns["VoltageStateHeader"];
                this.columnTempStateHeader = base.Columns["TempStateHeader"];
                this.columnStorageSubHeader = base.Columns["StorageSubHeader"];
                this.columnReagentsVisiblity = base.Columns["ReagentsVisiblity"];
                this.columnUsersVisiblity = base.Columns["UsersVisiblity"];
                this.columnCellTypesVisiblity = base.Columns["CellTypesVisiblity"];
                this.columnAppTypesVisiblity = base.Columns["AppTypesVisiblity"];
                this.columnCalibrationVisiblity = base.Columns["CalibrationVisiblity"];
                this.columnStorageVisiblity = base.Columns["StorageVisiblity"];
                this.columnLowLevelsControlsVisiblity = base.Columns["LowLevelsControlsVisiblity"];
                this.columnSeverityHeader = base.Columns["SeverityHeader"];
                this.columnSystemHeader = base.Columns["SystemHeader"];
                this.columnSubsystemHeader = base.Columns["SubsystemHeader"];
                this.columnInstanceHeader = base.Columns["InstanceHeader"];
                this.columnDescriptionHeader = base.Columns["DescriptionHeader"];
                this.columnSystemErrorHeader = base.Columns["SystemErrorHeader"];
                this.columnOpticsHeader = base.Columns["OpticsHeader"];
                this.columnStatusInformationHeader = base.Columns["StatusInformationHeader"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnAboutHeader = new global::System.Data.DataColumn("AboutHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAboutHeader);
                this.columnReagentsHeader = new global::System.Data.DataColumn("ReagentsHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReagentsHeader);
                this.columnUsersHeader = new global::System.Data.DataColumn("UsersHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsersHeader);
                this.columnCellTypesHeader = new global::System.Data.DataColumn("CellTypesHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellTypesHeader);
                this.columnAppTypes = new global::System.Data.DataColumn("AppTypes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppTypes);
                this.columnCalibrationHeader = new global::System.Data.DataColumn("CalibrationHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalibrationHeader);
                this.columnStorageHeader = new global::System.Data.DataColumn("StorageHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageHeader);
                this.columnLowLevelsControlsHeader = new global::System.Data.DataColumn("LowLevelsControlsHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLowLevelsControlsHeader);
                this.columnConcTableHeader = new global::System.Data.DataColumn("ConcTableHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConcTableHeader);
                this.columnAssayValueHeader = new global::System.Data.DataColumn("AssayValueHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssayValueHeader);
                this.columnExpirationDateHeader = new global::System.Data.DataColumn("ExpirationDateHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirationDateHeader);
                this.columnLotNumberHeader = new global::System.Data.DataColumn("LotNumberHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotNumberHeader);
                this.columnSensorStatusStateHeader = new global::System.Data.DataColumn("SensorStatusStateHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSensorStatusStateHeader);
                this.columnMotorStatusStateHeader = new global::System.Data.DataColumn("MotorStatusStateHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorStatusStateHeader);
                this.columnStatusStateHeader = new global::System.Data.DataColumn("StatusStateHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusStateHeader);
                this.columnVoltageStateHeader = new global::System.Data.DataColumn("VoltageStateHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoltageStateHeader);
                this.columnTempStateHeader = new global::System.Data.DataColumn("TempStateHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTempStateHeader);
                this.columnStorageSubHeader = new global::System.Data.DataColumn("StorageSubHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageSubHeader);
                this.columnReagentsVisiblity = new global::System.Data.DataColumn("ReagentsVisiblity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReagentsVisiblity);
                this.columnUsersVisiblity = new global::System.Data.DataColumn("UsersVisiblity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsersVisiblity);
                this.columnCellTypesVisiblity = new global::System.Data.DataColumn("CellTypesVisiblity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellTypesVisiblity);
                this.columnAppTypesVisiblity = new global::System.Data.DataColumn("AppTypesVisiblity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppTypesVisiblity);
                this.columnCalibrationVisiblity = new global::System.Data.DataColumn("CalibrationVisiblity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalibrationVisiblity);
                this.columnStorageVisiblity = new global::System.Data.DataColumn("StorageVisiblity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageVisiblity);
                this.columnLowLevelsControlsVisiblity = new global::System.Data.DataColumn("LowLevelsControlsVisiblity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLowLevelsControlsVisiblity);
                this.columnSeverityHeader = new global::System.Data.DataColumn("SeverityHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeverityHeader);
                this.columnSystemHeader = new global::System.Data.DataColumn("SystemHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystemHeader);
                this.columnSubsystemHeader = new global::System.Data.DataColumn("SubsystemHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubsystemHeader);
                this.columnInstanceHeader = new global::System.Data.DataColumn("InstanceHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstanceHeader);
                this.columnDescriptionHeader = new global::System.Data.DataColumn("DescriptionHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescriptionHeader);
                this.columnSystemErrorHeader = new global::System.Data.DataColumn("SystemErrorHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystemErrorHeader);
                this.columnOpticsHeader = new global::System.Data.DataColumn("OpticsHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOpticsHeader);
                this.columnStatusInformationHeader = new global::System.Data.DataColumn("StatusInformationHeader", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusInformationHeader);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusReportTableHeaderDomainTableRow NewInstrumentStatusReportTableHeaderDomainTableRow() {
                return ((InstrumentStatusReportTableHeaderDomainTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusReportTableHeaderDomainTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusReportTableHeaderDomainTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusReportTableHeaderDomainTableRowChanged != null)) {
                    this.InstrumentStatusReportTableHeaderDomainTableRowChanged(this, new InstrumentStatusReportTableHeaderDomainTableRowChangeEvent(((InstrumentStatusReportTableHeaderDomainTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusReportTableHeaderDomainTableRowChanging != null)) {
                    this.InstrumentStatusReportTableHeaderDomainTableRowChanging(this, new InstrumentStatusReportTableHeaderDomainTableRowChangeEvent(((InstrumentStatusReportTableHeaderDomainTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusReportTableHeaderDomainTableRowDeleted != null)) {
                    this.InstrumentStatusReportTableHeaderDomainTableRowDeleted(this, new InstrumentStatusReportTableHeaderDomainTableRowChangeEvent(((InstrumentStatusReportTableHeaderDomainTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusReportTableHeaderDomainTableRowDeleting != null)) {
                    this.InstrumentStatusReportTableHeaderDomainTableRowDeleting(this, new InstrumentStatusReportTableHeaderDomainTableRowChangeEvent(((InstrumentStatusReportTableHeaderDomainTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveInstrumentStatusReportTableHeaderDomainTableRow(InstrumentStatusReportTableHeaderDomainTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusReportDataSet ds = new InstrumentStatusReportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusReportTableHeaderDomainTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusReportCalibrationDomainTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusReportCalibrationDomainTableRow> {
            
            private global::System.Data.DataColumn columnLabelName;
            
            private global::System.Data.DataColumn columnAssayValue;
            
            private global::System.Data.DataColumn columnExpirationDate;
            
            private global::System.Data.DataColumn columnLotNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusReportCalibrationDomainTableDataTable() {
                this.TableName = "InstrumentStatusReportCalibrationDomainTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentStatusReportCalibrationDomainTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected InstrumentStatusReportCalibrationDomainTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LabelNameColumn {
                get {
                    return this.columnLabelName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AssayValueColumn {
                get {
                    return this.columnAssayValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ExpirationDateColumn {
                get {
                    return this.columnExpirationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LotNumberColumn {
                get {
                    return this.columnLotNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusReportCalibrationDomainTableRow this[int index] {
                get {
                    return ((InstrumentStatusReportCalibrationDomainTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusReportCalibrationDomainTableRowChangeEventHandler InstrumentStatusReportCalibrationDomainTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusReportCalibrationDomainTableRowChangeEventHandler InstrumentStatusReportCalibrationDomainTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusReportCalibrationDomainTableRowChangeEventHandler InstrumentStatusReportCalibrationDomainTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusReportCalibrationDomainTableRowChangeEventHandler InstrumentStatusReportCalibrationDomainTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddInstrumentStatusReportCalibrationDomainTableRow(InstrumentStatusReportCalibrationDomainTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusReportCalibrationDomainTableRow AddInstrumentStatusReportCalibrationDomainTableRow(string LabelName, string AssayValue, string ExpirationDate, string LotNumber) {
                InstrumentStatusReportCalibrationDomainTableRow rowInstrumentStatusReportCalibrationDomainTableRow = ((InstrumentStatusReportCalibrationDomainTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LabelName,
                        AssayValue,
                        ExpirationDate,
                        LotNumber};
                rowInstrumentStatusReportCalibrationDomainTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusReportCalibrationDomainTableRow);
                return rowInstrumentStatusReportCalibrationDomainTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusReportCalibrationDomainTableDataTable cln = ((InstrumentStatusReportCalibrationDomainTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusReportCalibrationDomainTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnLabelName = base.Columns["LabelName"];
                this.columnAssayValue = base.Columns["AssayValue"];
                this.columnExpirationDate = base.Columns["ExpirationDate"];
                this.columnLotNumber = base.Columns["LotNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnLabelName = new global::System.Data.DataColumn("LabelName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabelName);
                this.columnAssayValue = new global::System.Data.DataColumn("AssayValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssayValue);
                this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirationDate);
                this.columnLotNumber = new global::System.Data.DataColumn("LotNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotNumber);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusReportCalibrationDomainTableRow NewInstrumentStatusReportCalibrationDomainTableRow() {
                return ((InstrumentStatusReportCalibrationDomainTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusReportCalibrationDomainTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusReportCalibrationDomainTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusReportCalibrationDomainTableRowChanged != null)) {
                    this.InstrumentStatusReportCalibrationDomainTableRowChanged(this, new InstrumentStatusReportCalibrationDomainTableRowChangeEvent(((InstrumentStatusReportCalibrationDomainTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusReportCalibrationDomainTableRowChanging != null)) {
                    this.InstrumentStatusReportCalibrationDomainTableRowChanging(this, new InstrumentStatusReportCalibrationDomainTableRowChangeEvent(((InstrumentStatusReportCalibrationDomainTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusReportCalibrationDomainTableRowDeleted != null)) {
                    this.InstrumentStatusReportCalibrationDomainTableRowDeleted(this, new InstrumentStatusReportCalibrationDomainTableRowChangeEvent(((InstrumentStatusReportCalibrationDomainTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusReportCalibrationDomainTableRowDeleting != null)) {
                    this.InstrumentStatusReportCalibrationDomainTableRowDeleting(this, new InstrumentStatusReportCalibrationDomainTableRowChangeEvent(((InstrumentStatusReportCalibrationDomainTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveInstrumentStatusReportCalibrationDomainTableRow(InstrumentStatusReportCalibrationDomainTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusReportDataSet ds = new InstrumentStatusReportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusReportCalibrationDomainTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusUserListTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusUserListTableRow> {
            
            private global::System.Data.DataColumn columnColumnOne;
            
            private global::System.Data.DataColumn columnColumnTwo;
            
            private global::System.Data.DataColumn columnColumnThree;
            
            private global::System.Data.DataColumn columnColumnFour;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusUserListTableDataTable() {
                this.TableName = "InstrumentStatusUserListTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentStatusUserListTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected InstrumentStatusUserListTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ColumnOneColumn {
                get {
                    return this.columnColumnOne;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ColumnTwoColumn {
                get {
                    return this.columnColumnTwo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ColumnThreeColumn {
                get {
                    return this.columnColumnThree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ColumnFourColumn {
                get {
                    return this.columnColumnFour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusUserListTableRow this[int index] {
                get {
                    return ((InstrumentStatusUserListTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusUserListTableRowChangeEventHandler InstrumentStatusUserListTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusUserListTableRowChangeEventHandler InstrumentStatusUserListTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusUserListTableRowChangeEventHandler InstrumentStatusUserListTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusUserListTableRowChangeEventHandler InstrumentStatusUserListTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddInstrumentStatusUserListTableRow(InstrumentStatusUserListTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusUserListTableRow AddInstrumentStatusUserListTableRow(string ColumnOne, string ColumnTwo, string ColumnThree, string ColumnFour) {
                InstrumentStatusUserListTableRow rowInstrumentStatusUserListTableRow = ((InstrumentStatusUserListTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ColumnOne,
                        ColumnTwo,
                        ColumnThree,
                        ColumnFour};
                rowInstrumentStatusUserListTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusUserListTableRow);
                return rowInstrumentStatusUserListTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusUserListTableDataTable cln = ((InstrumentStatusUserListTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusUserListTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnColumnOne = base.Columns["ColumnOne"];
                this.columnColumnTwo = base.Columns["ColumnTwo"];
                this.columnColumnThree = base.Columns["ColumnThree"];
                this.columnColumnFour = base.Columns["ColumnFour"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnColumnOne = new global::System.Data.DataColumn("ColumnOne", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnOne);
                this.columnColumnTwo = new global::System.Data.DataColumn("ColumnTwo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnTwo);
                this.columnColumnThree = new global::System.Data.DataColumn("ColumnThree", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnThree);
                this.columnColumnFour = new global::System.Data.DataColumn("ColumnFour", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnFour);
                this.columnColumnOne.Caption = "PartNumber";
                this.columnColumnTwo.Caption = "LotNumber";
                this.columnColumnThree.Caption = "ExpirationDate";
                this.columnColumnFour.Caption = "UsesTotal";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusUserListTableRow NewInstrumentStatusUserListTableRow() {
                return ((InstrumentStatusUserListTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusUserListTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusUserListTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusUserListTableRowChanged != null)) {
                    this.InstrumentStatusUserListTableRowChanged(this, new InstrumentStatusUserListTableRowChangeEvent(((InstrumentStatusUserListTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusUserListTableRowChanging != null)) {
                    this.InstrumentStatusUserListTableRowChanging(this, new InstrumentStatusUserListTableRowChangeEvent(((InstrumentStatusUserListTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusUserListTableRowDeleted != null)) {
                    this.InstrumentStatusUserListTableRowDeleted(this, new InstrumentStatusUserListTableRowChangeEvent(((InstrumentStatusUserListTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusUserListTableRowDeleting != null)) {
                    this.InstrumentStatusUserListTableRowDeleting(this, new InstrumentStatusUserListTableRowChangeEvent(((InstrumentStatusUserListTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveInstrumentStatusUserListTableRow(InstrumentStatusUserListTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusReportDataSet ds = new InstrumentStatusReportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusUserListTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusCellTypeTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusCellTypeTableRow> {
            
            private global::System.Data.DataColumn columnColumnOne;
            
            private global::System.Data.DataColumn columnColumnTwo;
            
            private global::System.Data.DataColumn columnColumnThree;
            
            private global::System.Data.DataColumn columnColumnFour;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusCellTypeTableDataTable() {
                this.TableName = "InstrumentStatusCellTypeTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentStatusCellTypeTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected InstrumentStatusCellTypeTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ColumnOneColumn {
                get {
                    return this.columnColumnOne;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ColumnTwoColumn {
                get {
                    return this.columnColumnTwo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ColumnThreeColumn {
                get {
                    return this.columnColumnThree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ColumnFourColumn {
                get {
                    return this.columnColumnFour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusCellTypeTableRow this[int index] {
                get {
                    return ((InstrumentStatusCellTypeTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusCellTypeTableRowChangeEventHandler InstrumentStatusCellTypeTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusCellTypeTableRowChangeEventHandler InstrumentStatusCellTypeTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusCellTypeTableRowChangeEventHandler InstrumentStatusCellTypeTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusCellTypeTableRowChangeEventHandler InstrumentStatusCellTypeTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddInstrumentStatusCellTypeTableRow(InstrumentStatusCellTypeTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusCellTypeTableRow AddInstrumentStatusCellTypeTableRow(string ColumnOne, string ColumnTwo, string ColumnThree, string ColumnFour) {
                InstrumentStatusCellTypeTableRow rowInstrumentStatusCellTypeTableRow = ((InstrumentStatusCellTypeTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ColumnOne,
                        ColumnTwo,
                        ColumnThree,
                        ColumnFour};
                rowInstrumentStatusCellTypeTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusCellTypeTableRow);
                return rowInstrumentStatusCellTypeTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusCellTypeTableDataTable cln = ((InstrumentStatusCellTypeTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusCellTypeTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnColumnOne = base.Columns["ColumnOne"];
                this.columnColumnTwo = base.Columns["ColumnTwo"];
                this.columnColumnThree = base.Columns["ColumnThree"];
                this.columnColumnFour = base.Columns["ColumnFour"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnColumnOne = new global::System.Data.DataColumn("ColumnOne", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnOne);
                this.columnColumnTwo = new global::System.Data.DataColumn("ColumnTwo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnTwo);
                this.columnColumnThree = new global::System.Data.DataColumn("ColumnThree", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnThree);
                this.columnColumnFour = new global::System.Data.DataColumn("ColumnFour", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnFour);
                this.columnColumnOne.Caption = "PartNumber";
                this.columnColumnTwo.Caption = "LotNumber";
                this.columnColumnThree.Caption = "ExpirationDate";
                this.columnColumnFour.Caption = "UsesTotal";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusCellTypeTableRow NewInstrumentStatusCellTypeTableRow() {
                return ((InstrumentStatusCellTypeTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusCellTypeTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusCellTypeTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusCellTypeTableRowChanged != null)) {
                    this.InstrumentStatusCellTypeTableRowChanged(this, new InstrumentStatusCellTypeTableRowChangeEvent(((InstrumentStatusCellTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusCellTypeTableRowChanging != null)) {
                    this.InstrumentStatusCellTypeTableRowChanging(this, new InstrumentStatusCellTypeTableRowChangeEvent(((InstrumentStatusCellTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusCellTypeTableRowDeleted != null)) {
                    this.InstrumentStatusCellTypeTableRowDeleted(this, new InstrumentStatusCellTypeTableRowChangeEvent(((InstrumentStatusCellTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusCellTypeTableRowDeleting != null)) {
                    this.InstrumentStatusCellTypeTableRowDeleting(this, new InstrumentStatusCellTypeTableRowChangeEvent(((InstrumentStatusCellTypeTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveInstrumentStatusCellTypeTableRow(InstrumentStatusCellTypeTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusReportDataSet ds = new InstrumentStatusReportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusCellTypeTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusRegentParametersTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusRegentParametersTableRow> {
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnColumnOne;
            
            private global::System.Data.DataColumn columnColumnTwo;
            
            private global::System.Data.DataColumn columnColumnThree;
            
            private global::System.Data.DataColumn columnColumnFour;
            
            private global::System.Data.DataColumn columnColumnFive;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusRegentParametersTableDataTable() {
                this.TableName = "InstrumentStatusRegentParametersTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentStatusRegentParametersTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected InstrumentStatusRegentParametersTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ColumnOneColumn {
                get {
                    return this.columnColumnOne;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ColumnTwoColumn {
                get {
                    return this.columnColumnTwo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ColumnThreeColumn {
                get {
                    return this.columnColumnThree;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ColumnFourColumn {
                get {
                    return this.columnColumnFour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ColumnFiveColumn {
                get {
                    return this.columnColumnFive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusRegentParametersTableRow this[int index] {
                get {
                    return ((InstrumentStatusRegentParametersTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusRegentParametersTableRowChangeEventHandler InstrumentStatusRegentParametersTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusRegentParametersTableRowChangeEventHandler InstrumentStatusRegentParametersTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusRegentParametersTableRowChangeEventHandler InstrumentStatusRegentParametersTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusRegentParametersTableRowChangeEventHandler InstrumentStatusRegentParametersTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddInstrumentStatusRegentParametersTableRow(InstrumentStatusRegentParametersTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusRegentParametersTableRow AddInstrumentStatusRegentParametersTableRow(string Name, string ColumnOne, string ColumnTwo, string ColumnThree, string ColumnFour, string ColumnFive) {
                InstrumentStatusRegentParametersTableRow rowInstrumentStatusRegentParametersTableRow = ((InstrumentStatusRegentParametersTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Name,
                        ColumnOne,
                        ColumnTwo,
                        ColumnThree,
                        ColumnFour,
                        ColumnFive};
                rowInstrumentStatusRegentParametersTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusRegentParametersTableRow);
                return rowInstrumentStatusRegentParametersTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusRegentParametersTableDataTable cln = ((InstrumentStatusRegentParametersTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusRegentParametersTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnName = base.Columns["Name"];
                this.columnColumnOne = base.Columns["ColumnOne"];
                this.columnColumnTwo = base.Columns["ColumnTwo"];
                this.columnColumnThree = base.Columns["ColumnThree"];
                this.columnColumnFour = base.Columns["ColumnFour"];
                this.columnColumnFive = base.Columns["ColumnFive"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnColumnOne = new global::System.Data.DataColumn("ColumnOne", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnOne);
                this.columnColumnTwo = new global::System.Data.DataColumn("ColumnTwo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnTwo);
                this.columnColumnThree = new global::System.Data.DataColumn("ColumnThree", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnThree);
                this.columnColumnFour = new global::System.Data.DataColumn("ColumnFour", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnFour);
                this.columnColumnFive = new global::System.Data.DataColumn("ColumnFive", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnFive);
                this.columnName.Caption = "Container";
                this.columnColumnOne.Caption = "PartNumber";
                this.columnColumnTwo.Caption = "LotNumber";
                this.columnColumnThree.Caption = "ExpirationDate";
                this.columnColumnFour.Caption = "UsesTotal";
                this.columnColumnFive.Caption = "Header";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusRegentParametersTableRow NewInstrumentStatusRegentParametersTableRow() {
                return ((InstrumentStatusRegentParametersTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusRegentParametersTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusRegentParametersTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusRegentParametersTableRowChanged != null)) {
                    this.InstrumentStatusRegentParametersTableRowChanged(this, new InstrumentStatusRegentParametersTableRowChangeEvent(((InstrumentStatusRegentParametersTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusRegentParametersTableRowChanging != null)) {
                    this.InstrumentStatusRegentParametersTableRowChanging(this, new InstrumentStatusRegentParametersTableRowChangeEvent(((InstrumentStatusRegentParametersTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusRegentParametersTableRowDeleted != null)) {
                    this.InstrumentStatusRegentParametersTableRowDeleted(this, new InstrumentStatusRegentParametersTableRowChangeEvent(((InstrumentStatusRegentParametersTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusRegentParametersTableRowDeleting != null)) {
                    this.InstrumentStatusRegentParametersTableRowDeleting(this, new InstrumentStatusRegentParametersTableRowChangeEvent(((InstrumentStatusRegentParametersTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveInstrumentStatusRegentParametersTableRow(InstrumentStatusRegentParametersTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusReportDataSet ds = new InstrumentStatusReportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusRegentParametersTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusTableVisibilityTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusTableVisibilityTableRow> {
            
            private global::System.Data.DataColumn columnReagentsVisiblity;
            
            private global::System.Data.DataColumn columnUsersVisiblity;
            
            private global::System.Data.DataColumn columnCellTypesVisiblity;
            
            private global::System.Data.DataColumn columnAppTypesVisiblity;
            
            private global::System.Data.DataColumn columnCalibrationVisiblity;
            
            private global::System.Data.DataColumn columnStorageVisiblity;
            
            private global::System.Data.DataColumn columnLowLevelsControlsVisiblity;
            
            private global::System.Data.DataColumn columnSystemErrorVisibility;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusTableVisibilityTableDataTable() {
                this.TableName = "InstrumentStatusTableVisibilityTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentStatusTableVisibilityTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected InstrumentStatusTableVisibilityTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReagentsVisiblityColumn {
                get {
                    return this.columnReagentsVisiblity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UsersVisiblityColumn {
                get {
                    return this.columnUsersVisiblity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CellTypesVisiblityColumn {
                get {
                    return this.columnCellTypesVisiblity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AppTypesVisiblityColumn {
                get {
                    return this.columnAppTypesVisiblity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CalibrationVisiblityColumn {
                get {
                    return this.columnCalibrationVisiblity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StorageVisiblityColumn {
                get {
                    return this.columnStorageVisiblity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LowLevelsControlsVisiblityColumn {
                get {
                    return this.columnLowLevelsControlsVisiblity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SystemErrorVisibilityColumn {
                get {
                    return this.columnSystemErrorVisibility;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusTableVisibilityTableRow this[int index] {
                get {
                    return ((InstrumentStatusTableVisibilityTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusTableVisibilityTableRowChangeEventHandler InstrumentStatusTableVisibilityTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusTableVisibilityTableRowChangeEventHandler InstrumentStatusTableVisibilityTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusTableVisibilityTableRowChangeEventHandler InstrumentStatusTableVisibilityTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusTableVisibilityTableRowChangeEventHandler InstrumentStatusTableVisibilityTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddInstrumentStatusTableVisibilityTableRow(InstrumentStatusTableVisibilityTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusTableVisibilityTableRow AddInstrumentStatusTableVisibilityTableRow(string ReagentsVisiblity, string UsersVisiblity, string CellTypesVisiblity, string AppTypesVisiblity, string CalibrationVisiblity, string StorageVisiblity, string LowLevelsControlsVisiblity, string SystemErrorVisibility) {
                InstrumentStatusTableVisibilityTableRow rowInstrumentStatusTableVisibilityTableRow = ((InstrumentStatusTableVisibilityTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ReagentsVisiblity,
                        UsersVisiblity,
                        CellTypesVisiblity,
                        AppTypesVisiblity,
                        CalibrationVisiblity,
                        StorageVisiblity,
                        LowLevelsControlsVisiblity,
                        SystemErrorVisibility};
                rowInstrumentStatusTableVisibilityTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusTableVisibilityTableRow);
                return rowInstrumentStatusTableVisibilityTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusTableVisibilityTableDataTable cln = ((InstrumentStatusTableVisibilityTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusTableVisibilityTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnReagentsVisiblity = base.Columns["ReagentsVisiblity"];
                this.columnUsersVisiblity = base.Columns["UsersVisiblity"];
                this.columnCellTypesVisiblity = base.Columns["CellTypesVisiblity"];
                this.columnAppTypesVisiblity = base.Columns["AppTypesVisiblity"];
                this.columnCalibrationVisiblity = base.Columns["CalibrationVisiblity"];
                this.columnStorageVisiblity = base.Columns["StorageVisiblity"];
                this.columnLowLevelsControlsVisiblity = base.Columns["LowLevelsControlsVisiblity"];
                this.columnSystemErrorVisibility = base.Columns["SystemErrorVisibility"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnReagentsVisiblity = new global::System.Data.DataColumn("ReagentsVisiblity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReagentsVisiblity);
                this.columnUsersVisiblity = new global::System.Data.DataColumn("UsersVisiblity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsersVisiblity);
                this.columnCellTypesVisiblity = new global::System.Data.DataColumn("CellTypesVisiblity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellTypesVisiblity);
                this.columnAppTypesVisiblity = new global::System.Data.DataColumn("AppTypesVisiblity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppTypesVisiblity);
                this.columnCalibrationVisiblity = new global::System.Data.DataColumn("CalibrationVisiblity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalibrationVisiblity);
                this.columnStorageVisiblity = new global::System.Data.DataColumn("StorageVisiblity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageVisiblity);
                this.columnLowLevelsControlsVisiblity = new global::System.Data.DataColumn("LowLevelsControlsVisiblity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLowLevelsControlsVisiblity);
                this.columnSystemErrorVisibility = new global::System.Data.DataColumn("SystemErrorVisibility", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystemErrorVisibility);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusTableVisibilityTableRow NewInstrumentStatusTableVisibilityTableRow() {
                return ((InstrumentStatusTableVisibilityTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusTableVisibilityTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusTableVisibilityTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusTableVisibilityTableRowChanged != null)) {
                    this.InstrumentStatusTableVisibilityTableRowChanged(this, new InstrumentStatusTableVisibilityTableRowChangeEvent(((InstrumentStatusTableVisibilityTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusTableVisibilityTableRowChanging != null)) {
                    this.InstrumentStatusTableVisibilityTableRowChanging(this, new InstrumentStatusTableVisibilityTableRowChangeEvent(((InstrumentStatusTableVisibilityTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusTableVisibilityTableRowDeleted != null)) {
                    this.InstrumentStatusTableVisibilityTableRowDeleted(this, new InstrumentStatusTableVisibilityTableRowChangeEvent(((InstrumentStatusTableVisibilityTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusTableVisibilityTableRowDeleting != null)) {
                    this.InstrumentStatusTableVisibilityTableRowDeleting(this, new InstrumentStatusTableVisibilityTableRowChangeEvent(((InstrumentStatusTableVisibilityTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveInstrumentStatusTableVisibilityTableRow(InstrumentStatusTableVisibilityTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusReportDataSet ds = new InstrumentStatusReportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusTableVisibilityTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusSystemErrorDataTable : global::System.Data.TypedTableBase<InstrumentStatusSystemErrorRow> {
            
            private global::System.Data.DataColumn columnSeverity;
            
            private global::System.Data.DataColumn columnSystem;
            
            private global::System.Data.DataColumn columnSubsystem;
            
            private global::System.Data.DataColumn columnInstance;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusSystemErrorDataTable() {
                this.TableName = "InstrumentStatusSystemError";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentStatusSystemErrorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected InstrumentStatusSystemErrorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SeverityColumn {
                get {
                    return this.columnSeverity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SystemColumn {
                get {
                    return this.columnSystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SubsystemColumn {
                get {
                    return this.columnSubsystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InstanceColumn {
                get {
                    return this.columnInstance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusSystemErrorRow this[int index] {
                get {
                    return ((InstrumentStatusSystemErrorRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusSystemErrorRowChangeEventHandler InstrumentStatusSystemErrorRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusSystemErrorRowChangeEventHandler InstrumentStatusSystemErrorRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusSystemErrorRowChangeEventHandler InstrumentStatusSystemErrorRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentStatusSystemErrorRowChangeEventHandler InstrumentStatusSystemErrorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddInstrumentStatusSystemErrorRow(InstrumentStatusSystemErrorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusSystemErrorRow AddInstrumentStatusSystemErrorRow(string Severity, string System, string Subsystem, string Instance, string Description) {
                InstrumentStatusSystemErrorRow rowInstrumentStatusSystemErrorRow = ((InstrumentStatusSystemErrorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Severity,
                        System,
                        Subsystem,
                        Instance,
                        Description};
                rowInstrumentStatusSystemErrorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusSystemErrorRow);
                return rowInstrumentStatusSystemErrorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusSystemErrorDataTable cln = ((InstrumentStatusSystemErrorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusSystemErrorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSeverity = base.Columns["Severity"];
                this.columnSystem = base.Columns["System"];
                this.columnSubsystem = base.Columns["Subsystem"];
                this.columnInstance = base.Columns["Instance"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSeverity = new global::System.Data.DataColumn("Severity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeverity);
                this.columnSystem = new global::System.Data.DataColumn("System", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystem);
                this.columnSubsystem = new global::System.Data.DataColumn("Subsystem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubsystem);
                this.columnInstance = new global::System.Data.DataColumn("Instance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstance);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusSystemErrorRow NewInstrumentStatusSystemErrorRow() {
                return ((InstrumentStatusSystemErrorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusSystemErrorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusSystemErrorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusSystemErrorRowChanged != null)) {
                    this.InstrumentStatusSystemErrorRowChanged(this, new InstrumentStatusSystemErrorRowChangeEvent(((InstrumentStatusSystemErrorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusSystemErrorRowChanging != null)) {
                    this.InstrumentStatusSystemErrorRowChanging(this, new InstrumentStatusSystemErrorRowChangeEvent(((InstrumentStatusSystemErrorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusSystemErrorRowDeleted != null)) {
                    this.InstrumentStatusSystemErrorRowDeleted(this, new InstrumentStatusSystemErrorRowChangeEvent(((InstrumentStatusSystemErrorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusSystemErrorRowDeleting != null)) {
                    this.InstrumentStatusSystemErrorRowDeleting(this, new InstrumentStatusSystemErrorRowChangeEvent(((InstrumentStatusSystemErrorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveInstrumentStatusSystemErrorRow(InstrumentStatusSystemErrorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusReportDataSet ds = new InstrumentStatusReportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusSystemErrorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentSensorStatusInfoTableDataTable : global::System.Data.TypedTableBase<InstrumentSensorStatusInfoTableRow> {
            
            private global::System.Data.DataColumn columnActive;
            
            private global::System.Data.DataColumn columnInActive;
            
            private global::System.Data.DataColumn columnUnKnown;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentSensorStatusInfoTableDataTable() {
                this.TableName = "InstrumentSensorStatusInfoTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentSensorStatusInfoTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected InstrumentSensorStatusInfoTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ActiveColumn {
                get {
                    return this.columnActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InActiveColumn {
                get {
                    return this.columnInActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UnKnownColumn {
                get {
                    return this.columnUnKnown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentSensorStatusInfoTableRow this[int index] {
                get {
                    return ((InstrumentSensorStatusInfoTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentSensorStatusInfoTableRowChangeEventHandler InstrumentSensorStatusInfoTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentSensorStatusInfoTableRowChangeEventHandler InstrumentSensorStatusInfoTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentSensorStatusInfoTableRowChangeEventHandler InstrumentSensorStatusInfoTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event InstrumentSensorStatusInfoTableRowChangeEventHandler InstrumentSensorStatusInfoTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddInstrumentSensorStatusInfoTableRow(InstrumentSensorStatusInfoTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentSensorStatusInfoTableRow AddInstrumentSensorStatusInfoTableRow(string Active, string InActive, string UnKnown) {
                InstrumentSensorStatusInfoTableRow rowInstrumentSensorStatusInfoTableRow = ((InstrumentSensorStatusInfoTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Active,
                        InActive,
                        UnKnown};
                rowInstrumentSensorStatusInfoTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentSensorStatusInfoTableRow);
                return rowInstrumentSensorStatusInfoTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentSensorStatusInfoTableDataTable cln = ((InstrumentSensorStatusInfoTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentSensorStatusInfoTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnActive = base.Columns["Active"];
                this.columnInActive = base.Columns["InActive"];
                this.columnUnKnown = base.Columns["UnKnown"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnActive = new global::System.Data.DataColumn("Active", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive);
                this.columnInActive = new global::System.Data.DataColumn("InActive", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInActive);
                this.columnUnKnown = new global::System.Data.DataColumn("UnKnown", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnKnown);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentSensorStatusInfoTableRow NewInstrumentSensorStatusInfoTableRow() {
                return ((InstrumentSensorStatusInfoTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentSensorStatusInfoTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentSensorStatusInfoTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentSensorStatusInfoTableRowChanged != null)) {
                    this.InstrumentSensorStatusInfoTableRowChanged(this, new InstrumentSensorStatusInfoTableRowChangeEvent(((InstrumentSensorStatusInfoTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentSensorStatusInfoTableRowChanging != null)) {
                    this.InstrumentSensorStatusInfoTableRowChanging(this, new InstrumentSensorStatusInfoTableRowChangeEvent(((InstrumentSensorStatusInfoTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentSensorStatusInfoTableRowDeleted != null)) {
                    this.InstrumentSensorStatusInfoTableRowDeleted(this, new InstrumentSensorStatusInfoTableRowChangeEvent(((InstrumentSensorStatusInfoTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentSensorStatusInfoTableRowDeleting != null)) {
                    this.InstrumentSensorStatusInfoTableRowDeleting(this, new InstrumentSensorStatusInfoTableRowChangeEvent(((InstrumentSensorStatusInfoTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveInstrumentSensorStatusInfoTableRow(InstrumentSensorStatusInfoTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusReportDataSet ds = new InstrumentStatusReportDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentSensorStatusInfoTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusReportTableHeaderDomainTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusReportTableHeaderDomainTableDataTable tableInstrumentStatusReportTableHeaderDomainTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentStatusReportTableHeaderDomainTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusReportTableHeaderDomainTable = ((InstrumentStatusReportTableHeaderDomainTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AboutHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.AboutHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AboutHeader\' in table \'InstrumentStatusReportTableHeaderDom" +
                                "ainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.AboutHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ReagentsHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.ReagentsHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReagentsHeader\' in table \'InstrumentStatusReportTableHeader" +
                                "DomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.ReagentsHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UsersHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.UsersHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsersHeader\' in table \'InstrumentStatusReportTableHeaderDom" +
                                "ainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.UsersHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CellTypesHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.CellTypesHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CellTypesHeader\' in table \'InstrumentStatusReportTableHeade" +
                                "rDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.CellTypesHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AppTypes {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.AppTypesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppTypes\' in table \'InstrumentStatusReportTableHeaderDomain" +
                                "Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.AppTypesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CalibrationHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.CalibrationHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalibrationHeader\' in table \'InstrumentStatusReportTableHea" +
                                "derDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.CalibrationHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StorageHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.StorageHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StorageHeader\' in table \'InstrumentStatusReportTableHeaderD" +
                                "omainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.StorageHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LowLevelsControlsHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.LowLevelsControlsHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LowLevelsControlsHeader\' in table \'InstrumentStatusReportTa" +
                                "bleHeaderDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.LowLevelsControlsHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ConcTableHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.ConcTableHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConcTableHeader\' in table \'InstrumentStatusReportTableHeade" +
                                "rDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.ConcTableHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AssayValueHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.AssayValueHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssayValueHeader\' in table \'InstrumentStatusReportTableHead" +
                                "erDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.AssayValueHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ExpirationDateHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.ExpirationDateHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpirationDateHeader\' in table \'InstrumentStatusReportTable" +
                                "HeaderDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.ExpirationDateHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LotNumberHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.LotNumberHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LotNumberHeader\' in table \'InstrumentStatusReportTableHeade" +
                                "rDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.LotNumberHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SensorStatusStateHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.SensorStatusStateHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SensorStatusStateHeader\' in table \'InstrumentStatusReportTa" +
                                "bleHeaderDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.SensorStatusStateHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MotorStatusStateHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.MotorStatusStateHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorStatusStateHeader\' in table \'InstrumentStatusReportTab" +
                                "leHeaderDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.MotorStatusStateHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StatusStateHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.StatusStateHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusStateHeader\' in table \'InstrumentStatusReportTableHea" +
                                "derDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.StatusStateHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string VoltageStateHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.VoltageStateHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VoltageStateHeader\' in table \'InstrumentStatusReportTableHe" +
                                "aderDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.VoltageStateHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TempStateHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.TempStateHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TempStateHeader\' in table \'InstrumentStatusReportTableHeade" +
                                "rDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.TempStateHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StorageSubHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.StorageSubHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StorageSubHeader\' in table \'InstrumentStatusReportTableHead" +
                                "erDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.StorageSubHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ReagentsVisiblity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.ReagentsVisiblityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReagentsVisiblity\' in table \'InstrumentStatusReportTableHea" +
                                "derDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.ReagentsVisiblityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UsersVisiblity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.UsersVisiblityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsersVisiblity\' in table \'InstrumentStatusReportTableHeader" +
                                "DomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.UsersVisiblityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CellTypesVisiblity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.CellTypesVisiblityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CellTypesVisiblity\' in table \'InstrumentStatusReportTableHe" +
                                "aderDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.CellTypesVisiblityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AppTypesVisiblity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.AppTypesVisiblityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppTypesVisiblity\' in table \'InstrumentStatusReportTableHea" +
                                "derDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.AppTypesVisiblityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CalibrationVisiblity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.CalibrationVisiblityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalibrationVisiblity\' in table \'InstrumentStatusReportTable" +
                                "HeaderDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.CalibrationVisiblityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StorageVisiblity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.StorageVisiblityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StorageVisiblity\' in table \'InstrumentStatusReportTableHead" +
                                "erDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.StorageVisiblityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LowLevelsControlsVisiblity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.LowLevelsControlsVisiblityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LowLevelsControlsVisiblity\' in table \'InstrumentStatusRepor" +
                                "tTableHeaderDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.LowLevelsControlsVisiblityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SeverityHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.SeverityHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeverityHeader\' in table \'InstrumentStatusReportTableHeader" +
                                "DomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.SeverityHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SystemHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.SystemHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SystemHeader\' in table \'InstrumentStatusReportTableHeaderDo" +
                                "mainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.SystemHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SubsystemHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.SubsystemHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubsystemHeader\' in table \'InstrumentStatusReportTableHeade" +
                                "rDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.SubsystemHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string InstanceHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.InstanceHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstanceHeader\' in table \'InstrumentStatusReportTableHeader" +
                                "DomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.InstanceHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DescriptionHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.DescriptionHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DescriptionHeader\' in table \'InstrumentStatusReportTableHea" +
                                "derDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.DescriptionHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SystemErrorHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.SystemErrorHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SystemErrorHeader\' in table \'InstrumentStatusReportTableHea" +
                                "derDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.SystemErrorHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OpticsHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.OpticsHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OpticsHeader\' in table \'InstrumentStatusReportTableHeaderDo" +
                                "mainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.OpticsHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StatusInformationHeader {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportTableHeaderDomainTable.StatusInformationHeaderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusInformationHeader\' in table \'InstrumentStatusReportTa" +
                                "bleHeaderDomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportTableHeaderDomainTable.StatusInformationHeaderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAboutHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.AboutHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAboutHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.AboutHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsReagentsHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.ReagentsHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetReagentsHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.ReagentsHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUsersHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.UsersHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUsersHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.UsersHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCellTypesHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.CellTypesHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCellTypesHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.CellTypesHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAppTypesNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.AppTypesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAppTypesNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.AppTypesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCalibrationHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.CalibrationHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCalibrationHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.CalibrationHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStorageHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.StorageHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStorageHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.StorageHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLowLevelsControlsHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.LowLevelsControlsHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLowLevelsControlsHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.LowLevelsControlsHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsConcTableHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.ConcTableHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetConcTableHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.ConcTableHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAssayValueHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.AssayValueHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAssayValueHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.AssayValueHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsExpirationDateHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.ExpirationDateHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetExpirationDateHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.ExpirationDateHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLotNumberHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.LotNumberHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLotNumberHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.LotNumberHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSensorStatusStateHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.SensorStatusStateHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSensorStatusStateHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.SensorStatusStateHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMotorStatusStateHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.MotorStatusStateHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMotorStatusStateHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.MotorStatusStateHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStatusStateHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.StatusStateHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStatusStateHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.StatusStateHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsVoltageStateHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.VoltageStateHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetVoltageStateHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.VoltageStateHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTempStateHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.TempStateHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTempStateHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.TempStateHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStorageSubHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.StorageSubHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStorageSubHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.StorageSubHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsReagentsVisiblityNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.ReagentsVisiblityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetReagentsVisiblityNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.ReagentsVisiblityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUsersVisiblityNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.UsersVisiblityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUsersVisiblityNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.UsersVisiblityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCellTypesVisiblityNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.CellTypesVisiblityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCellTypesVisiblityNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.CellTypesVisiblityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAppTypesVisiblityNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.AppTypesVisiblityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAppTypesVisiblityNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.AppTypesVisiblityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCalibrationVisiblityNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.CalibrationVisiblityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCalibrationVisiblityNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.CalibrationVisiblityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStorageVisiblityNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.StorageVisiblityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStorageVisiblityNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.StorageVisiblityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLowLevelsControlsVisiblityNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.LowLevelsControlsVisiblityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLowLevelsControlsVisiblityNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.LowLevelsControlsVisiblityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSeverityHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.SeverityHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSeverityHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.SeverityHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSystemHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.SystemHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSystemHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.SystemHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubsystemHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.SubsystemHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubsystemHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.SubsystemHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInstanceHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.InstanceHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInstanceHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.InstanceHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDescriptionHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.DescriptionHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDescriptionHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.DescriptionHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSystemErrorHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.SystemErrorHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSystemErrorHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.SystemErrorHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOpticsHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.OpticsHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOpticsHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.OpticsHeaderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStatusInformationHeaderNull() {
                return this.IsNull(this.tableInstrumentStatusReportTableHeaderDomainTable.StatusInformationHeaderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStatusInformationHeaderNull() {
                this[this.tableInstrumentStatusReportTableHeaderDomainTable.StatusInformationHeaderColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusReportCalibrationDomainTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusReportCalibrationDomainTableDataTable tableInstrumentStatusReportCalibrationDomainTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentStatusReportCalibrationDomainTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusReportCalibrationDomainTable = ((InstrumentStatusReportCalibrationDomainTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LabelName {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportCalibrationDomainTable.LabelNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabelName\' in table \'InstrumentStatusReportCalibrationDomai" +
                                "nTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportCalibrationDomainTable.LabelNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AssayValue {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportCalibrationDomainTable.AssayValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssayValue\' in table \'InstrumentStatusReportCalibrationDoma" +
                                "inTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportCalibrationDomainTable.AssayValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ExpirationDate {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportCalibrationDomainTable.ExpirationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpirationDate\' in table \'InstrumentStatusReportCalibration" +
                                "DomainTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportCalibrationDomainTable.ExpirationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LotNumber {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportCalibrationDomainTable.LotNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LotNumber\' in table \'InstrumentStatusReportCalibrationDomai" +
                                "nTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportCalibrationDomainTable.LotNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLabelNameNull() {
                return this.IsNull(this.tableInstrumentStatusReportCalibrationDomainTable.LabelNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLabelNameNull() {
                this[this.tableInstrumentStatusReportCalibrationDomainTable.LabelNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAssayValueNull() {
                return this.IsNull(this.tableInstrumentStatusReportCalibrationDomainTable.AssayValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAssayValueNull() {
                this[this.tableInstrumentStatusReportCalibrationDomainTable.AssayValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsExpirationDateNull() {
                return this.IsNull(this.tableInstrumentStatusReportCalibrationDomainTable.ExpirationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetExpirationDateNull() {
                this[this.tableInstrumentStatusReportCalibrationDomainTable.ExpirationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLotNumberNull() {
                return this.IsNull(this.tableInstrumentStatusReportCalibrationDomainTable.LotNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLotNumberNull() {
                this[this.tableInstrumentStatusReportCalibrationDomainTable.LotNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusUserListTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusUserListTableDataTable tableInstrumentStatusUserListTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentStatusUserListTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusUserListTable = ((InstrumentStatusUserListTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ColumnOne {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusUserListTable.ColumnOneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnOne\' in table \'InstrumentStatusUserListTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusUserListTable.ColumnOneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ColumnTwo {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusUserListTable.ColumnTwoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnTwo\' in table \'InstrumentStatusUserListTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusUserListTable.ColumnTwoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ColumnThree {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusUserListTable.ColumnThreeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnThree\' in table \'InstrumentStatusUserListTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusUserListTable.ColumnThreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ColumnFour {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusUserListTable.ColumnFourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnFour\' in table \'InstrumentStatusUserListTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusUserListTable.ColumnFourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsColumnOneNull() {
                return this.IsNull(this.tableInstrumentStatusUserListTable.ColumnOneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetColumnOneNull() {
                this[this.tableInstrumentStatusUserListTable.ColumnOneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsColumnTwoNull() {
                return this.IsNull(this.tableInstrumentStatusUserListTable.ColumnTwoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetColumnTwoNull() {
                this[this.tableInstrumentStatusUserListTable.ColumnTwoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsColumnThreeNull() {
                return this.IsNull(this.tableInstrumentStatusUserListTable.ColumnThreeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetColumnThreeNull() {
                this[this.tableInstrumentStatusUserListTable.ColumnThreeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsColumnFourNull() {
                return this.IsNull(this.tableInstrumentStatusUserListTable.ColumnFourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetColumnFourNull() {
                this[this.tableInstrumentStatusUserListTable.ColumnFourColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusCellTypeTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusCellTypeTableDataTable tableInstrumentStatusCellTypeTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentStatusCellTypeTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusCellTypeTable = ((InstrumentStatusCellTypeTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ColumnOne {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusCellTypeTable.ColumnOneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnOne\' in table \'InstrumentStatusCellTypeTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusCellTypeTable.ColumnOneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ColumnTwo {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusCellTypeTable.ColumnTwoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnTwo\' in table \'InstrumentStatusCellTypeTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusCellTypeTable.ColumnTwoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ColumnThree {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusCellTypeTable.ColumnThreeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnThree\' in table \'InstrumentStatusCellTypeTable\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusCellTypeTable.ColumnThreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ColumnFour {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusCellTypeTable.ColumnFourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnFour\' in table \'InstrumentStatusCellTypeTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusCellTypeTable.ColumnFourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsColumnOneNull() {
                return this.IsNull(this.tableInstrumentStatusCellTypeTable.ColumnOneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetColumnOneNull() {
                this[this.tableInstrumentStatusCellTypeTable.ColumnOneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsColumnTwoNull() {
                return this.IsNull(this.tableInstrumentStatusCellTypeTable.ColumnTwoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetColumnTwoNull() {
                this[this.tableInstrumentStatusCellTypeTable.ColumnTwoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsColumnThreeNull() {
                return this.IsNull(this.tableInstrumentStatusCellTypeTable.ColumnThreeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetColumnThreeNull() {
                this[this.tableInstrumentStatusCellTypeTable.ColumnThreeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsColumnFourNull() {
                return this.IsNull(this.tableInstrumentStatusCellTypeTable.ColumnFourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetColumnFourNull() {
                this[this.tableInstrumentStatusCellTypeTable.ColumnFourColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusRegentParametersTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusRegentParametersTableDataTable tableInstrumentStatusRegentParametersTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentStatusRegentParametersTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusRegentParametersTable = ((InstrumentStatusRegentParametersTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusRegentParametersTable.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'InstrumentStatusRegentParametersTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusRegentParametersTable.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ColumnOne {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusRegentParametersTable.ColumnOneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnOne\' in table \'InstrumentStatusRegentParametersTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusRegentParametersTable.ColumnOneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ColumnTwo {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusRegentParametersTable.ColumnTwoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnTwo\' in table \'InstrumentStatusRegentParametersTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusRegentParametersTable.ColumnTwoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ColumnThree {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusRegentParametersTable.ColumnThreeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnThree\' in table \'InstrumentStatusRegentParametersTabl" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusRegentParametersTable.ColumnThreeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ColumnFour {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusRegentParametersTable.ColumnFourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnFour\' in table \'InstrumentStatusRegentParametersTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusRegentParametersTable.ColumnFourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ColumnFive {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusRegentParametersTable.ColumnFiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ColumnFive\' in table \'InstrumentStatusRegentParametersTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusRegentParametersTable.ColumnFiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableInstrumentStatusRegentParametersTable.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNameNull() {
                this[this.tableInstrumentStatusRegentParametersTable.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsColumnOneNull() {
                return this.IsNull(this.tableInstrumentStatusRegentParametersTable.ColumnOneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetColumnOneNull() {
                this[this.tableInstrumentStatusRegentParametersTable.ColumnOneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsColumnTwoNull() {
                return this.IsNull(this.tableInstrumentStatusRegentParametersTable.ColumnTwoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetColumnTwoNull() {
                this[this.tableInstrumentStatusRegentParametersTable.ColumnTwoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsColumnThreeNull() {
                return this.IsNull(this.tableInstrumentStatusRegentParametersTable.ColumnThreeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetColumnThreeNull() {
                this[this.tableInstrumentStatusRegentParametersTable.ColumnThreeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsColumnFourNull() {
                return this.IsNull(this.tableInstrumentStatusRegentParametersTable.ColumnFourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetColumnFourNull() {
                this[this.tableInstrumentStatusRegentParametersTable.ColumnFourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsColumnFiveNull() {
                return this.IsNull(this.tableInstrumentStatusRegentParametersTable.ColumnFiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetColumnFiveNull() {
                this[this.tableInstrumentStatusRegentParametersTable.ColumnFiveColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusTableVisibilityTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusTableVisibilityTableDataTable tableInstrumentStatusTableVisibilityTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentStatusTableVisibilityTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusTableVisibilityTable = ((InstrumentStatusTableVisibilityTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ReagentsVisiblity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusTableVisibilityTable.ReagentsVisiblityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReagentsVisiblity\' in table \'InstrumentStatusTableVisibilit" +
                                "yTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusTableVisibilityTable.ReagentsVisiblityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UsersVisiblity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusTableVisibilityTable.UsersVisiblityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsersVisiblity\' in table \'InstrumentStatusTableVisibilityTa" +
                                "ble\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusTableVisibilityTable.UsersVisiblityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CellTypesVisiblity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusTableVisibilityTable.CellTypesVisiblityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CellTypesVisiblity\' in table \'InstrumentStatusTableVisibili" +
                                "tyTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusTableVisibilityTable.CellTypesVisiblityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string AppTypesVisiblity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusTableVisibilityTable.AppTypesVisiblityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppTypesVisiblity\' in table \'InstrumentStatusTableVisibilit" +
                                "yTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusTableVisibilityTable.AppTypesVisiblityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CalibrationVisiblity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusTableVisibilityTable.CalibrationVisiblityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalibrationVisiblity\' in table \'InstrumentStatusTableVisibi" +
                                "lityTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusTableVisibilityTable.CalibrationVisiblityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string StorageVisiblity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusTableVisibilityTable.StorageVisiblityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StorageVisiblity\' in table \'InstrumentStatusTableVisibility" +
                                "Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusTableVisibilityTable.StorageVisiblityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LowLevelsControlsVisiblity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusTableVisibilityTable.LowLevelsControlsVisiblityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LowLevelsControlsVisiblity\' in table \'InstrumentStatusTable" +
                                "VisibilityTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusTableVisibilityTable.LowLevelsControlsVisiblityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SystemErrorVisibility {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusTableVisibilityTable.SystemErrorVisibilityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SystemErrorVisibility\' in table \'InstrumentStatusTableVisib" +
                                "ilityTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusTableVisibilityTable.SystemErrorVisibilityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsReagentsVisiblityNull() {
                return this.IsNull(this.tableInstrumentStatusTableVisibilityTable.ReagentsVisiblityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetReagentsVisiblityNull() {
                this[this.tableInstrumentStatusTableVisibilityTable.ReagentsVisiblityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUsersVisiblityNull() {
                return this.IsNull(this.tableInstrumentStatusTableVisibilityTable.UsersVisiblityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUsersVisiblityNull() {
                this[this.tableInstrumentStatusTableVisibilityTable.UsersVisiblityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCellTypesVisiblityNull() {
                return this.IsNull(this.tableInstrumentStatusTableVisibilityTable.CellTypesVisiblityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCellTypesVisiblityNull() {
                this[this.tableInstrumentStatusTableVisibilityTable.CellTypesVisiblityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAppTypesVisiblityNull() {
                return this.IsNull(this.tableInstrumentStatusTableVisibilityTable.AppTypesVisiblityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAppTypesVisiblityNull() {
                this[this.tableInstrumentStatusTableVisibilityTable.AppTypesVisiblityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCalibrationVisiblityNull() {
                return this.IsNull(this.tableInstrumentStatusTableVisibilityTable.CalibrationVisiblityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCalibrationVisiblityNull() {
                this[this.tableInstrumentStatusTableVisibilityTable.CalibrationVisiblityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsStorageVisiblityNull() {
                return this.IsNull(this.tableInstrumentStatusTableVisibilityTable.StorageVisiblityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetStorageVisiblityNull() {
                this[this.tableInstrumentStatusTableVisibilityTable.StorageVisiblityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLowLevelsControlsVisiblityNull() {
                return this.IsNull(this.tableInstrumentStatusTableVisibilityTable.LowLevelsControlsVisiblityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLowLevelsControlsVisiblityNull() {
                this[this.tableInstrumentStatusTableVisibilityTable.LowLevelsControlsVisiblityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSystemErrorVisibilityNull() {
                return this.IsNull(this.tableInstrumentStatusTableVisibilityTable.SystemErrorVisibilityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSystemErrorVisibilityNull() {
                this[this.tableInstrumentStatusTableVisibilityTable.SystemErrorVisibilityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusSystemErrorRow : global::System.Data.DataRow {
            
            private InstrumentStatusSystemErrorDataTable tableInstrumentStatusSystemError;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentStatusSystemErrorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusSystemError = ((InstrumentStatusSystemErrorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Severity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusSystemError.SeverityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Severity\' in table \'InstrumentStatusSystemError\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusSystemError.SeverityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string System {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusSystemError.SystemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'System\' in table \'InstrumentStatusSystemError\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusSystemError.SystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Subsystem {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusSystemError.SubsystemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subsystem\' in table \'InstrumentStatusSystemError\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusSystemError.SubsystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Instance {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusSystemError.InstanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Instance\' in table \'InstrumentStatusSystemError\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusSystemError.InstanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusSystemError.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'InstrumentStatusSystemError\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusSystemError.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSeverityNull() {
                return this.IsNull(this.tableInstrumentStatusSystemError.SeverityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSeverityNull() {
                this[this.tableInstrumentStatusSystemError.SeverityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSystemNull() {
                return this.IsNull(this.tableInstrumentStatusSystemError.SystemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSystemNull() {
                this[this.tableInstrumentStatusSystemError.SystemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSubsystemNull() {
                return this.IsNull(this.tableInstrumentStatusSystemError.SubsystemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSubsystemNull() {
                this[this.tableInstrumentStatusSystemError.SubsystemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInstanceNull() {
                return this.IsNull(this.tableInstrumentStatusSystemError.InstanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInstanceNull() {
                this[this.tableInstrumentStatusSystemError.InstanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableInstrumentStatusSystemError.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableInstrumentStatusSystemError.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentSensorStatusInfoTableRow : global::System.Data.DataRow {
            
            private InstrumentSensorStatusInfoTableDataTable tableInstrumentSensorStatusInfoTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal InstrumentSensorStatusInfoTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentSensorStatusInfoTable = ((InstrumentSensorStatusInfoTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Active {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentSensorStatusInfoTable.ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Active\' in table \'InstrumentSensorStatusInfoTable\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableInstrumentSensorStatusInfoTable.ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string InActive {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentSensorStatusInfoTable.InActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InActive\' in table \'InstrumentSensorStatusInfoTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentSensorStatusInfoTable.InActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UnKnown {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentSensorStatusInfoTable.UnKnownColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnKnown\' in table \'InstrumentSensorStatusInfoTable\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableInstrumentSensorStatusInfoTable.UnKnownColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsActiveNull() {
                return this.IsNull(this.tableInstrumentSensorStatusInfoTable.ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetActiveNull() {
                this[this.tableInstrumentSensorStatusInfoTable.ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInActiveNull() {
                return this.IsNull(this.tableInstrumentSensorStatusInfoTable.InActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInActiveNull() {
                this[this.tableInstrumentSensorStatusInfoTable.InActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUnKnownNull() {
                return this.IsNull(this.tableInstrumentSensorStatusInfoTable.UnKnownColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUnKnownNull() {
                this[this.tableInstrumentSensorStatusInfoTable.UnKnownColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class InstrumentStatusReportTableHeaderDomainTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusReportTableHeaderDomainTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusReportTableHeaderDomainTableRowChangeEvent(InstrumentStatusReportTableHeaderDomainTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusReportTableHeaderDomainTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class InstrumentStatusReportCalibrationDomainTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusReportCalibrationDomainTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusReportCalibrationDomainTableRowChangeEvent(InstrumentStatusReportCalibrationDomainTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusReportCalibrationDomainTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class InstrumentStatusUserListTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusUserListTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusUserListTableRowChangeEvent(InstrumentStatusUserListTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusUserListTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class InstrumentStatusCellTypeTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusCellTypeTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusCellTypeTableRowChangeEvent(InstrumentStatusCellTypeTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusCellTypeTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class InstrumentStatusRegentParametersTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusRegentParametersTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusRegentParametersTableRowChangeEvent(InstrumentStatusRegentParametersTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusRegentParametersTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class InstrumentStatusTableVisibilityTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusTableVisibilityTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusTableVisibilityTableRowChangeEvent(InstrumentStatusTableVisibilityTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusTableVisibilityTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class InstrumentStatusSystemErrorRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusSystemErrorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusSystemErrorRowChangeEvent(InstrumentStatusSystemErrorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentStatusSystemErrorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class InstrumentSensorStatusInfoTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentSensorStatusInfoTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentSensorStatusInfoTableRowChangeEvent(InstrumentSensorStatusInfoTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public InstrumentSensorStatusInfoTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591