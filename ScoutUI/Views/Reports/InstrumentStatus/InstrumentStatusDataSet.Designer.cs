//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ScoutUI.Views.Reports.InstrumentStatus {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("InstrumentStatusDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class InstrumentStatusDataSet : global::System.Data.DataSet {
        
        private InstrumentStatusAboutReportTableDataTable tableInstrumentStatusAboutReportTable;
        
        private InstrumentStatusPrintReportTableDataTable tableInstrumentStatusPrintReportTable;
        
        private TestReportTableDataTable tableTestReportTable;
        
        private ConcCalibrationDataTableDataTable tableConcCalibrationDataTable;
        
        private ConCalibrationLastCalibrationTableDataTable tableConCalibrationLastCalibrationTable;
        
        private SizeCalibrationDataTableDataTable tableSizeCalibrationDataTable;
        
        private SizeCalibrationLastCalibrationTableDataTable tableSizeCalibrationLastCalibrationTable;
        
        private InstrumentStatusReportStorageTableDataTable tableInstrumentStatusReportStorageTable;
        
        private InstrumentStatusReportLowLevelControlTableDataTable tableInstrumentStatusReportLowLevelControlTable;
        
        private InstrumentStatusReportUserFirstColumnTableDataTable tableInstrumentStatusReportUserFirstColumnTable;
        
        private InstrumentStatusReportUserSecondColumnTableDataTable tableInstrumentStatusReportUserSecondColumnTable;
        
        private InstrumentStatusReportCellTypeFirstColumnTableDataTable tableInstrumentStatusReportCellTypeFirstColumnTable;
        
        private InstrumentStatusReportCellTypeSecondColumnTableDataTable tableInstrumentStatusReportCellTypeSecondColumnTable;
        
        private InstrumentStatusReportAppTypeFirstColumnTableDataTable tableInstrumentStatusReportAppTypeFirstColumnTable;
        
        private InstrumentStatusReportAppTypeSecondColumnTableDataTable tableInstrumentStatusReportAppTypeSecondColumnTable;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public InstrumentStatusDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected InstrumentStatusDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["InstrumentStatusAboutReportTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusAboutReportTableDataTable(ds.Tables["InstrumentStatusAboutReportTable"]));
                }
                if ((ds.Tables["InstrumentStatusPrintReportTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusPrintReportTableDataTable(ds.Tables["InstrumentStatusPrintReportTable"]));
                }
                if ((ds.Tables["TestReportTable"] != null)) {
                    base.Tables.Add(new TestReportTableDataTable(ds.Tables["TestReportTable"]));
                }
                if ((ds.Tables["ConcCalibrationDataTable"] != null)) {
                    base.Tables.Add(new ConcCalibrationDataTableDataTable(ds.Tables["ConcCalibrationDataTable"]));
                }
                if ((ds.Tables["ConCalibrationLastCalibrationTable"] != null)) {
                    base.Tables.Add(new ConCalibrationLastCalibrationTableDataTable(ds.Tables["ConCalibrationLastCalibrationTable"]));
                }
                if ((ds.Tables["SizeCalibrationDataTable"] != null)) {
                    base.Tables.Add(new SizeCalibrationDataTableDataTable(ds.Tables["SizeCalibrationDataTable"]));
                }
                if ((ds.Tables["SizeCalibrationLastCalibrationTable"] != null)) {
                    base.Tables.Add(new SizeCalibrationLastCalibrationTableDataTable(ds.Tables["SizeCalibrationLastCalibrationTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportStorageTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportStorageTableDataTable(ds.Tables["InstrumentStatusReportStorageTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportLowLevelControlTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportLowLevelControlTableDataTable(ds.Tables["InstrumentStatusReportLowLevelControlTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportUserFirstColumnTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportUserFirstColumnTableDataTable(ds.Tables["InstrumentStatusReportUserFirstColumnTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportUserSecondColumnTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportUserSecondColumnTableDataTable(ds.Tables["InstrumentStatusReportUserSecondColumnTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportCellTypeFirstColumnTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportCellTypeFirstColumnTableDataTable(ds.Tables["InstrumentStatusReportCellTypeFirstColumnTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportCellTypeSecondColumnTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportCellTypeSecondColumnTableDataTable(ds.Tables["InstrumentStatusReportCellTypeSecondColumnTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportAppTypeFirstColumnTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportAppTypeFirstColumnTableDataTable(ds.Tables["InstrumentStatusReportAppTypeFirstColumnTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportAppTypeSecondColumnTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportAppTypeSecondColumnTableDataTable(ds.Tables["InstrumentStatusReportAppTypeSecondColumnTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusAboutReportTableDataTable InstrumentStatusAboutReportTable {
            get {
                return this.tableInstrumentStatusAboutReportTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusPrintReportTableDataTable InstrumentStatusPrintReportTable {
            get {
                return this.tableInstrumentStatusPrintReportTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TestReportTableDataTable TestReportTable {
            get {
                return this.tableTestReportTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ConcCalibrationDataTableDataTable ConcCalibrationDataTable {
            get {
                return this.tableConcCalibrationDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ConCalibrationLastCalibrationTableDataTable ConCalibrationLastCalibrationTable {
            get {
                return this.tableConCalibrationLastCalibrationTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SizeCalibrationDataTableDataTable SizeCalibrationDataTable {
            get {
                return this.tableSizeCalibrationDataTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SizeCalibrationLastCalibrationTableDataTable SizeCalibrationLastCalibrationTable {
            get {
                return this.tableSizeCalibrationLastCalibrationTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusReportStorageTableDataTable InstrumentStatusReportStorageTable {
            get {
                return this.tableInstrumentStatusReportStorageTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusReportLowLevelControlTableDataTable InstrumentStatusReportLowLevelControlTable {
            get {
                return this.tableInstrumentStatusReportLowLevelControlTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusReportUserFirstColumnTableDataTable InstrumentStatusReportUserFirstColumnTable {
            get {
                return this.tableInstrumentStatusReportUserFirstColumnTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusReportUserSecondColumnTableDataTable InstrumentStatusReportUserSecondColumnTable {
            get {
                return this.tableInstrumentStatusReportUserSecondColumnTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusReportCellTypeFirstColumnTableDataTable InstrumentStatusReportCellTypeFirstColumnTable {
            get {
                return this.tableInstrumentStatusReportCellTypeFirstColumnTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusReportCellTypeSecondColumnTableDataTable InstrumentStatusReportCellTypeSecondColumnTable {
            get {
                return this.tableInstrumentStatusReportCellTypeSecondColumnTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusReportAppTypeFirstColumnTableDataTable InstrumentStatusReportAppTypeFirstColumnTable {
            get {
                return this.tableInstrumentStatusReportAppTypeFirstColumnTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InstrumentStatusReportAppTypeSecondColumnTableDataTable InstrumentStatusReportAppTypeSecondColumnTable {
            get {
                return this.tableInstrumentStatusReportAppTypeSecondColumnTable;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            InstrumentStatusDataSet cln = ((InstrumentStatusDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["InstrumentStatusAboutReportTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusAboutReportTableDataTable(ds.Tables["InstrumentStatusAboutReportTable"]));
                }
                if ((ds.Tables["InstrumentStatusPrintReportTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusPrintReportTableDataTable(ds.Tables["InstrumentStatusPrintReportTable"]));
                }
                if ((ds.Tables["TestReportTable"] != null)) {
                    base.Tables.Add(new TestReportTableDataTable(ds.Tables["TestReportTable"]));
                }
                if ((ds.Tables["ConcCalibrationDataTable"] != null)) {
                    base.Tables.Add(new ConcCalibrationDataTableDataTable(ds.Tables["ConcCalibrationDataTable"]));
                }
                if ((ds.Tables["ConCalibrationLastCalibrationTable"] != null)) {
                    base.Tables.Add(new ConCalibrationLastCalibrationTableDataTable(ds.Tables["ConCalibrationLastCalibrationTable"]));
                }
                if ((ds.Tables["SizeCalibrationDataTable"] != null)) {
                    base.Tables.Add(new SizeCalibrationDataTableDataTable(ds.Tables["SizeCalibrationDataTable"]));
                }
                if ((ds.Tables["SizeCalibrationLastCalibrationTable"] != null)) {
                    base.Tables.Add(new SizeCalibrationLastCalibrationTableDataTable(ds.Tables["SizeCalibrationLastCalibrationTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportStorageTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportStorageTableDataTable(ds.Tables["InstrumentStatusReportStorageTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportLowLevelControlTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportLowLevelControlTableDataTable(ds.Tables["InstrumentStatusReportLowLevelControlTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportUserFirstColumnTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportUserFirstColumnTableDataTable(ds.Tables["InstrumentStatusReportUserFirstColumnTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportUserSecondColumnTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportUserSecondColumnTableDataTable(ds.Tables["InstrumentStatusReportUserSecondColumnTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportCellTypeFirstColumnTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportCellTypeFirstColumnTableDataTable(ds.Tables["InstrumentStatusReportCellTypeFirstColumnTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportCellTypeSecondColumnTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportCellTypeSecondColumnTableDataTable(ds.Tables["InstrumentStatusReportCellTypeSecondColumnTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportAppTypeFirstColumnTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportAppTypeFirstColumnTableDataTable(ds.Tables["InstrumentStatusReportAppTypeFirstColumnTable"]));
                }
                if ((ds.Tables["InstrumentStatusReportAppTypeSecondColumnTable"] != null)) {
                    base.Tables.Add(new InstrumentStatusReportAppTypeSecondColumnTableDataTable(ds.Tables["InstrumentStatusReportAppTypeSecondColumnTable"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableInstrumentStatusAboutReportTable = ((InstrumentStatusAboutReportTableDataTable)(base.Tables["InstrumentStatusAboutReportTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusAboutReportTable != null)) {
                    this.tableInstrumentStatusAboutReportTable.InitVars();
                }
            }
            this.tableInstrumentStatusPrintReportTable = ((InstrumentStatusPrintReportTableDataTable)(base.Tables["InstrumentStatusPrintReportTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusPrintReportTable != null)) {
                    this.tableInstrumentStatusPrintReportTable.InitVars();
                }
            }
            this.tableTestReportTable = ((TestReportTableDataTable)(base.Tables["TestReportTable"]));
            if ((initTable == true)) {
                if ((this.tableTestReportTable != null)) {
                    this.tableTestReportTable.InitVars();
                }
            }
            this.tableConcCalibrationDataTable = ((ConcCalibrationDataTableDataTable)(base.Tables["ConcCalibrationDataTable"]));
            if ((initTable == true)) {
                if ((this.tableConcCalibrationDataTable != null)) {
                    this.tableConcCalibrationDataTable.InitVars();
                }
            }
            this.tableConCalibrationLastCalibrationTable = ((ConCalibrationLastCalibrationTableDataTable)(base.Tables["ConCalibrationLastCalibrationTable"]));
            if ((initTable == true)) {
                if ((this.tableConCalibrationLastCalibrationTable != null)) {
                    this.tableConCalibrationLastCalibrationTable.InitVars();
                }
            }
            this.tableSizeCalibrationDataTable = ((SizeCalibrationDataTableDataTable)(base.Tables["SizeCalibrationDataTable"]));
            if ((initTable == true)) {
                if ((this.tableSizeCalibrationDataTable != null)) {
                    this.tableSizeCalibrationDataTable.InitVars();
                }
            }
            this.tableSizeCalibrationLastCalibrationTable = ((SizeCalibrationLastCalibrationTableDataTable)(base.Tables["SizeCalibrationLastCalibrationTable"]));
            if ((initTable == true)) {
                if ((this.tableSizeCalibrationLastCalibrationTable != null)) {
                    this.tableSizeCalibrationLastCalibrationTable.InitVars();
                }
            }
            this.tableInstrumentStatusReportStorageTable = ((InstrumentStatusReportStorageTableDataTable)(base.Tables["InstrumentStatusReportStorageTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusReportStorageTable != null)) {
                    this.tableInstrumentStatusReportStorageTable.InitVars();
                }
            }
            this.tableInstrumentStatusReportLowLevelControlTable = ((InstrumentStatusReportLowLevelControlTableDataTable)(base.Tables["InstrumentStatusReportLowLevelControlTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusReportLowLevelControlTable != null)) {
                    this.tableInstrumentStatusReportLowLevelControlTable.InitVars();
                }
            }
            this.tableInstrumentStatusReportUserFirstColumnTable = ((InstrumentStatusReportUserFirstColumnTableDataTable)(base.Tables["InstrumentStatusReportUserFirstColumnTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusReportUserFirstColumnTable != null)) {
                    this.tableInstrumentStatusReportUserFirstColumnTable.InitVars();
                }
            }
            this.tableInstrumentStatusReportUserSecondColumnTable = ((InstrumentStatusReportUserSecondColumnTableDataTable)(base.Tables["InstrumentStatusReportUserSecondColumnTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusReportUserSecondColumnTable != null)) {
                    this.tableInstrumentStatusReportUserSecondColumnTable.InitVars();
                }
            }
            this.tableInstrumentStatusReportCellTypeFirstColumnTable = ((InstrumentStatusReportCellTypeFirstColumnTableDataTable)(base.Tables["InstrumentStatusReportCellTypeFirstColumnTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusReportCellTypeFirstColumnTable != null)) {
                    this.tableInstrumentStatusReportCellTypeFirstColumnTable.InitVars();
                }
            }
            this.tableInstrumentStatusReportCellTypeSecondColumnTable = ((InstrumentStatusReportCellTypeSecondColumnTableDataTable)(base.Tables["InstrumentStatusReportCellTypeSecondColumnTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusReportCellTypeSecondColumnTable != null)) {
                    this.tableInstrumentStatusReportCellTypeSecondColumnTable.InitVars();
                }
            }
            this.tableInstrumentStatusReportAppTypeFirstColumnTable = ((InstrumentStatusReportAppTypeFirstColumnTableDataTable)(base.Tables["InstrumentStatusReportAppTypeFirstColumnTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusReportAppTypeFirstColumnTable != null)) {
                    this.tableInstrumentStatusReportAppTypeFirstColumnTable.InitVars();
                }
            }
            this.tableInstrumentStatusReportAppTypeSecondColumnTable = ((InstrumentStatusReportAppTypeSecondColumnTableDataTable)(base.Tables["InstrumentStatusReportAppTypeSecondColumnTable"]));
            if ((initTable == true)) {
                if ((this.tableInstrumentStatusReportAppTypeSecondColumnTable != null)) {
                    this.tableInstrumentStatusReportAppTypeSecondColumnTable.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "InstrumentStatusDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/InstrumentStatusDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableInstrumentStatusAboutReportTable = new InstrumentStatusAboutReportTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusAboutReportTable);
            this.tableInstrumentStatusPrintReportTable = new InstrumentStatusPrintReportTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusPrintReportTable);
            this.tableTestReportTable = new TestReportTableDataTable();
            base.Tables.Add(this.tableTestReportTable);
            this.tableConcCalibrationDataTable = new ConcCalibrationDataTableDataTable();
            base.Tables.Add(this.tableConcCalibrationDataTable);
            this.tableConCalibrationLastCalibrationTable = new ConCalibrationLastCalibrationTableDataTable();
            base.Tables.Add(this.tableConCalibrationLastCalibrationTable);
            this.tableSizeCalibrationDataTable = new SizeCalibrationDataTableDataTable();
            base.Tables.Add(this.tableSizeCalibrationDataTable);
            this.tableSizeCalibrationLastCalibrationTable = new SizeCalibrationLastCalibrationTableDataTable();
            base.Tables.Add(this.tableSizeCalibrationLastCalibrationTable);
            this.tableInstrumentStatusReportStorageTable = new InstrumentStatusReportStorageTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusReportStorageTable);
            this.tableInstrumentStatusReportLowLevelControlTable = new InstrumentStatusReportLowLevelControlTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusReportLowLevelControlTable);
            this.tableInstrumentStatusReportUserFirstColumnTable = new InstrumentStatusReportUserFirstColumnTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusReportUserFirstColumnTable);
            this.tableInstrumentStatusReportUserSecondColumnTable = new InstrumentStatusReportUserSecondColumnTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusReportUserSecondColumnTable);
            this.tableInstrumentStatusReportCellTypeFirstColumnTable = new InstrumentStatusReportCellTypeFirstColumnTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusReportCellTypeFirstColumnTable);
            this.tableInstrumentStatusReportCellTypeSecondColumnTable = new InstrumentStatusReportCellTypeSecondColumnTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusReportCellTypeSecondColumnTable);
            this.tableInstrumentStatusReportAppTypeFirstColumnTable = new InstrumentStatusReportAppTypeFirstColumnTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusReportAppTypeFirstColumnTable);
            this.tableInstrumentStatusReportAppTypeSecondColumnTable = new InstrumentStatusReportAppTypeSecondColumnTableDataTable();
            base.Tables.Add(this.tableInstrumentStatusReportAppTypeSecondColumnTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInstrumentStatusAboutReportTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInstrumentStatusPrintReportTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTestReportTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeConcCalibrationDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeConCalibrationLastCalibrationTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSizeCalibrationDataTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSizeCalibrationLastCalibrationTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInstrumentStatusReportStorageTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInstrumentStatusReportLowLevelControlTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInstrumentStatusReportUserFirstColumnTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInstrumentStatusReportUserSecondColumnTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInstrumentStatusReportCellTypeFirstColumnTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInstrumentStatusReportCellTypeSecondColumnTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInstrumentStatusReportAppTypeFirstColumnTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInstrumentStatusReportAppTypeSecondColumnTable() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void InstrumentStatusAboutReportTableRowChangeEventHandler(object sender, InstrumentStatusAboutReportTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void InstrumentStatusPrintReportTableRowChangeEventHandler(object sender, InstrumentStatusPrintReportTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TestReportTableRowChangeEventHandler(object sender, TestReportTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ConcCalibrationDataTableRowChangeEventHandler(object sender, ConcCalibrationDataTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ConCalibrationLastCalibrationTableRowChangeEventHandler(object sender, ConCalibrationLastCalibrationTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SizeCalibrationDataTableRowChangeEventHandler(object sender, SizeCalibrationDataTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SizeCalibrationLastCalibrationTableRowChangeEventHandler(object sender, SizeCalibrationLastCalibrationTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void InstrumentStatusReportStorageTableRowChangeEventHandler(object sender, InstrumentStatusReportStorageTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void InstrumentStatusReportLowLevelControlTableRowChangeEventHandler(object sender, InstrumentStatusReportLowLevelControlTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void InstrumentStatusReportUserFirstColumnTableRowChangeEventHandler(object sender, InstrumentStatusReportUserFirstColumnTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void InstrumentStatusReportUserSecondColumnTableRowChangeEventHandler(object sender, InstrumentStatusReportUserSecondColumnTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void InstrumentStatusReportCellTypeFirstColumnTableRowChangeEventHandler(object sender, InstrumentStatusReportCellTypeFirstColumnTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void InstrumentStatusReportCellTypeSecondColumnTableRowChangeEventHandler(object sender, InstrumentStatusReportCellTypeSecondColumnTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void InstrumentStatusReportAppTypeFirstColumnTableRowChangeEventHandler(object sender, InstrumentStatusReportAppTypeFirstColumnTableRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void InstrumentStatusReportAppTypeSecondColumnTableRowChangeEventHandler(object sender, InstrumentStatusReportAppTypeSecondColumnTableRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusAboutReportTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusAboutReportTableRow> {
            
            private global::System.Data.DataColumn columnDeviceSerialNumber;
            
            private global::System.Data.DataColumn columnSoftwareVersion;
            
            private global::System.Data.DataColumn columnFirmwareVersion;
            
            private global::System.Data.DataColumn columnUiVersion;
            
            private global::System.Data.DataColumn columnImageAnalysisSoftwareVersion;
            
            private global::System.Data.DataColumn columnSyringePumpFirmwareVersion;
            
            private global::System.Data.DataColumn columnCameraFirmwareVersion;
            
            private global::System.Data.DataColumn columnSampleLifetimeNumber;
            
            private global::System.Data.DataColumn columnInstrumentHealth;
            
            private global::System.Data.DataColumn columnErrorCode;
            
            private global::System.Data.DataColumn columnIsUserHidden;
            
            private global::System.Data.DataColumn columnIsCellTypesHidden;
            
            private global::System.Data.DataColumn columnIsAppTypesHidden;
            
            private global::System.Data.DataColumn columnIsReagentsHidden;
            
            private global::System.Data.DataColumn columnIsCalibrationHidden;
            
            private global::System.Data.DataColumn columnIsStorageHidden;
            
            private global::System.Data.DataColumn columnIsLowLevelControlsHidden;
            
            private global::System.Data.DataColumn columnReportTitle;
            
            private global::System.Data.DataColumn columnDeviceSerial;
            
            private global::System.Data.DataColumn columnReportHeading;
            
            private global::System.Data.DataColumn columnCurrentDateTime;
            
            private global::System.Data.DataColumn columnComment;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusAboutReportTableDataTable() {
                this.TableName = "InstrumentStatusAboutReportTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusAboutReportTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected InstrumentStatusAboutReportTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeviceSerialNumberColumn {
                get {
                    return this.columnDeviceSerialNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SoftwareVersionColumn {
                get {
                    return this.columnSoftwareVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FirmwareVersionColumn {
                get {
                    return this.columnFirmwareVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UiVersionColumn {
                get {
                    return this.columnUiVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImageAnalysisSoftwareVersionColumn {
                get {
                    return this.columnImageAnalysisSoftwareVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SyringePumpFirmwareVersionColumn {
                get {
                    return this.columnSyringePumpFirmwareVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CameraFirmwareVersionColumn {
                get {
                    return this.columnCameraFirmwareVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleLifetimeNumberColumn {
                get {
                    return this.columnSampleLifetimeNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InstrumentHealthColumn {
                get {
                    return this.columnInstrumentHealth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ErrorCodeColumn {
                get {
                    return this.columnErrorCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsUserHiddenColumn {
                get {
                    return this.columnIsUserHidden;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsCellTypesHiddenColumn {
                get {
                    return this.columnIsCellTypesHidden;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsAppTypesHiddenColumn {
                get {
                    return this.columnIsAppTypesHidden;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsReagentsHiddenColumn {
                get {
                    return this.columnIsReagentsHidden;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsCalibrationHiddenColumn {
                get {
                    return this.columnIsCalibrationHidden;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsStorageHiddenColumn {
                get {
                    return this.columnIsStorageHidden;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsLowLevelControlsHiddenColumn {
                get {
                    return this.columnIsLowLevelControlsHidden;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReportTitleColumn {
                get {
                    return this.columnReportTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeviceSerialColumn {
                get {
                    return this.columnDeviceSerial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReportHeadingColumn {
                get {
                    return this.columnReportHeading;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentDateTimeColumn {
                get {
                    return this.columnCurrentDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusAboutReportTableRow this[int index] {
                get {
                    return ((InstrumentStatusAboutReportTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusAboutReportTableRowChangeEventHandler InstrumentStatusAboutReportTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusAboutReportTableRowChangeEventHandler InstrumentStatusAboutReportTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusAboutReportTableRowChangeEventHandler InstrumentStatusAboutReportTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusAboutReportTableRowChangeEventHandler InstrumentStatusAboutReportTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInstrumentStatusAboutReportTableRow(InstrumentStatusAboutReportTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusAboutReportTableRow AddInstrumentStatusAboutReportTableRow(
                        string DeviceSerialNumber, 
                        string SoftwareVersion, 
                        string FirmwareVersion, 
                        string UiVersion, 
                        string ImageAnalysisSoftwareVersion, 
                        string SyringePumpFirmwareVersion, 
                        string CameraFirmwareVersion, 
                        string SampleLifetimeNumber, 
                        string InstrumentHealth, 
                        string ErrorCode, 
                        string IsUserHidden, 
                        string IsCellTypesHidden, 
                        string IsAppTypesHidden, 
                        string IsReagentsHidden, 
                        string IsCalibrationHidden, 
                        string IsStorageHidden, 
                        string IsLowLevelControlsHidden, 
                        string ReportTitle, 
                        string DeviceSerial, 
                        string ReportHeading, 
                        string CurrentDateTime, 
                        string Comment) {
                InstrumentStatusAboutReportTableRow rowInstrumentStatusAboutReportTableRow = ((InstrumentStatusAboutReportTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeviceSerialNumber,
                        SoftwareVersion,
                        FirmwareVersion,
                        UiVersion,
                        ImageAnalysisSoftwareVersion,
                        SyringePumpFirmwareVersion,
                        CameraFirmwareVersion,
                        SampleLifetimeNumber,
                        InstrumentHealth,
                        ErrorCode,
                        IsUserHidden,
                        IsCellTypesHidden,
                        IsAppTypesHidden,
                        IsReagentsHidden,
                        IsCalibrationHidden,
                        IsStorageHidden,
                        IsLowLevelControlsHidden,
                        ReportTitle,
                        DeviceSerial,
                        ReportHeading,
                        CurrentDateTime,
                        Comment};
                rowInstrumentStatusAboutReportTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusAboutReportTableRow);
                return rowInstrumentStatusAboutReportTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusAboutReportTableDataTable cln = ((InstrumentStatusAboutReportTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusAboutReportTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDeviceSerialNumber = base.Columns["DeviceSerialNumber"];
                this.columnSoftwareVersion = base.Columns["SoftwareVersion"];
                this.columnFirmwareVersion = base.Columns["FirmwareVersion"];
                this.columnUiVersion = base.Columns["UiVersion"];
                this.columnImageAnalysisSoftwareVersion = base.Columns["ImageAnalysisSoftwareVersion"];
                this.columnSyringePumpFirmwareVersion = base.Columns["SyringePumpFirmwareVersion"];
                this.columnCameraFirmwareVersion = base.Columns["CameraFirmwareVersion"];
                this.columnSampleLifetimeNumber = base.Columns["SampleLifetimeNumber"];
                this.columnInstrumentHealth = base.Columns["InstrumentHealth"];
                this.columnErrorCode = base.Columns["ErrorCode"];
                this.columnIsUserHidden = base.Columns["IsUserHidden"];
                this.columnIsCellTypesHidden = base.Columns["IsCellTypesHidden"];
                this.columnIsAppTypesHidden = base.Columns["IsAppTypesHidden"];
                this.columnIsReagentsHidden = base.Columns["IsReagentsHidden"];
                this.columnIsCalibrationHidden = base.Columns["IsCalibrationHidden"];
                this.columnIsStorageHidden = base.Columns["IsStorageHidden"];
                this.columnIsLowLevelControlsHidden = base.Columns["IsLowLevelControlsHidden"];
                this.columnReportTitle = base.Columns["ReportTitle"];
                this.columnDeviceSerial = base.Columns["DeviceSerial"];
                this.columnReportHeading = base.Columns["ReportHeading"];
                this.columnCurrentDateTime = base.Columns["CurrentDateTime"];
                this.columnComment = base.Columns["Comment"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDeviceSerialNumber = new global::System.Data.DataColumn("DeviceSerialNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeviceSerialNumber);
                this.columnSoftwareVersion = new global::System.Data.DataColumn("SoftwareVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSoftwareVersion);
                this.columnFirmwareVersion = new global::System.Data.DataColumn("FirmwareVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirmwareVersion);
                this.columnUiVersion = new global::System.Data.DataColumn("UiVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUiVersion);
                this.columnImageAnalysisSoftwareVersion = new global::System.Data.DataColumn("ImageAnalysisSoftwareVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageAnalysisSoftwareVersion);
                this.columnSyringePumpFirmwareVersion = new global::System.Data.DataColumn("SyringePumpFirmwareVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSyringePumpFirmwareVersion);
                this.columnCameraFirmwareVersion = new global::System.Data.DataColumn("CameraFirmwareVersion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCameraFirmwareVersion);
                this.columnSampleLifetimeNumber = new global::System.Data.DataColumn("SampleLifetimeNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleLifetimeNumber);
                this.columnInstrumentHealth = new global::System.Data.DataColumn("InstrumentHealth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstrumentHealth);
                this.columnErrorCode = new global::System.Data.DataColumn("ErrorCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnErrorCode);
                this.columnIsUserHidden = new global::System.Data.DataColumn("IsUserHidden", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsUserHidden);
                this.columnIsCellTypesHidden = new global::System.Data.DataColumn("IsCellTypesHidden", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCellTypesHidden);
                this.columnIsAppTypesHidden = new global::System.Data.DataColumn("IsAppTypesHidden", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAppTypesHidden);
                this.columnIsReagentsHidden = new global::System.Data.DataColumn("IsReagentsHidden", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsReagentsHidden);
                this.columnIsCalibrationHidden = new global::System.Data.DataColumn("IsCalibrationHidden", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCalibrationHidden);
                this.columnIsStorageHidden = new global::System.Data.DataColumn("IsStorageHidden", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsStorageHidden);
                this.columnIsLowLevelControlsHidden = new global::System.Data.DataColumn("IsLowLevelControlsHidden", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsLowLevelControlsHidden);
                this.columnReportTitle = new global::System.Data.DataColumn("ReportTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportTitle);
                this.columnDeviceSerial = new global::System.Data.DataColumn("DeviceSerial", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeviceSerial);
                this.columnReportHeading = new global::System.Data.DataColumn("ReportHeading", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportHeading);
                this.columnCurrentDateTime = new global::System.Data.DataColumn("CurrentDateTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentDateTime);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusAboutReportTableRow NewInstrumentStatusAboutReportTableRow() {
                return ((InstrumentStatusAboutReportTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusAboutReportTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusAboutReportTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusAboutReportTableRowChanged != null)) {
                    this.InstrumentStatusAboutReportTableRowChanged(this, new InstrumentStatusAboutReportTableRowChangeEvent(((InstrumentStatusAboutReportTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusAboutReportTableRowChanging != null)) {
                    this.InstrumentStatusAboutReportTableRowChanging(this, new InstrumentStatusAboutReportTableRowChangeEvent(((InstrumentStatusAboutReportTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusAboutReportTableRowDeleted != null)) {
                    this.InstrumentStatusAboutReportTableRowDeleted(this, new InstrumentStatusAboutReportTableRowChangeEvent(((InstrumentStatusAboutReportTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusAboutReportTableRowDeleting != null)) {
                    this.InstrumentStatusAboutReportTableRowDeleting(this, new InstrumentStatusAboutReportTableRowChangeEvent(((InstrumentStatusAboutReportTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInstrumentStatusAboutReportTableRow(InstrumentStatusAboutReportTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusAboutReportTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusPrintReportTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusPrintReportTableRow> {
            
            private global::System.Data.DataColumn columnContainer;
            
            private global::System.Data.DataColumn columnPartNumber;
            
            private global::System.Data.DataColumn columnLotNumber;
            
            private global::System.Data.DataColumn columnExpiryDate;
            
            private global::System.Data.DataColumn columnTotalUses;
            
            private global::System.Data.DataColumn columnRemainingUses;
            
            private global::System.Data.DataColumn columnWasteTubeCapacity;
            
            private global::System.Data.DataColumn columnUsersListFirstCol;
            
            private global::System.Data.DataColumn columnUsersListSecondCol;
            
            private global::System.Data.DataColumn columnCellTypesListFirstCol;
            
            private global::System.Data.DataColumn columnCellTypesListSecondCol;
            
            private global::System.Data.DataColumn columnAppTypesListFirstCol;
            
            private global::System.Data.DataColumn columnAppTypesListSecondCol;
            
            private global::System.Data.DataColumn columnCalibrateConcentration;
            
            private global::System.Data.DataColumn columnCalibrateSize;
            
            private global::System.Data.DataColumn columnMemoryStorage;
            
            private global::System.Data.DataColumn columnBrightFieldLED;
            
            private global::System.Data.DataColumn columnCurrentFocusPosition;
            
            private global::System.Data.DataColumn columnFlowCellDepth;
            
            private global::System.Data.DataColumn columnLowLevelControlList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusPrintReportTableDataTable() {
                this.TableName = "InstrumentStatusPrintReportTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusPrintReportTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected InstrumentStatusPrintReportTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContainerColumn {
                get {
                    return this.columnContainer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PartNumberColumn {
                get {
                    return this.columnPartNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LotNumberColumn {
                get {
                    return this.columnLotNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpiryDateColumn {
                get {
                    return this.columnExpiryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalUsesColumn {
                get {
                    return this.columnTotalUses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemainingUsesColumn {
                get {
                    return this.columnRemainingUses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WasteTubeCapacityColumn {
                get {
                    return this.columnWasteTubeCapacity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UsersListFirstColColumn {
                get {
                    return this.columnUsersListFirstCol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UsersListSecondColColumn {
                get {
                    return this.columnUsersListSecondCol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CellTypesListFirstColColumn {
                get {
                    return this.columnCellTypesListFirstCol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CellTypesListSecondColColumn {
                get {
                    return this.columnCellTypesListSecondCol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AppTypesListFirstColColumn {
                get {
                    return this.columnAppTypesListFirstCol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AppTypesListSecondColColumn {
                get {
                    return this.columnAppTypesListSecondCol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CalibrateConcentrationColumn {
                get {
                    return this.columnCalibrateConcentration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CalibrateSizeColumn {
                get {
                    return this.columnCalibrateSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MemoryStorageColumn {
                get {
                    return this.columnMemoryStorage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrightFieldLEDColumn {
                get {
                    return this.columnBrightFieldLED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CurrentFocusPositionColumn {
                get {
                    return this.columnCurrentFocusPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlowCellDepthColumn {
                get {
                    return this.columnFlowCellDepth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LowLevelControlListColumn {
                get {
                    return this.columnLowLevelControlList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusPrintReportTableRow this[int index] {
                get {
                    return ((InstrumentStatusPrintReportTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusPrintReportTableRowChangeEventHandler InstrumentStatusPrintReportTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusPrintReportTableRowChangeEventHandler InstrumentStatusPrintReportTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusPrintReportTableRowChangeEventHandler InstrumentStatusPrintReportTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusPrintReportTableRowChangeEventHandler InstrumentStatusPrintReportTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInstrumentStatusPrintReportTableRow(InstrumentStatusPrintReportTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusPrintReportTableRow AddInstrumentStatusPrintReportTableRow(
                        string Container, 
                        string PartNumber, 
                        string LotNumber, 
                        string ExpiryDate, 
                        string TotalUses, 
                        string RemainingUses, 
                        string WasteTubeCapacity, 
                        string UsersListFirstCol, 
                        string UsersListSecondCol, 
                        string CellTypesListFirstCol, 
                        string CellTypesListSecondCol, 
                        string AppTypesListFirstCol, 
                        string AppTypesListSecondCol, 
                        string CalibrateConcentration, 
                        string CalibrateSize, 
                        string MemoryStorage, 
                        string BrightFieldLED, 
                        string CurrentFocusPosition, 
                        string FlowCellDepth, 
                        string LowLevelControlList) {
                InstrumentStatusPrintReportTableRow rowInstrumentStatusPrintReportTableRow = ((InstrumentStatusPrintReportTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Container,
                        PartNumber,
                        LotNumber,
                        ExpiryDate,
                        TotalUses,
                        RemainingUses,
                        WasteTubeCapacity,
                        UsersListFirstCol,
                        UsersListSecondCol,
                        CellTypesListFirstCol,
                        CellTypesListSecondCol,
                        AppTypesListFirstCol,
                        AppTypesListSecondCol,
                        CalibrateConcentration,
                        CalibrateSize,
                        MemoryStorage,
                        BrightFieldLED,
                        CurrentFocusPosition,
                        FlowCellDepth,
                        LowLevelControlList};
                rowInstrumentStatusPrintReportTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusPrintReportTableRow);
                return rowInstrumentStatusPrintReportTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusPrintReportTableDataTable cln = ((InstrumentStatusPrintReportTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusPrintReportTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnContainer = base.Columns["Container"];
                this.columnPartNumber = base.Columns["PartNumber"];
                this.columnLotNumber = base.Columns["LotNumber"];
                this.columnExpiryDate = base.Columns["ExpiryDate"];
                this.columnTotalUses = base.Columns["TotalUses"];
                this.columnRemainingUses = base.Columns["RemainingUses"];
                this.columnWasteTubeCapacity = base.Columns["WasteTubeCapacity"];
                this.columnUsersListFirstCol = base.Columns["UsersListFirstCol"];
                this.columnUsersListSecondCol = base.Columns["UsersListSecondCol"];
                this.columnCellTypesListFirstCol = base.Columns["CellTypesListFirstCol"];
                this.columnCellTypesListSecondCol = base.Columns["CellTypesListSecondCol"];
                this.columnAppTypesListFirstCol = base.Columns["AppTypesListFirstCol"];
                this.columnAppTypesListSecondCol = base.Columns["AppTypesListSecondCol"];
                this.columnCalibrateConcentration = base.Columns["CalibrateConcentration"];
                this.columnCalibrateSize = base.Columns["CalibrateSize"];
                this.columnMemoryStorage = base.Columns["MemoryStorage"];
                this.columnBrightFieldLED = base.Columns["BrightFieldLED"];
                this.columnCurrentFocusPosition = base.Columns["CurrentFocusPosition"];
                this.columnFlowCellDepth = base.Columns["FlowCellDepth"];
                this.columnLowLevelControlList = base.Columns["LowLevelControlList"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnContainer = new global::System.Data.DataColumn("Container", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContainer);
                this.columnPartNumber = new global::System.Data.DataColumn("PartNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartNumber);
                this.columnLotNumber = new global::System.Data.DataColumn("LotNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotNumber);
                this.columnExpiryDate = new global::System.Data.DataColumn("ExpiryDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpiryDate);
                this.columnTotalUses = new global::System.Data.DataColumn("TotalUses", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalUses);
                this.columnRemainingUses = new global::System.Data.DataColumn("RemainingUses", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemainingUses);
                this.columnWasteTubeCapacity = new global::System.Data.DataColumn("WasteTubeCapacity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWasteTubeCapacity);
                this.columnUsersListFirstCol = new global::System.Data.DataColumn("UsersListFirstCol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsersListFirstCol);
                this.columnUsersListSecondCol = new global::System.Data.DataColumn("UsersListSecondCol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsersListSecondCol);
                this.columnCellTypesListFirstCol = new global::System.Data.DataColumn("CellTypesListFirstCol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellTypesListFirstCol);
                this.columnCellTypesListSecondCol = new global::System.Data.DataColumn("CellTypesListSecondCol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCellTypesListSecondCol);
                this.columnAppTypesListFirstCol = new global::System.Data.DataColumn("AppTypesListFirstCol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppTypesListFirstCol);
                this.columnAppTypesListSecondCol = new global::System.Data.DataColumn("AppTypesListSecondCol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppTypesListSecondCol);
                this.columnCalibrateConcentration = new global::System.Data.DataColumn("CalibrateConcentration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalibrateConcentration);
                this.columnCalibrateSize = new global::System.Data.DataColumn("CalibrateSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCalibrateSize);
                this.columnMemoryStorage = new global::System.Data.DataColumn("MemoryStorage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemoryStorage);
                this.columnBrightFieldLED = new global::System.Data.DataColumn("BrightFieldLED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrightFieldLED);
                this.columnCurrentFocusPosition = new global::System.Data.DataColumn("CurrentFocusPosition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrentFocusPosition);
                this.columnFlowCellDepth = new global::System.Data.DataColumn("FlowCellDepth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlowCellDepth);
                this.columnLowLevelControlList = new global::System.Data.DataColumn("LowLevelControlList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLowLevelControlList);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusPrintReportTableRow NewInstrumentStatusPrintReportTableRow() {
                return ((InstrumentStatusPrintReportTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusPrintReportTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusPrintReportTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusPrintReportTableRowChanged != null)) {
                    this.InstrumentStatusPrintReportTableRowChanged(this, new InstrumentStatusPrintReportTableRowChangeEvent(((InstrumentStatusPrintReportTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusPrintReportTableRowChanging != null)) {
                    this.InstrumentStatusPrintReportTableRowChanging(this, new InstrumentStatusPrintReportTableRowChangeEvent(((InstrumentStatusPrintReportTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusPrintReportTableRowDeleted != null)) {
                    this.InstrumentStatusPrintReportTableRowDeleted(this, new InstrumentStatusPrintReportTableRowChangeEvent(((InstrumentStatusPrintReportTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusPrintReportTableRowDeleting != null)) {
                    this.InstrumentStatusPrintReportTableRowDeleting(this, new InstrumentStatusPrintReportTableRowChangeEvent(((InstrumentStatusPrintReportTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInstrumentStatusPrintReportTableRow(InstrumentStatusPrintReportTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusPrintReportTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TestReportTableDataTable : global::System.Data.TypedTableBase<TestReportTableRow> {
            
            private global::System.Data.DataColumn columnFirstParam;
            
            private global::System.Data.DataColumn columnSecondParam;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TestReportTableDataTable() {
                this.TableName = "TestReportTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TestReportTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TestReportTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FirstParamColumn {
                get {
                    return this.columnFirstParam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SecondParamColumn {
                get {
                    return this.columnSecondParam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TestReportTableRow this[int index] {
                get {
                    return ((TestReportTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TestReportTableRowChangeEventHandler TestReportTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TestReportTableRowChangeEventHandler TestReportTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TestReportTableRowChangeEventHandler TestReportTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TestReportTableRowChangeEventHandler TestReportTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTestReportTableRow(TestReportTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TestReportTableRow AddTestReportTableRow(string FirstParam, string SecondParam) {
                TestReportTableRow rowTestReportTableRow = ((TestReportTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FirstParam,
                        SecondParam};
                rowTestReportTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTestReportTableRow);
                return rowTestReportTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TestReportTableDataTable cln = ((TestReportTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TestReportTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFirstParam = base.Columns["FirstParam"];
                this.columnSecondParam = base.Columns["SecondParam"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFirstParam = new global::System.Data.DataColumn("FirstParam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstParam);
                this.columnSecondParam = new global::System.Data.DataColumn("SecondParam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecondParam);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TestReportTableRow NewTestReportTableRow() {
                return ((TestReportTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TestReportTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TestReportTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TestReportTableRowChanged != null)) {
                    this.TestReportTableRowChanged(this, new TestReportTableRowChangeEvent(((TestReportTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TestReportTableRowChanging != null)) {
                    this.TestReportTableRowChanging(this, new TestReportTableRowChangeEvent(((TestReportTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TestReportTableRowDeleted != null)) {
                    this.TestReportTableRowDeleted(this, new TestReportTableRowChangeEvent(((TestReportTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TestReportTableRowDeleting != null)) {
                    this.TestReportTableRowDeleting(this, new TestReportTableRowChangeEvent(((TestReportTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTestReportTableRow(TestReportTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TestReportTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ConcCalibrationDataTableDataTable : global::System.Data.TypedTableBase<ConcCalibrationDataTableRow> {
            
            private global::System.Data.DataColumn columnSlope;
            
            private global::System.Data.DataColumn columnIntercept;
            
            private global::System.Data.DataColumn columnLastCalibrationDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConcCalibrationDataTableDataTable() {
                this.TableName = "ConcCalibrationDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ConcCalibrationDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ConcCalibrationDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SlopeColumn {
                get {
                    return this.columnSlope;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InterceptColumn {
                get {
                    return this.columnIntercept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastCalibrationDateColumn {
                get {
                    return this.columnLastCalibrationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConcCalibrationDataTableRow this[int index] {
                get {
                    return ((ConcCalibrationDataTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConcCalibrationDataTableRowChangeEventHandler ConcCalibrationDataTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConcCalibrationDataTableRowChangeEventHandler ConcCalibrationDataTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConcCalibrationDataTableRowChangeEventHandler ConcCalibrationDataTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConcCalibrationDataTableRowChangeEventHandler ConcCalibrationDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddConcCalibrationDataTableRow(ConcCalibrationDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConcCalibrationDataTableRow AddConcCalibrationDataTableRow(string Slope, string Intercept, string LastCalibrationDate) {
                ConcCalibrationDataTableRow rowConcCalibrationDataTableRow = ((ConcCalibrationDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Slope,
                        Intercept,
                        LastCalibrationDate};
                rowConcCalibrationDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowConcCalibrationDataTableRow);
                return rowConcCalibrationDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ConcCalibrationDataTableDataTable cln = ((ConcCalibrationDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ConcCalibrationDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSlope = base.Columns["Slope"];
                this.columnIntercept = base.Columns["Intercept"];
                this.columnLastCalibrationDate = base.Columns["LastCalibrationDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSlope = new global::System.Data.DataColumn("Slope", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlope);
                this.columnIntercept = new global::System.Data.DataColumn("Intercept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntercept);
                this.columnLastCalibrationDate = new global::System.Data.DataColumn("LastCalibrationDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastCalibrationDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConcCalibrationDataTableRow NewConcCalibrationDataTableRow() {
                return ((ConcCalibrationDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ConcCalibrationDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ConcCalibrationDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ConcCalibrationDataTableRowChanged != null)) {
                    this.ConcCalibrationDataTableRowChanged(this, new ConcCalibrationDataTableRowChangeEvent(((ConcCalibrationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ConcCalibrationDataTableRowChanging != null)) {
                    this.ConcCalibrationDataTableRowChanging(this, new ConcCalibrationDataTableRowChangeEvent(((ConcCalibrationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ConcCalibrationDataTableRowDeleted != null)) {
                    this.ConcCalibrationDataTableRowDeleted(this, new ConcCalibrationDataTableRowChangeEvent(((ConcCalibrationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ConcCalibrationDataTableRowDeleting != null)) {
                    this.ConcCalibrationDataTableRowDeleting(this, new ConcCalibrationDataTableRowChangeEvent(((ConcCalibrationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveConcCalibrationDataTableRow(ConcCalibrationDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ConcCalibrationDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ConCalibrationLastCalibrationTableDataTable : global::System.Data.TypedTableBase<ConCalibrationLastCalibrationTableRow> {
            
            private global::System.Data.DataColumn columnAssayValue;
            
            private global::System.Data.DataColumn columnExpirationDate;
            
            private global::System.Data.DataColumn columnLotNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConCalibrationLastCalibrationTableDataTable() {
                this.TableName = "ConCalibrationLastCalibrationTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ConCalibrationLastCalibrationTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ConCalibrationLastCalibrationTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssayValueColumn {
                get {
                    return this.columnAssayValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpirationDateColumn {
                get {
                    return this.columnExpirationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LotNumberColumn {
                get {
                    return this.columnLotNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConCalibrationLastCalibrationTableRow this[int index] {
                get {
                    return ((ConCalibrationLastCalibrationTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConCalibrationLastCalibrationTableRowChangeEventHandler ConCalibrationLastCalibrationTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConCalibrationLastCalibrationTableRowChangeEventHandler ConCalibrationLastCalibrationTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConCalibrationLastCalibrationTableRowChangeEventHandler ConCalibrationLastCalibrationTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ConCalibrationLastCalibrationTableRowChangeEventHandler ConCalibrationLastCalibrationTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddConCalibrationLastCalibrationTableRow(ConCalibrationLastCalibrationTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConCalibrationLastCalibrationTableRow AddConCalibrationLastCalibrationTableRow(string AssayValue, string ExpirationDate, string LotNumber) {
                ConCalibrationLastCalibrationTableRow rowConCalibrationLastCalibrationTableRow = ((ConCalibrationLastCalibrationTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AssayValue,
                        ExpirationDate,
                        LotNumber};
                rowConCalibrationLastCalibrationTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowConCalibrationLastCalibrationTableRow);
                return rowConCalibrationLastCalibrationTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ConCalibrationLastCalibrationTableDataTable cln = ((ConCalibrationLastCalibrationTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ConCalibrationLastCalibrationTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAssayValue = base.Columns["AssayValue"];
                this.columnExpirationDate = base.Columns["ExpirationDate"];
                this.columnLotNumber = base.Columns["LotNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAssayValue = new global::System.Data.DataColumn("AssayValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssayValue);
                this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirationDate);
                this.columnLotNumber = new global::System.Data.DataColumn("LotNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotNumber);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConCalibrationLastCalibrationTableRow NewConCalibrationLastCalibrationTableRow() {
                return ((ConCalibrationLastCalibrationTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ConCalibrationLastCalibrationTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ConCalibrationLastCalibrationTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ConCalibrationLastCalibrationTableRowChanged != null)) {
                    this.ConCalibrationLastCalibrationTableRowChanged(this, new ConCalibrationLastCalibrationTableRowChangeEvent(((ConCalibrationLastCalibrationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ConCalibrationLastCalibrationTableRowChanging != null)) {
                    this.ConCalibrationLastCalibrationTableRowChanging(this, new ConCalibrationLastCalibrationTableRowChangeEvent(((ConCalibrationLastCalibrationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ConCalibrationLastCalibrationTableRowDeleted != null)) {
                    this.ConCalibrationLastCalibrationTableRowDeleted(this, new ConCalibrationLastCalibrationTableRowChangeEvent(((ConCalibrationLastCalibrationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ConCalibrationLastCalibrationTableRowDeleting != null)) {
                    this.ConCalibrationLastCalibrationTableRowDeleting(this, new ConCalibrationLastCalibrationTableRowChangeEvent(((ConCalibrationLastCalibrationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveConCalibrationLastCalibrationTableRow(ConCalibrationLastCalibrationTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ConCalibrationLastCalibrationTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SizeCalibrationDataTableDataTable : global::System.Data.TypedTableBase<SizeCalibrationDataTableRow> {
            
            private global::System.Data.DataColumn columnSlope;
            
            private global::System.Data.DataColumn columnIntercept;
            
            private global::System.Data.DataColumn columnLastCalibrationDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SizeCalibrationDataTableDataTable() {
                this.TableName = "SizeCalibrationDataTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SizeCalibrationDataTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SizeCalibrationDataTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SlopeColumn {
                get {
                    return this.columnSlope;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InterceptColumn {
                get {
                    return this.columnIntercept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastCalibrationDateColumn {
                get {
                    return this.columnLastCalibrationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SizeCalibrationDataTableRow this[int index] {
                get {
                    return ((SizeCalibrationDataTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SizeCalibrationDataTableRowChangeEventHandler SizeCalibrationDataTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SizeCalibrationDataTableRowChangeEventHandler SizeCalibrationDataTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SizeCalibrationDataTableRowChangeEventHandler SizeCalibrationDataTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SizeCalibrationDataTableRowChangeEventHandler SizeCalibrationDataTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSizeCalibrationDataTableRow(SizeCalibrationDataTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SizeCalibrationDataTableRow AddSizeCalibrationDataTableRow(string Slope, string Intercept, string LastCalibrationDate) {
                SizeCalibrationDataTableRow rowSizeCalibrationDataTableRow = ((SizeCalibrationDataTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Slope,
                        Intercept,
                        LastCalibrationDate};
                rowSizeCalibrationDataTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSizeCalibrationDataTableRow);
                return rowSizeCalibrationDataTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SizeCalibrationDataTableDataTable cln = ((SizeCalibrationDataTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SizeCalibrationDataTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSlope = base.Columns["Slope"];
                this.columnIntercept = base.Columns["Intercept"];
                this.columnLastCalibrationDate = base.Columns["LastCalibrationDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSlope = new global::System.Data.DataColumn("Slope", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlope);
                this.columnIntercept = new global::System.Data.DataColumn("Intercept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntercept);
                this.columnLastCalibrationDate = new global::System.Data.DataColumn("LastCalibrationDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastCalibrationDate);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SizeCalibrationDataTableRow NewSizeCalibrationDataTableRow() {
                return ((SizeCalibrationDataTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SizeCalibrationDataTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SizeCalibrationDataTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SizeCalibrationDataTableRowChanged != null)) {
                    this.SizeCalibrationDataTableRowChanged(this, new SizeCalibrationDataTableRowChangeEvent(((SizeCalibrationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SizeCalibrationDataTableRowChanging != null)) {
                    this.SizeCalibrationDataTableRowChanging(this, new SizeCalibrationDataTableRowChangeEvent(((SizeCalibrationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SizeCalibrationDataTableRowDeleted != null)) {
                    this.SizeCalibrationDataTableRowDeleted(this, new SizeCalibrationDataTableRowChangeEvent(((SizeCalibrationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SizeCalibrationDataTableRowDeleting != null)) {
                    this.SizeCalibrationDataTableRowDeleting(this, new SizeCalibrationDataTableRowChangeEvent(((SizeCalibrationDataTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSizeCalibrationDataTableRow(SizeCalibrationDataTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SizeCalibrationDataTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SizeCalibrationLastCalibrationTableDataTable : global::System.Data.TypedTableBase<SizeCalibrationLastCalibrationTableRow> {
            
            private global::System.Data.DataColumn columnAssayValue;
            
            private global::System.Data.DataColumn columnExpirationDate;
            
            private global::System.Data.DataColumn columnLotNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SizeCalibrationLastCalibrationTableDataTable() {
                this.TableName = "SizeCalibrationLastCalibrationTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SizeCalibrationLastCalibrationTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SizeCalibrationLastCalibrationTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AssayValueColumn {
                get {
                    return this.columnAssayValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpirationDateColumn {
                get {
                    return this.columnExpirationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LotNumberColumn {
                get {
                    return this.columnLotNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SizeCalibrationLastCalibrationTableRow this[int index] {
                get {
                    return ((SizeCalibrationLastCalibrationTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SizeCalibrationLastCalibrationTableRowChangeEventHandler SizeCalibrationLastCalibrationTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SizeCalibrationLastCalibrationTableRowChangeEventHandler SizeCalibrationLastCalibrationTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SizeCalibrationLastCalibrationTableRowChangeEventHandler SizeCalibrationLastCalibrationTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SizeCalibrationLastCalibrationTableRowChangeEventHandler SizeCalibrationLastCalibrationTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSizeCalibrationLastCalibrationTableRow(SizeCalibrationLastCalibrationTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SizeCalibrationLastCalibrationTableRow AddSizeCalibrationLastCalibrationTableRow(string AssayValue, string ExpirationDate, string LotNumber) {
                SizeCalibrationLastCalibrationTableRow rowSizeCalibrationLastCalibrationTableRow = ((SizeCalibrationLastCalibrationTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AssayValue,
                        ExpirationDate,
                        LotNumber};
                rowSizeCalibrationLastCalibrationTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSizeCalibrationLastCalibrationTableRow);
                return rowSizeCalibrationLastCalibrationTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SizeCalibrationLastCalibrationTableDataTable cln = ((SizeCalibrationLastCalibrationTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SizeCalibrationLastCalibrationTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAssayValue = base.Columns["AssayValue"];
                this.columnExpirationDate = base.Columns["ExpirationDate"];
                this.columnLotNumber = base.Columns["LotNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAssayValue = new global::System.Data.DataColumn("AssayValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAssayValue);
                this.columnExpirationDate = new global::System.Data.DataColumn("ExpirationDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpirationDate);
                this.columnLotNumber = new global::System.Data.DataColumn("LotNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotNumber);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SizeCalibrationLastCalibrationTableRow NewSizeCalibrationLastCalibrationTableRow() {
                return ((SizeCalibrationLastCalibrationTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SizeCalibrationLastCalibrationTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SizeCalibrationLastCalibrationTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SizeCalibrationLastCalibrationTableRowChanged != null)) {
                    this.SizeCalibrationLastCalibrationTableRowChanged(this, new SizeCalibrationLastCalibrationTableRowChangeEvent(((SizeCalibrationLastCalibrationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SizeCalibrationLastCalibrationTableRowChanging != null)) {
                    this.SizeCalibrationLastCalibrationTableRowChanging(this, new SizeCalibrationLastCalibrationTableRowChangeEvent(((SizeCalibrationLastCalibrationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SizeCalibrationLastCalibrationTableRowDeleted != null)) {
                    this.SizeCalibrationLastCalibrationTableRowDeleted(this, new SizeCalibrationLastCalibrationTableRowChangeEvent(((SizeCalibrationLastCalibrationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SizeCalibrationLastCalibrationTableRowDeleting != null)) {
                    this.SizeCalibrationLastCalibrationTableRowDeleting(this, new SizeCalibrationLastCalibrationTableRowChangeEvent(((SizeCalibrationLastCalibrationTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSizeCalibrationLastCalibrationTableRow(SizeCalibrationLastCalibrationTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SizeCalibrationLastCalibrationTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusReportStorageTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusReportStorageTableRow> {
            
            private global::System.Data.DataColumn columnMemorySummary;
            
            private global::System.Data.DataColumn columnOtherMemory;
            
            private global::System.Data.DataColumn columnDataMemory;
            
            private global::System.Data.DataColumn columnExportMemory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportStorageTableDataTable() {
                this.TableName = "InstrumentStatusReportStorageTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportStorageTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected InstrumentStatusReportStorageTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MemorySummaryColumn {
                get {
                    return this.columnMemorySummary;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherMemoryColumn {
                get {
                    return this.columnOtherMemory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DataMemoryColumn {
                get {
                    return this.columnDataMemory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExportMemoryColumn {
                get {
                    return this.columnExportMemory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportStorageTableRow this[int index] {
                get {
                    return ((InstrumentStatusReportStorageTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportStorageTableRowChangeEventHandler InstrumentStatusReportStorageTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportStorageTableRowChangeEventHandler InstrumentStatusReportStorageTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportStorageTableRowChangeEventHandler InstrumentStatusReportStorageTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportStorageTableRowChangeEventHandler InstrumentStatusReportStorageTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInstrumentStatusReportStorageTableRow(InstrumentStatusReportStorageTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportStorageTableRow AddInstrumentStatusReportStorageTableRow(string MemorySummary, string OtherMemory, string DataMemory, string ExportMemory) {
                InstrumentStatusReportStorageTableRow rowInstrumentStatusReportStorageTableRow = ((InstrumentStatusReportStorageTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MemorySummary,
                        OtherMemory,
                        DataMemory,
                        ExportMemory};
                rowInstrumentStatusReportStorageTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusReportStorageTableRow);
                return rowInstrumentStatusReportStorageTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusReportStorageTableDataTable cln = ((InstrumentStatusReportStorageTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusReportStorageTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMemorySummary = base.Columns["MemorySummary"];
                this.columnOtherMemory = base.Columns["OtherMemory"];
                this.columnDataMemory = base.Columns["DataMemory"];
                this.columnExportMemory = base.Columns["ExportMemory"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMemorySummary = new global::System.Data.DataColumn("MemorySummary", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMemorySummary);
                this.columnOtherMemory = new global::System.Data.DataColumn("OtherMemory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherMemory);
                this.columnDataMemory = new global::System.Data.DataColumn("DataMemory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataMemory);
                this.columnExportMemory = new global::System.Data.DataColumn("ExportMemory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExportMemory);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportStorageTableRow NewInstrumentStatusReportStorageTableRow() {
                return ((InstrumentStatusReportStorageTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusReportStorageTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusReportStorageTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusReportStorageTableRowChanged != null)) {
                    this.InstrumentStatusReportStorageTableRowChanged(this, new InstrumentStatusReportStorageTableRowChangeEvent(((InstrumentStatusReportStorageTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusReportStorageTableRowChanging != null)) {
                    this.InstrumentStatusReportStorageTableRowChanging(this, new InstrumentStatusReportStorageTableRowChangeEvent(((InstrumentStatusReportStorageTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusReportStorageTableRowDeleted != null)) {
                    this.InstrumentStatusReportStorageTableRowDeleted(this, new InstrumentStatusReportStorageTableRowChangeEvent(((InstrumentStatusReportStorageTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusReportStorageTableRowDeleting != null)) {
                    this.InstrumentStatusReportStorageTableRowDeleting(this, new InstrumentStatusReportStorageTableRowChangeEvent(((InstrumentStatusReportStorageTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInstrumentStatusReportStorageTableRow(InstrumentStatusReportStorageTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusReportStorageTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusReportLowLevelControlTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusReportLowLevelControlTableRow> {
            
            private global::System.Data.DataColumn columnSensorStatusState;
            
            private global::System.Data.DataColumn columnMotorStatusState;
            
            private global::System.Data.DataColumn columnStatusState;
            
            private global::System.Data.DataColumn columnVoltage;
            
            private global::System.Data.DataColumn columnTemperature;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportLowLevelControlTableDataTable() {
                this.TableName = "InstrumentStatusReportLowLevelControlTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportLowLevelControlTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected InstrumentStatusReportLowLevelControlTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SensorStatusStateColumn {
                get {
                    return this.columnSensorStatusState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotorStatusStateColumn {
                get {
                    return this.columnMotorStatusState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusStateColumn {
                get {
                    return this.columnStatusState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VoltageColumn {
                get {
                    return this.columnVoltage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TemperatureColumn {
                get {
                    return this.columnTemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportLowLevelControlTableRow this[int index] {
                get {
                    return ((InstrumentStatusReportLowLevelControlTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportLowLevelControlTableRowChangeEventHandler InstrumentStatusReportLowLevelControlTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportLowLevelControlTableRowChangeEventHandler InstrumentStatusReportLowLevelControlTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportLowLevelControlTableRowChangeEventHandler InstrumentStatusReportLowLevelControlTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportLowLevelControlTableRowChangeEventHandler InstrumentStatusReportLowLevelControlTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInstrumentStatusReportLowLevelControlTableRow(InstrumentStatusReportLowLevelControlTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportLowLevelControlTableRow AddInstrumentStatusReportLowLevelControlTableRow(string SensorStatusState, string MotorStatusState, string StatusState, string Voltage, string Temperature) {
                InstrumentStatusReportLowLevelControlTableRow rowInstrumentStatusReportLowLevelControlTableRow = ((InstrumentStatusReportLowLevelControlTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SensorStatusState,
                        MotorStatusState,
                        StatusState,
                        Voltage,
                        Temperature};
                rowInstrumentStatusReportLowLevelControlTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusReportLowLevelControlTableRow);
                return rowInstrumentStatusReportLowLevelControlTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusReportLowLevelControlTableDataTable cln = ((InstrumentStatusReportLowLevelControlTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusReportLowLevelControlTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSensorStatusState = base.Columns["SensorStatusState"];
                this.columnMotorStatusState = base.Columns["MotorStatusState"];
                this.columnStatusState = base.Columns["StatusState"];
                this.columnVoltage = base.Columns["Voltage"];
                this.columnTemperature = base.Columns["Temperature"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSensorStatusState = new global::System.Data.DataColumn("SensorStatusState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSensorStatusState);
                this.columnMotorStatusState = new global::System.Data.DataColumn("MotorStatusState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotorStatusState);
                this.columnStatusState = new global::System.Data.DataColumn("StatusState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatusState);
                this.columnVoltage = new global::System.Data.DataColumn("Voltage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVoltage);
                this.columnTemperature = new global::System.Data.DataColumn("Temperature", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemperature);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportLowLevelControlTableRow NewInstrumentStatusReportLowLevelControlTableRow() {
                return ((InstrumentStatusReportLowLevelControlTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusReportLowLevelControlTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusReportLowLevelControlTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusReportLowLevelControlTableRowChanged != null)) {
                    this.InstrumentStatusReportLowLevelControlTableRowChanged(this, new InstrumentStatusReportLowLevelControlTableRowChangeEvent(((InstrumentStatusReportLowLevelControlTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusReportLowLevelControlTableRowChanging != null)) {
                    this.InstrumentStatusReportLowLevelControlTableRowChanging(this, new InstrumentStatusReportLowLevelControlTableRowChangeEvent(((InstrumentStatusReportLowLevelControlTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusReportLowLevelControlTableRowDeleted != null)) {
                    this.InstrumentStatusReportLowLevelControlTableRowDeleted(this, new InstrumentStatusReportLowLevelControlTableRowChangeEvent(((InstrumentStatusReportLowLevelControlTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusReportLowLevelControlTableRowDeleting != null)) {
                    this.InstrumentStatusReportLowLevelControlTableRowDeleting(this, new InstrumentStatusReportLowLevelControlTableRowChangeEvent(((InstrumentStatusReportLowLevelControlTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInstrumentStatusReportLowLevelControlTableRow(InstrumentStatusReportLowLevelControlTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusReportLowLevelControlTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusReportUserFirstColumnTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusReportUserFirstColumnTableRow> {
            
            private global::System.Data.DataColumn columnSlNo;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportUserFirstColumnTableDataTable() {
                this.TableName = "InstrumentStatusReportUserFirstColumnTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportUserFirstColumnTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected InstrumentStatusReportUserFirstColumnTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SlNoColumn {
                get {
                    return this.columnSlNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportUserFirstColumnTableRow this[int index] {
                get {
                    return ((InstrumentStatusReportUserFirstColumnTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportUserFirstColumnTableRowChangeEventHandler InstrumentStatusReportUserFirstColumnTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportUserFirstColumnTableRowChangeEventHandler InstrumentStatusReportUserFirstColumnTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportUserFirstColumnTableRowChangeEventHandler InstrumentStatusReportUserFirstColumnTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportUserFirstColumnTableRowChangeEventHandler InstrumentStatusReportUserFirstColumnTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInstrumentStatusReportUserFirstColumnTableRow(InstrumentStatusReportUserFirstColumnTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportUserFirstColumnTableRow AddInstrumentStatusReportUserFirstColumnTableRow(string SlNo, string Name) {
                InstrumentStatusReportUserFirstColumnTableRow rowInstrumentStatusReportUserFirstColumnTableRow = ((InstrumentStatusReportUserFirstColumnTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SlNo,
                        Name};
                rowInstrumentStatusReportUserFirstColumnTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusReportUserFirstColumnTableRow);
                return rowInstrumentStatusReportUserFirstColumnTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusReportUserFirstColumnTableDataTable cln = ((InstrumentStatusReportUserFirstColumnTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusReportUserFirstColumnTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSlNo = base.Columns["SlNo"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSlNo = new global::System.Data.DataColumn("SlNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlNo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportUserFirstColumnTableRow NewInstrumentStatusReportUserFirstColumnTableRow() {
                return ((InstrumentStatusReportUserFirstColumnTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusReportUserFirstColumnTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusReportUserFirstColumnTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusReportUserFirstColumnTableRowChanged != null)) {
                    this.InstrumentStatusReportUserFirstColumnTableRowChanged(this, new InstrumentStatusReportUserFirstColumnTableRowChangeEvent(((InstrumentStatusReportUserFirstColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusReportUserFirstColumnTableRowChanging != null)) {
                    this.InstrumentStatusReportUserFirstColumnTableRowChanging(this, new InstrumentStatusReportUserFirstColumnTableRowChangeEvent(((InstrumentStatusReportUserFirstColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusReportUserFirstColumnTableRowDeleted != null)) {
                    this.InstrumentStatusReportUserFirstColumnTableRowDeleted(this, new InstrumentStatusReportUserFirstColumnTableRowChangeEvent(((InstrumentStatusReportUserFirstColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusReportUserFirstColumnTableRowDeleting != null)) {
                    this.InstrumentStatusReportUserFirstColumnTableRowDeleting(this, new InstrumentStatusReportUserFirstColumnTableRowChangeEvent(((InstrumentStatusReportUserFirstColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInstrumentStatusReportUserFirstColumnTableRow(InstrumentStatusReportUserFirstColumnTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusReportUserFirstColumnTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusReportUserSecondColumnTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusReportUserSecondColumnTableRow> {
            
            private global::System.Data.DataColumn columnSlNo;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportUserSecondColumnTableDataTable() {
                this.TableName = "InstrumentStatusReportUserSecondColumnTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportUserSecondColumnTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected InstrumentStatusReportUserSecondColumnTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SlNoColumn {
                get {
                    return this.columnSlNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportUserSecondColumnTableRow this[int index] {
                get {
                    return ((InstrumentStatusReportUserSecondColumnTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportUserSecondColumnTableRowChangeEventHandler InstrumentStatusReportUserSecondColumnTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportUserSecondColumnTableRowChangeEventHandler InstrumentStatusReportUserSecondColumnTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportUserSecondColumnTableRowChangeEventHandler InstrumentStatusReportUserSecondColumnTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportUserSecondColumnTableRowChangeEventHandler InstrumentStatusReportUserSecondColumnTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInstrumentStatusReportUserSecondColumnTableRow(InstrumentStatusReportUserSecondColumnTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportUserSecondColumnTableRow AddInstrumentStatusReportUserSecondColumnTableRow(string SlNo, string Name) {
                InstrumentStatusReportUserSecondColumnTableRow rowInstrumentStatusReportUserSecondColumnTableRow = ((InstrumentStatusReportUserSecondColumnTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SlNo,
                        Name};
                rowInstrumentStatusReportUserSecondColumnTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusReportUserSecondColumnTableRow);
                return rowInstrumentStatusReportUserSecondColumnTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusReportUserSecondColumnTableDataTable cln = ((InstrumentStatusReportUserSecondColumnTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusReportUserSecondColumnTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSlNo = base.Columns["SlNo"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSlNo = new global::System.Data.DataColumn("SlNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlNo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportUserSecondColumnTableRow NewInstrumentStatusReportUserSecondColumnTableRow() {
                return ((InstrumentStatusReportUserSecondColumnTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusReportUserSecondColumnTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusReportUserSecondColumnTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusReportUserSecondColumnTableRowChanged != null)) {
                    this.InstrumentStatusReportUserSecondColumnTableRowChanged(this, new InstrumentStatusReportUserSecondColumnTableRowChangeEvent(((InstrumentStatusReportUserSecondColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusReportUserSecondColumnTableRowChanging != null)) {
                    this.InstrumentStatusReportUserSecondColumnTableRowChanging(this, new InstrumentStatusReportUserSecondColumnTableRowChangeEvent(((InstrumentStatusReportUserSecondColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusReportUserSecondColumnTableRowDeleted != null)) {
                    this.InstrumentStatusReportUserSecondColumnTableRowDeleted(this, new InstrumentStatusReportUserSecondColumnTableRowChangeEvent(((InstrumentStatusReportUserSecondColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusReportUserSecondColumnTableRowDeleting != null)) {
                    this.InstrumentStatusReportUserSecondColumnTableRowDeleting(this, new InstrumentStatusReportUserSecondColumnTableRowChangeEvent(((InstrumentStatusReportUserSecondColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInstrumentStatusReportUserSecondColumnTableRow(InstrumentStatusReportUserSecondColumnTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusReportUserSecondColumnTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusReportCellTypeFirstColumnTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusReportCellTypeFirstColumnTableRow> {
            
            private global::System.Data.DataColumn columnSlNo;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportCellTypeFirstColumnTableDataTable() {
                this.TableName = "InstrumentStatusReportCellTypeFirstColumnTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportCellTypeFirstColumnTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected InstrumentStatusReportCellTypeFirstColumnTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SlNoColumn {
                get {
                    return this.columnSlNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportCellTypeFirstColumnTableRow this[int index] {
                get {
                    return ((InstrumentStatusReportCellTypeFirstColumnTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportCellTypeFirstColumnTableRowChangeEventHandler InstrumentStatusReportCellTypeFirstColumnTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportCellTypeFirstColumnTableRowChangeEventHandler InstrumentStatusReportCellTypeFirstColumnTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportCellTypeFirstColumnTableRowChangeEventHandler InstrumentStatusReportCellTypeFirstColumnTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportCellTypeFirstColumnTableRowChangeEventHandler InstrumentStatusReportCellTypeFirstColumnTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInstrumentStatusReportCellTypeFirstColumnTableRow(InstrumentStatusReportCellTypeFirstColumnTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportCellTypeFirstColumnTableRow AddInstrumentStatusReportCellTypeFirstColumnTableRow(string SlNo, string Name) {
                InstrumentStatusReportCellTypeFirstColumnTableRow rowInstrumentStatusReportCellTypeFirstColumnTableRow = ((InstrumentStatusReportCellTypeFirstColumnTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SlNo,
                        Name};
                rowInstrumentStatusReportCellTypeFirstColumnTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusReportCellTypeFirstColumnTableRow);
                return rowInstrumentStatusReportCellTypeFirstColumnTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusReportCellTypeFirstColumnTableDataTable cln = ((InstrumentStatusReportCellTypeFirstColumnTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusReportCellTypeFirstColumnTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSlNo = base.Columns["SlNo"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSlNo = new global::System.Data.DataColumn("SlNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlNo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportCellTypeFirstColumnTableRow NewInstrumentStatusReportCellTypeFirstColumnTableRow() {
                return ((InstrumentStatusReportCellTypeFirstColumnTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusReportCellTypeFirstColumnTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusReportCellTypeFirstColumnTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusReportCellTypeFirstColumnTableRowChanged != null)) {
                    this.InstrumentStatusReportCellTypeFirstColumnTableRowChanged(this, new InstrumentStatusReportCellTypeFirstColumnTableRowChangeEvent(((InstrumentStatusReportCellTypeFirstColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusReportCellTypeFirstColumnTableRowChanging != null)) {
                    this.InstrumentStatusReportCellTypeFirstColumnTableRowChanging(this, new InstrumentStatusReportCellTypeFirstColumnTableRowChangeEvent(((InstrumentStatusReportCellTypeFirstColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusReportCellTypeFirstColumnTableRowDeleted != null)) {
                    this.InstrumentStatusReportCellTypeFirstColumnTableRowDeleted(this, new InstrumentStatusReportCellTypeFirstColumnTableRowChangeEvent(((InstrumentStatusReportCellTypeFirstColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusReportCellTypeFirstColumnTableRowDeleting != null)) {
                    this.InstrumentStatusReportCellTypeFirstColumnTableRowDeleting(this, new InstrumentStatusReportCellTypeFirstColumnTableRowChangeEvent(((InstrumentStatusReportCellTypeFirstColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInstrumentStatusReportCellTypeFirstColumnTableRow(InstrumentStatusReportCellTypeFirstColumnTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusReportCellTypeFirstColumnTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusReportCellTypeSecondColumnTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusReportCellTypeSecondColumnTableRow> {
            
            private global::System.Data.DataColumn columnSlNo;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportCellTypeSecondColumnTableDataTable() {
                this.TableName = "InstrumentStatusReportCellTypeSecondColumnTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportCellTypeSecondColumnTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected InstrumentStatusReportCellTypeSecondColumnTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SlNoColumn {
                get {
                    return this.columnSlNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportCellTypeSecondColumnTableRow this[int index] {
                get {
                    return ((InstrumentStatusReportCellTypeSecondColumnTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportCellTypeSecondColumnTableRowChangeEventHandler InstrumentStatusReportCellTypeSecondColumnTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportCellTypeSecondColumnTableRowChangeEventHandler InstrumentStatusReportCellTypeSecondColumnTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportCellTypeSecondColumnTableRowChangeEventHandler InstrumentStatusReportCellTypeSecondColumnTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportCellTypeSecondColumnTableRowChangeEventHandler InstrumentStatusReportCellTypeSecondColumnTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInstrumentStatusReportCellTypeSecondColumnTableRow(InstrumentStatusReportCellTypeSecondColumnTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportCellTypeSecondColumnTableRow AddInstrumentStatusReportCellTypeSecondColumnTableRow(string SlNo, string Name) {
                InstrumentStatusReportCellTypeSecondColumnTableRow rowInstrumentStatusReportCellTypeSecondColumnTableRow = ((InstrumentStatusReportCellTypeSecondColumnTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SlNo,
                        Name};
                rowInstrumentStatusReportCellTypeSecondColumnTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusReportCellTypeSecondColumnTableRow);
                return rowInstrumentStatusReportCellTypeSecondColumnTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusReportCellTypeSecondColumnTableDataTable cln = ((InstrumentStatusReportCellTypeSecondColumnTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusReportCellTypeSecondColumnTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSlNo = base.Columns["SlNo"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSlNo = new global::System.Data.DataColumn("SlNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlNo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportCellTypeSecondColumnTableRow NewInstrumentStatusReportCellTypeSecondColumnTableRow() {
                return ((InstrumentStatusReportCellTypeSecondColumnTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusReportCellTypeSecondColumnTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusReportCellTypeSecondColumnTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusReportCellTypeSecondColumnTableRowChanged != null)) {
                    this.InstrumentStatusReportCellTypeSecondColumnTableRowChanged(this, new InstrumentStatusReportCellTypeSecondColumnTableRowChangeEvent(((InstrumentStatusReportCellTypeSecondColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusReportCellTypeSecondColumnTableRowChanging != null)) {
                    this.InstrumentStatusReportCellTypeSecondColumnTableRowChanging(this, new InstrumentStatusReportCellTypeSecondColumnTableRowChangeEvent(((InstrumentStatusReportCellTypeSecondColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusReportCellTypeSecondColumnTableRowDeleted != null)) {
                    this.InstrumentStatusReportCellTypeSecondColumnTableRowDeleted(this, new InstrumentStatusReportCellTypeSecondColumnTableRowChangeEvent(((InstrumentStatusReportCellTypeSecondColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusReportCellTypeSecondColumnTableRowDeleting != null)) {
                    this.InstrumentStatusReportCellTypeSecondColumnTableRowDeleting(this, new InstrumentStatusReportCellTypeSecondColumnTableRowChangeEvent(((InstrumentStatusReportCellTypeSecondColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInstrumentStatusReportCellTypeSecondColumnTableRow(InstrumentStatusReportCellTypeSecondColumnTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusReportCellTypeSecondColumnTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusReportAppTypeFirstColumnTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusReportAppTypeFirstColumnTableRow> {
            
            private global::System.Data.DataColumn columnSlNo;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportAppTypeFirstColumnTableDataTable() {
                this.TableName = "InstrumentStatusReportAppTypeFirstColumnTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportAppTypeFirstColumnTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected InstrumentStatusReportAppTypeFirstColumnTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SlNoColumn {
                get {
                    return this.columnSlNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportAppTypeFirstColumnTableRow this[int index] {
                get {
                    return ((InstrumentStatusReportAppTypeFirstColumnTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportAppTypeFirstColumnTableRowChangeEventHandler InstrumentStatusReportAppTypeFirstColumnTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportAppTypeFirstColumnTableRowChangeEventHandler InstrumentStatusReportAppTypeFirstColumnTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportAppTypeFirstColumnTableRowChangeEventHandler InstrumentStatusReportAppTypeFirstColumnTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportAppTypeFirstColumnTableRowChangeEventHandler InstrumentStatusReportAppTypeFirstColumnTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInstrumentStatusReportAppTypeFirstColumnTableRow(InstrumentStatusReportAppTypeFirstColumnTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportAppTypeFirstColumnTableRow AddInstrumentStatusReportAppTypeFirstColumnTableRow(string SlNo, string Name) {
                InstrumentStatusReportAppTypeFirstColumnTableRow rowInstrumentStatusReportAppTypeFirstColumnTableRow = ((InstrumentStatusReportAppTypeFirstColumnTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SlNo,
                        Name};
                rowInstrumentStatusReportAppTypeFirstColumnTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusReportAppTypeFirstColumnTableRow);
                return rowInstrumentStatusReportAppTypeFirstColumnTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusReportAppTypeFirstColumnTableDataTable cln = ((InstrumentStatusReportAppTypeFirstColumnTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusReportAppTypeFirstColumnTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSlNo = base.Columns["SlNo"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSlNo = new global::System.Data.DataColumn("SlNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlNo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportAppTypeFirstColumnTableRow NewInstrumentStatusReportAppTypeFirstColumnTableRow() {
                return ((InstrumentStatusReportAppTypeFirstColumnTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusReportAppTypeFirstColumnTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusReportAppTypeFirstColumnTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusReportAppTypeFirstColumnTableRowChanged != null)) {
                    this.InstrumentStatusReportAppTypeFirstColumnTableRowChanged(this, new InstrumentStatusReportAppTypeFirstColumnTableRowChangeEvent(((InstrumentStatusReportAppTypeFirstColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusReportAppTypeFirstColumnTableRowChanging != null)) {
                    this.InstrumentStatusReportAppTypeFirstColumnTableRowChanging(this, new InstrumentStatusReportAppTypeFirstColumnTableRowChangeEvent(((InstrumentStatusReportAppTypeFirstColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusReportAppTypeFirstColumnTableRowDeleted != null)) {
                    this.InstrumentStatusReportAppTypeFirstColumnTableRowDeleted(this, new InstrumentStatusReportAppTypeFirstColumnTableRowChangeEvent(((InstrumentStatusReportAppTypeFirstColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusReportAppTypeFirstColumnTableRowDeleting != null)) {
                    this.InstrumentStatusReportAppTypeFirstColumnTableRowDeleting(this, new InstrumentStatusReportAppTypeFirstColumnTableRowChangeEvent(((InstrumentStatusReportAppTypeFirstColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInstrumentStatusReportAppTypeFirstColumnTableRow(InstrumentStatusReportAppTypeFirstColumnTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusReportAppTypeFirstColumnTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InstrumentStatusReportAppTypeSecondColumnTableDataTable : global::System.Data.TypedTableBase<InstrumentStatusReportAppTypeSecondColumnTableRow> {
            
            private global::System.Data.DataColumn columnSlNo;
            
            private global::System.Data.DataColumn columnName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportAppTypeSecondColumnTableDataTable() {
                this.TableName = "InstrumentStatusReportAppTypeSecondColumnTable";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportAppTypeSecondColumnTableDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected InstrumentStatusReportAppTypeSecondColumnTableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SlNoColumn {
                get {
                    return this.columnSlNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportAppTypeSecondColumnTableRow this[int index] {
                get {
                    return ((InstrumentStatusReportAppTypeSecondColumnTableRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportAppTypeSecondColumnTableRowChangeEventHandler InstrumentStatusReportAppTypeSecondColumnTableRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportAppTypeSecondColumnTableRowChangeEventHandler InstrumentStatusReportAppTypeSecondColumnTableRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportAppTypeSecondColumnTableRowChangeEventHandler InstrumentStatusReportAppTypeSecondColumnTableRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InstrumentStatusReportAppTypeSecondColumnTableRowChangeEventHandler InstrumentStatusReportAppTypeSecondColumnTableRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInstrumentStatusReportAppTypeSecondColumnTableRow(InstrumentStatusReportAppTypeSecondColumnTableRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportAppTypeSecondColumnTableRow AddInstrumentStatusReportAppTypeSecondColumnTableRow(string SlNo, string Name) {
                InstrumentStatusReportAppTypeSecondColumnTableRow rowInstrumentStatusReportAppTypeSecondColumnTableRow = ((InstrumentStatusReportAppTypeSecondColumnTableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SlNo,
                        Name};
                rowInstrumentStatusReportAppTypeSecondColumnTableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInstrumentStatusReportAppTypeSecondColumnTableRow);
                return rowInstrumentStatusReportAppTypeSecondColumnTableRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InstrumentStatusReportAppTypeSecondColumnTableDataTable cln = ((InstrumentStatusReportAppTypeSecondColumnTableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InstrumentStatusReportAppTypeSecondColumnTableDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSlNo = base.Columns["SlNo"];
                this.columnName = base.Columns["Name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSlNo = new global::System.Data.DataColumn("SlNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlNo);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportAppTypeSecondColumnTableRow NewInstrumentStatusReportAppTypeSecondColumnTableRow() {
                return ((InstrumentStatusReportAppTypeSecondColumnTableRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InstrumentStatusReportAppTypeSecondColumnTableRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InstrumentStatusReportAppTypeSecondColumnTableRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InstrumentStatusReportAppTypeSecondColumnTableRowChanged != null)) {
                    this.InstrumentStatusReportAppTypeSecondColumnTableRowChanged(this, new InstrumentStatusReportAppTypeSecondColumnTableRowChangeEvent(((InstrumentStatusReportAppTypeSecondColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InstrumentStatusReportAppTypeSecondColumnTableRowChanging != null)) {
                    this.InstrumentStatusReportAppTypeSecondColumnTableRowChanging(this, new InstrumentStatusReportAppTypeSecondColumnTableRowChangeEvent(((InstrumentStatusReportAppTypeSecondColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InstrumentStatusReportAppTypeSecondColumnTableRowDeleted != null)) {
                    this.InstrumentStatusReportAppTypeSecondColumnTableRowDeleted(this, new InstrumentStatusReportAppTypeSecondColumnTableRowChangeEvent(((InstrumentStatusReportAppTypeSecondColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InstrumentStatusReportAppTypeSecondColumnTableRowDeleting != null)) {
                    this.InstrumentStatusReportAppTypeSecondColumnTableRowDeleting(this, new InstrumentStatusReportAppTypeSecondColumnTableRowChangeEvent(((InstrumentStatusReportAppTypeSecondColumnTableRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInstrumentStatusReportAppTypeSecondColumnTableRow(InstrumentStatusReportAppTypeSecondColumnTableRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InstrumentStatusDataSet ds = new InstrumentStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InstrumentStatusReportAppTypeSecondColumnTableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusAboutReportTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusAboutReportTableDataTable tableInstrumentStatusAboutReportTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusAboutReportTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusAboutReportTable = ((InstrumentStatusAboutReportTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeviceSerialNumber {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.DeviceSerialNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeviceSerialNumber\' in table \'InstrumentStatusAboutReportTa" +
                                "ble\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.DeviceSerialNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SoftwareVersion {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.SoftwareVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SoftwareVersion\' in table \'InstrumentStatusAboutReportTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.SoftwareVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FirmwareVersion {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.FirmwareVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirmwareVersion\' in table \'InstrumentStatusAboutReportTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.FirmwareVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UiVersion {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.UiVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UiVersion\' in table \'InstrumentStatusAboutReportTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.UiVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImageAnalysisSoftwareVersion {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.ImageAnalysisSoftwareVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImageAnalysisSoftwareVersion\' in table \'InstrumentStatusAbo" +
                                "utReportTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.ImageAnalysisSoftwareVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SyringePumpFirmwareVersion {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.SyringePumpFirmwareVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SyringePumpFirmwareVersion\' in table \'InstrumentStatusAbout" +
                                "ReportTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.SyringePumpFirmwareVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CameraFirmwareVersion {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.CameraFirmwareVersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CameraFirmwareVersion\' in table \'InstrumentStatusAboutRepor" +
                                "tTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.CameraFirmwareVersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SampleLifetimeNumber {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.SampleLifetimeNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleLifetimeNumber\' in table \'InstrumentStatusAboutReport" +
                                "Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.SampleLifetimeNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InstrumentHealth {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.InstrumentHealthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstrumentHealth\' in table \'InstrumentStatusAboutReportTabl" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.InstrumentHealthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ErrorCode {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.ErrorCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ErrorCode\' in table \'InstrumentStatusAboutReportTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.ErrorCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IsUserHidden {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.IsUserHiddenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsUserHidden\' in table \'InstrumentStatusAboutReportTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.IsUserHiddenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IsCellTypesHidden {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.IsCellTypesHiddenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCellTypesHidden\' in table \'InstrumentStatusAboutReportTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.IsCellTypesHiddenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IsAppTypesHidden {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.IsAppTypesHiddenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAppTypesHidden\' in table \'InstrumentStatusAboutReportTabl" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.IsAppTypesHiddenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IsReagentsHidden {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.IsReagentsHiddenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsReagentsHidden\' in table \'InstrumentStatusAboutReportTabl" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.IsReagentsHiddenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IsCalibrationHidden {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.IsCalibrationHiddenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCalibrationHidden\' in table \'InstrumentStatusAboutReportT" +
                                "able\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.IsCalibrationHiddenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IsStorageHidden {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.IsStorageHiddenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsStorageHidden\' in table \'InstrumentStatusAboutReportTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.IsStorageHiddenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IsLowLevelControlsHidden {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.IsLowLevelControlsHiddenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsLowLevelControlsHidden\' in table \'InstrumentStatusAboutRe" +
                                "portTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.IsLowLevelControlsHiddenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReportTitle {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.ReportTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportTitle\' in table \'InstrumentStatusAboutReportTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.ReportTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DeviceSerial {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.DeviceSerialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeviceSerial\' in table \'InstrumentStatusAboutReportTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.DeviceSerialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReportHeading {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.ReportHeadingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportHeading\' in table \'InstrumentStatusAboutReportTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.ReportHeadingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrentDateTime {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.CurrentDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentDateTime\' in table \'InstrumentStatusAboutReportTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.CurrentDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusAboutReportTable.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'InstrumentStatusAboutReportTable\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusAboutReportTable.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeviceSerialNumberNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.DeviceSerialNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeviceSerialNumberNull() {
                this[this.tableInstrumentStatusAboutReportTable.DeviceSerialNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSoftwareVersionNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.SoftwareVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSoftwareVersionNull() {
                this[this.tableInstrumentStatusAboutReportTable.SoftwareVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFirmwareVersionNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.FirmwareVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFirmwareVersionNull() {
                this[this.tableInstrumentStatusAboutReportTable.FirmwareVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUiVersionNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.UiVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUiVersionNull() {
                this[this.tableInstrumentStatusAboutReportTable.UiVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImageAnalysisSoftwareVersionNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.ImageAnalysisSoftwareVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImageAnalysisSoftwareVersionNull() {
                this[this.tableInstrumentStatusAboutReportTable.ImageAnalysisSoftwareVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSyringePumpFirmwareVersionNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.SyringePumpFirmwareVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSyringePumpFirmwareVersionNull() {
                this[this.tableInstrumentStatusAboutReportTable.SyringePumpFirmwareVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCameraFirmwareVersionNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.CameraFirmwareVersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCameraFirmwareVersionNull() {
                this[this.tableInstrumentStatusAboutReportTable.CameraFirmwareVersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampleLifetimeNumberNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.SampleLifetimeNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampleLifetimeNumberNull() {
                this[this.tableInstrumentStatusAboutReportTable.SampleLifetimeNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstrumentHealthNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.InstrumentHealthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstrumentHealthNull() {
                this[this.tableInstrumentStatusAboutReportTable.InstrumentHealthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsErrorCodeNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.ErrorCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetErrorCodeNull() {
                this[this.tableInstrumentStatusAboutReportTable.ErrorCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsUserHiddenNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.IsUserHiddenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsUserHiddenNull() {
                this[this.tableInstrumentStatusAboutReportTable.IsUserHiddenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsCellTypesHiddenNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.IsCellTypesHiddenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsCellTypesHiddenNull() {
                this[this.tableInstrumentStatusAboutReportTable.IsCellTypesHiddenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsAppTypesHiddenNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.IsAppTypesHiddenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsAppTypesHiddenNull() {
                this[this.tableInstrumentStatusAboutReportTable.IsAppTypesHiddenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsReagentsHiddenNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.IsReagentsHiddenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsReagentsHiddenNull() {
                this[this.tableInstrumentStatusAboutReportTable.IsReagentsHiddenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsCalibrationHiddenNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.IsCalibrationHiddenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsCalibrationHiddenNull() {
                this[this.tableInstrumentStatusAboutReportTable.IsCalibrationHiddenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsStorageHiddenNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.IsStorageHiddenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsStorageHiddenNull() {
                this[this.tableInstrumentStatusAboutReportTable.IsStorageHiddenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsLowLevelControlsHiddenNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.IsLowLevelControlsHiddenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsLowLevelControlsHiddenNull() {
                this[this.tableInstrumentStatusAboutReportTable.IsLowLevelControlsHiddenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReportTitleNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.ReportTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReportTitleNull() {
                this[this.tableInstrumentStatusAboutReportTable.ReportTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeviceSerialNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.DeviceSerialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeviceSerialNull() {
                this[this.tableInstrumentStatusAboutReportTable.DeviceSerialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReportHeadingNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.ReportHeadingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReportHeadingNull() {
                this[this.tableInstrumentStatusAboutReportTable.ReportHeadingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentDateTimeNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.CurrentDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentDateTimeNull() {
                this[this.tableInstrumentStatusAboutReportTable.CurrentDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentNull() {
                return this.IsNull(this.tableInstrumentStatusAboutReportTable.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentNull() {
                this[this.tableInstrumentStatusAboutReportTable.CommentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusPrintReportTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusPrintReportTableDataTable tableInstrumentStatusPrintReportTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusPrintReportTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusPrintReportTable = ((InstrumentStatusPrintReportTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Container {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.ContainerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Container\' in table \'InstrumentStatusPrintReportTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.ContainerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PartNumber {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.PartNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PartNumber\' in table \'InstrumentStatusPrintReportTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.PartNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LotNumber {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.LotNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LotNumber\' in table \'InstrumentStatusPrintReportTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.LotNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExpiryDate {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.ExpiryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpiryDate\' in table \'InstrumentStatusPrintReportTable\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.ExpiryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TotalUses {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.TotalUsesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalUses\' in table \'InstrumentStatusPrintReportTable\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.TotalUsesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RemainingUses {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.RemainingUsesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemainingUses\' in table \'InstrumentStatusPrintReportTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.RemainingUsesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WasteTubeCapacity {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.WasteTubeCapacityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WasteTubeCapacity\' in table \'InstrumentStatusPrintReportTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.WasteTubeCapacityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UsersListFirstCol {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.UsersListFirstColColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsersListFirstCol\' in table \'InstrumentStatusPrintReportTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.UsersListFirstColColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UsersListSecondCol {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.UsersListSecondColColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsersListSecondCol\' in table \'InstrumentStatusPrintReportTa" +
                                "ble\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.UsersListSecondColColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CellTypesListFirstCol {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.CellTypesListFirstColColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CellTypesListFirstCol\' in table \'InstrumentStatusPrintRepor" +
                                "tTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.CellTypesListFirstColColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CellTypesListSecondCol {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.CellTypesListSecondColColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CellTypesListSecondCol\' in table \'InstrumentStatusPrintRepo" +
                                "rtTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.CellTypesListSecondColColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AppTypesListFirstCol {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.AppTypesListFirstColColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppTypesListFirstCol\' in table \'InstrumentStatusPrintReport" +
                                "Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.AppTypesListFirstColColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AppTypesListSecondCol {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.AppTypesListSecondColColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppTypesListSecondCol\' in table \'InstrumentStatusPrintRepor" +
                                "tTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.AppTypesListSecondColColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CalibrateConcentration {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.CalibrateConcentrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalibrateConcentration\' in table \'InstrumentStatusPrintRepo" +
                                "rtTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.CalibrateConcentrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CalibrateSize {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.CalibrateSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CalibrateSize\' in table \'InstrumentStatusPrintReportTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.CalibrateSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MemoryStorage {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.MemoryStorageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MemoryStorage\' in table \'InstrumentStatusPrintReportTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.MemoryStorageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BrightFieldLED {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.BrightFieldLEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrightFieldLED\' in table \'InstrumentStatusPrintReportTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.BrightFieldLEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CurrentFocusPosition {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.CurrentFocusPositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrentFocusPosition\' in table \'InstrumentStatusPrintReport" +
                                "Table\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.CurrentFocusPositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FlowCellDepth {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.FlowCellDepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FlowCellDepth\' in table \'InstrumentStatusPrintReportTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.FlowCellDepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LowLevelControlList {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusPrintReportTable.LowLevelControlListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LowLevelControlList\' in table \'InstrumentStatusPrintReportT" +
                                "able\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusPrintReportTable.LowLevelControlListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContainerNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.ContainerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContainerNull() {
                this[this.tableInstrumentStatusPrintReportTable.ContainerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPartNumberNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.PartNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPartNumberNull() {
                this[this.tableInstrumentStatusPrintReportTable.PartNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLotNumberNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.LotNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLotNumberNull() {
                this[this.tableInstrumentStatusPrintReportTable.LotNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpiryDateNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.ExpiryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpiryDateNull() {
                this[this.tableInstrumentStatusPrintReportTable.ExpiryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalUsesNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.TotalUsesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalUsesNull() {
                this[this.tableInstrumentStatusPrintReportTable.TotalUsesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemainingUsesNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.RemainingUsesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemainingUsesNull() {
                this[this.tableInstrumentStatusPrintReportTable.RemainingUsesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWasteTubeCapacityNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.WasteTubeCapacityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWasteTubeCapacityNull() {
                this[this.tableInstrumentStatusPrintReportTable.WasteTubeCapacityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUsersListFirstColNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.UsersListFirstColColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUsersListFirstColNull() {
                this[this.tableInstrumentStatusPrintReportTable.UsersListFirstColColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUsersListSecondColNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.UsersListSecondColColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUsersListSecondColNull() {
                this[this.tableInstrumentStatusPrintReportTable.UsersListSecondColColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCellTypesListFirstColNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.CellTypesListFirstColColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCellTypesListFirstColNull() {
                this[this.tableInstrumentStatusPrintReportTable.CellTypesListFirstColColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCellTypesListSecondColNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.CellTypesListSecondColColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCellTypesListSecondColNull() {
                this[this.tableInstrumentStatusPrintReportTable.CellTypesListSecondColColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAppTypesListFirstColNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.AppTypesListFirstColColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAppTypesListFirstColNull() {
                this[this.tableInstrumentStatusPrintReportTable.AppTypesListFirstColColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAppTypesListSecondColNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.AppTypesListSecondColColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAppTypesListSecondColNull() {
                this[this.tableInstrumentStatusPrintReportTable.AppTypesListSecondColColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCalibrateConcentrationNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.CalibrateConcentrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCalibrateConcentrationNull() {
                this[this.tableInstrumentStatusPrintReportTable.CalibrateConcentrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCalibrateSizeNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.CalibrateSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCalibrateSizeNull() {
                this[this.tableInstrumentStatusPrintReportTable.CalibrateSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMemoryStorageNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.MemoryStorageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMemoryStorageNull() {
                this[this.tableInstrumentStatusPrintReportTable.MemoryStorageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBrightFieldLEDNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.BrightFieldLEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBrightFieldLEDNull() {
                this[this.tableInstrumentStatusPrintReportTable.BrightFieldLEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCurrentFocusPositionNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.CurrentFocusPositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCurrentFocusPositionNull() {
                this[this.tableInstrumentStatusPrintReportTable.CurrentFocusPositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFlowCellDepthNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.FlowCellDepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFlowCellDepthNull() {
                this[this.tableInstrumentStatusPrintReportTable.FlowCellDepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLowLevelControlListNull() {
                return this.IsNull(this.tableInstrumentStatusPrintReportTable.LowLevelControlListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLowLevelControlListNull() {
                this[this.tableInstrumentStatusPrintReportTable.LowLevelControlListColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TestReportTableRow : global::System.Data.DataRow {
            
            private TestReportTableDataTable tableTestReportTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TestReportTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTestReportTable = ((TestReportTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FirstParam {
                get {
                    try {
                        return ((string)(this[this.tableTestReportTable.FirstParamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstParam\' in table \'TestReportTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestReportTable.FirstParamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SecondParam {
                get {
                    try {
                        return ((string)(this[this.tableTestReportTable.SecondParamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecondParam\' in table \'TestReportTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTestReportTable.SecondParamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFirstParamNull() {
                return this.IsNull(this.tableTestReportTable.FirstParamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFirstParamNull() {
                this[this.tableTestReportTable.FirstParamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSecondParamNull() {
                return this.IsNull(this.tableTestReportTable.SecondParamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSecondParamNull() {
                this[this.tableTestReportTable.SecondParamColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ConcCalibrationDataTableRow : global::System.Data.DataRow {
            
            private ConcCalibrationDataTableDataTable tableConcCalibrationDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ConcCalibrationDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableConcCalibrationDataTable = ((ConcCalibrationDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Slope {
                get {
                    try {
                        return ((string)(this[this.tableConcCalibrationDataTable.SlopeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Slope\' in table \'ConcCalibrationDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConcCalibrationDataTable.SlopeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Intercept {
                get {
                    try {
                        return ((string)(this[this.tableConcCalibrationDataTable.InterceptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Intercept\' in table \'ConcCalibrationDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConcCalibrationDataTable.InterceptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastCalibrationDate {
                get {
                    try {
                        return ((string)(this[this.tableConcCalibrationDataTable.LastCalibrationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastCalibrationDate\' in table \'ConcCalibrationDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableConcCalibrationDataTable.LastCalibrationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSlopeNull() {
                return this.IsNull(this.tableConcCalibrationDataTable.SlopeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSlopeNull() {
                this[this.tableConcCalibrationDataTable.SlopeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInterceptNull() {
                return this.IsNull(this.tableConcCalibrationDataTable.InterceptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInterceptNull() {
                this[this.tableConcCalibrationDataTable.InterceptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastCalibrationDateNull() {
                return this.IsNull(this.tableConcCalibrationDataTable.LastCalibrationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastCalibrationDateNull() {
                this[this.tableConcCalibrationDataTable.LastCalibrationDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ConCalibrationLastCalibrationTableRow : global::System.Data.DataRow {
            
            private ConCalibrationLastCalibrationTableDataTable tableConCalibrationLastCalibrationTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ConCalibrationLastCalibrationTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableConCalibrationLastCalibrationTable = ((ConCalibrationLastCalibrationTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AssayValue {
                get {
                    try {
                        return ((string)(this[this.tableConCalibrationLastCalibrationTable.AssayValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssayValue\' in table \'ConCalibrationLastCalibrationTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableConCalibrationLastCalibrationTable.AssayValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExpirationDate {
                get {
                    try {
                        return ((string)(this[this.tableConCalibrationLastCalibrationTable.ExpirationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpirationDate\' in table \'ConCalibrationLastCalibrationTabl" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConCalibrationLastCalibrationTable.ExpirationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LotNumber {
                get {
                    try {
                        return ((string)(this[this.tableConCalibrationLastCalibrationTable.LotNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LotNumber\' in table \'ConCalibrationLastCalibrationTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableConCalibrationLastCalibrationTable.LotNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssayValueNull() {
                return this.IsNull(this.tableConCalibrationLastCalibrationTable.AssayValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssayValueNull() {
                this[this.tableConCalibrationLastCalibrationTable.AssayValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpirationDateNull() {
                return this.IsNull(this.tableConCalibrationLastCalibrationTable.ExpirationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpirationDateNull() {
                this[this.tableConCalibrationLastCalibrationTable.ExpirationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLotNumberNull() {
                return this.IsNull(this.tableConCalibrationLastCalibrationTable.LotNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLotNumberNull() {
                this[this.tableConCalibrationLastCalibrationTable.LotNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SizeCalibrationDataTableRow : global::System.Data.DataRow {
            
            private SizeCalibrationDataTableDataTable tableSizeCalibrationDataTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SizeCalibrationDataTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSizeCalibrationDataTable = ((SizeCalibrationDataTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Slope {
                get {
                    try {
                        return ((string)(this[this.tableSizeCalibrationDataTable.SlopeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Slope\' in table \'SizeCalibrationDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSizeCalibrationDataTable.SlopeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Intercept {
                get {
                    try {
                        return ((string)(this[this.tableSizeCalibrationDataTable.InterceptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Intercept\' in table \'SizeCalibrationDataTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSizeCalibrationDataTable.InterceptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastCalibrationDate {
                get {
                    try {
                        return ((string)(this[this.tableSizeCalibrationDataTable.LastCalibrationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastCalibrationDate\' in table \'SizeCalibrationDataTable\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSizeCalibrationDataTable.LastCalibrationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSlopeNull() {
                return this.IsNull(this.tableSizeCalibrationDataTable.SlopeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSlopeNull() {
                this[this.tableSizeCalibrationDataTable.SlopeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInterceptNull() {
                return this.IsNull(this.tableSizeCalibrationDataTable.InterceptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInterceptNull() {
                this[this.tableSizeCalibrationDataTable.InterceptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastCalibrationDateNull() {
                return this.IsNull(this.tableSizeCalibrationDataTable.LastCalibrationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastCalibrationDateNull() {
                this[this.tableSizeCalibrationDataTable.LastCalibrationDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SizeCalibrationLastCalibrationTableRow : global::System.Data.DataRow {
            
            private SizeCalibrationLastCalibrationTableDataTable tableSizeCalibrationLastCalibrationTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SizeCalibrationLastCalibrationTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSizeCalibrationLastCalibrationTable = ((SizeCalibrationLastCalibrationTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AssayValue {
                get {
                    try {
                        return ((string)(this[this.tableSizeCalibrationLastCalibrationTable.AssayValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AssayValue\' in table \'SizeCalibrationLastCalibrationTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSizeCalibrationLastCalibrationTable.AssayValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExpirationDate {
                get {
                    try {
                        return ((string)(this[this.tableSizeCalibrationLastCalibrationTable.ExpirationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExpirationDate\' in table \'SizeCalibrationLastCalibrationTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSizeCalibrationLastCalibrationTable.ExpirationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LotNumber {
                get {
                    try {
                        return ((string)(this[this.tableSizeCalibrationLastCalibrationTable.LotNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LotNumber\' in table \'SizeCalibrationLastCalibrationTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableSizeCalibrationLastCalibrationTable.LotNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAssayValueNull() {
                return this.IsNull(this.tableSizeCalibrationLastCalibrationTable.AssayValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAssayValueNull() {
                this[this.tableSizeCalibrationLastCalibrationTable.AssayValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpirationDateNull() {
                return this.IsNull(this.tableSizeCalibrationLastCalibrationTable.ExpirationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpirationDateNull() {
                this[this.tableSizeCalibrationLastCalibrationTable.ExpirationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLotNumberNull() {
                return this.IsNull(this.tableSizeCalibrationLastCalibrationTable.LotNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLotNumberNull() {
                this[this.tableSizeCalibrationLastCalibrationTable.LotNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusReportStorageTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusReportStorageTableDataTable tableInstrumentStatusReportStorageTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportStorageTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusReportStorageTable = ((InstrumentStatusReportStorageTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MemorySummary {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportStorageTable.MemorySummaryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MemorySummary\' in table \'InstrumentStatusReportStorageTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportStorageTable.MemorySummaryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OtherMemory {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportStorageTable.OtherMemoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherMemory\' in table \'InstrumentStatusReportStorageTable\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportStorageTable.OtherMemoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DataMemory {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportStorageTable.DataMemoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataMemory\' in table \'InstrumentStatusReportStorageTable\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportStorageTable.DataMemoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExportMemory {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportStorageTable.ExportMemoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExportMemory\' in table \'InstrumentStatusReportStorageTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportStorageTable.ExportMemoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMemorySummaryNull() {
                return this.IsNull(this.tableInstrumentStatusReportStorageTable.MemorySummaryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMemorySummaryNull() {
                this[this.tableInstrumentStatusReportStorageTable.MemorySummaryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherMemoryNull() {
                return this.IsNull(this.tableInstrumentStatusReportStorageTable.OtherMemoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherMemoryNull() {
                this[this.tableInstrumentStatusReportStorageTable.OtherMemoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDataMemoryNull() {
                return this.IsNull(this.tableInstrumentStatusReportStorageTable.DataMemoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDataMemoryNull() {
                this[this.tableInstrumentStatusReportStorageTable.DataMemoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExportMemoryNull() {
                return this.IsNull(this.tableInstrumentStatusReportStorageTable.ExportMemoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExportMemoryNull() {
                this[this.tableInstrumentStatusReportStorageTable.ExportMemoryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusReportLowLevelControlTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusReportLowLevelControlTableDataTable tableInstrumentStatusReportLowLevelControlTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportLowLevelControlTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusReportLowLevelControlTable = ((InstrumentStatusReportLowLevelControlTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SensorStatusState {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportLowLevelControlTable.SensorStatusStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SensorStatusState\' in table \'InstrumentStatusReportLowLevel" +
                                "ControlTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportLowLevelControlTable.SensorStatusStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MotorStatusState {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportLowLevelControlTable.MotorStatusStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MotorStatusState\' in table \'InstrumentStatusReportLowLevelC" +
                                "ontrolTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportLowLevelControlTable.MotorStatusStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StatusState {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportLowLevelControlTable.StatusStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StatusState\' in table \'InstrumentStatusReportLowLevelContro" +
                                "lTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportLowLevelControlTable.StatusStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Voltage {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportLowLevelControlTable.VoltageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Voltage\' in table \'InstrumentStatusReportLowLevelControlTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportLowLevelControlTable.VoltageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Temperature {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportLowLevelControlTable.TemperatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Temperature\' in table \'InstrumentStatusReportLowLevelContro" +
                                "lTable\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportLowLevelControlTable.TemperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSensorStatusStateNull() {
                return this.IsNull(this.tableInstrumentStatusReportLowLevelControlTable.SensorStatusStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSensorStatusStateNull() {
                this[this.tableInstrumentStatusReportLowLevelControlTable.SensorStatusStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotorStatusStateNull() {
                return this.IsNull(this.tableInstrumentStatusReportLowLevelControlTable.MotorStatusStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotorStatusStateNull() {
                this[this.tableInstrumentStatusReportLowLevelControlTable.MotorStatusStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStatusStateNull() {
                return this.IsNull(this.tableInstrumentStatusReportLowLevelControlTable.StatusStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStatusStateNull() {
                this[this.tableInstrumentStatusReportLowLevelControlTable.StatusStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVoltageNull() {
                return this.IsNull(this.tableInstrumentStatusReportLowLevelControlTable.VoltageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVoltageNull() {
                this[this.tableInstrumentStatusReportLowLevelControlTable.VoltageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTemperatureNull() {
                return this.IsNull(this.tableInstrumentStatusReportLowLevelControlTable.TemperatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTemperatureNull() {
                this[this.tableInstrumentStatusReportLowLevelControlTable.TemperatureColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusReportUserFirstColumnTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusReportUserFirstColumnTableDataTable tableInstrumentStatusReportUserFirstColumnTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportUserFirstColumnTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusReportUserFirstColumnTable = ((InstrumentStatusReportUserFirstColumnTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SlNo {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportUserFirstColumnTable.SlNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SlNo\' in table \'InstrumentStatusReportUserFirstColumnTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportUserFirstColumnTable.SlNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportUserFirstColumnTable.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'InstrumentStatusReportUserFirstColumnTable\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportUserFirstColumnTable.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSlNoNull() {
                return this.IsNull(this.tableInstrumentStatusReportUserFirstColumnTable.SlNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSlNoNull() {
                this[this.tableInstrumentStatusReportUserFirstColumnTable.SlNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableInstrumentStatusReportUserFirstColumnTable.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableInstrumentStatusReportUserFirstColumnTable.NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusReportUserSecondColumnTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusReportUserSecondColumnTableDataTable tableInstrumentStatusReportUserSecondColumnTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportUserSecondColumnTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusReportUserSecondColumnTable = ((InstrumentStatusReportUserSecondColumnTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SlNo {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportUserSecondColumnTable.SlNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SlNo\' in table \'InstrumentStatusReportUserSecondColumnTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportUserSecondColumnTable.SlNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportUserSecondColumnTable.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'InstrumentStatusReportUserSecondColumnTable" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportUserSecondColumnTable.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSlNoNull() {
                return this.IsNull(this.tableInstrumentStatusReportUserSecondColumnTable.SlNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSlNoNull() {
                this[this.tableInstrumentStatusReportUserSecondColumnTable.SlNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableInstrumentStatusReportUserSecondColumnTable.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableInstrumentStatusReportUserSecondColumnTable.NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusReportCellTypeFirstColumnTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusReportCellTypeFirstColumnTableDataTable tableInstrumentStatusReportCellTypeFirstColumnTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportCellTypeFirstColumnTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusReportCellTypeFirstColumnTable = ((InstrumentStatusReportCellTypeFirstColumnTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SlNo {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportCellTypeFirstColumnTable.SlNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SlNo\' in table \'InstrumentStatusReportCellTypeFirstColumnTa" +
                                "ble\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportCellTypeFirstColumnTable.SlNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportCellTypeFirstColumnTable.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'InstrumentStatusReportCellTypeFirstColumnTa" +
                                "ble\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportCellTypeFirstColumnTable.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSlNoNull() {
                return this.IsNull(this.tableInstrumentStatusReportCellTypeFirstColumnTable.SlNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSlNoNull() {
                this[this.tableInstrumentStatusReportCellTypeFirstColumnTable.SlNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableInstrumentStatusReportCellTypeFirstColumnTable.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableInstrumentStatusReportCellTypeFirstColumnTable.NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusReportCellTypeSecondColumnTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusReportCellTypeSecondColumnTableDataTable tableInstrumentStatusReportCellTypeSecondColumnTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportCellTypeSecondColumnTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusReportCellTypeSecondColumnTable = ((InstrumentStatusReportCellTypeSecondColumnTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SlNo {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportCellTypeSecondColumnTable.SlNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SlNo\' in table \'InstrumentStatusReportCellTypeSecondColumnT" +
                                "able\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportCellTypeSecondColumnTable.SlNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportCellTypeSecondColumnTable.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'InstrumentStatusReportCellTypeSecondColumnT" +
                                "able\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportCellTypeSecondColumnTable.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSlNoNull() {
                return this.IsNull(this.tableInstrumentStatusReportCellTypeSecondColumnTable.SlNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSlNoNull() {
                this[this.tableInstrumentStatusReportCellTypeSecondColumnTable.SlNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableInstrumentStatusReportCellTypeSecondColumnTable.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableInstrumentStatusReportCellTypeSecondColumnTable.NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusReportAppTypeFirstColumnTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusReportAppTypeFirstColumnTableDataTable tableInstrumentStatusReportAppTypeFirstColumnTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportAppTypeFirstColumnTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusReportAppTypeFirstColumnTable = ((InstrumentStatusReportAppTypeFirstColumnTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SlNo {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportAppTypeFirstColumnTable.SlNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SlNo\' in table \'InstrumentStatusReportAppTypeFirstColumnTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportAppTypeFirstColumnTable.SlNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportAppTypeFirstColumnTable.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'InstrumentStatusReportAppTypeFirstColumnTab" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportAppTypeFirstColumnTable.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSlNoNull() {
                return this.IsNull(this.tableInstrumentStatusReportAppTypeFirstColumnTable.SlNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSlNoNull() {
                this[this.tableInstrumentStatusReportAppTypeFirstColumnTable.SlNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableInstrumentStatusReportAppTypeFirstColumnTable.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableInstrumentStatusReportAppTypeFirstColumnTable.NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InstrumentStatusReportAppTypeSecondColumnTableRow : global::System.Data.DataRow {
            
            private InstrumentStatusReportAppTypeSecondColumnTableDataTable tableInstrumentStatusReportAppTypeSecondColumnTable;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InstrumentStatusReportAppTypeSecondColumnTableRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInstrumentStatusReportAppTypeSecondColumnTable = ((InstrumentStatusReportAppTypeSecondColumnTableDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SlNo {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportAppTypeSecondColumnTable.SlNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SlNo\' in table \'InstrumentStatusReportAppTypeSecondColumnTa" +
                                "ble\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportAppTypeSecondColumnTable.SlNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tableInstrumentStatusReportAppTypeSecondColumnTable.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'InstrumentStatusReportAppTypeSecondColumnTa" +
                                "ble\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInstrumentStatusReportAppTypeSecondColumnTable.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSlNoNull() {
                return this.IsNull(this.tableInstrumentStatusReportAppTypeSecondColumnTable.SlNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSlNoNull() {
                this[this.tableInstrumentStatusReportAppTypeSecondColumnTable.SlNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameNull() {
                return this.IsNull(this.tableInstrumentStatusReportAppTypeSecondColumnTable.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameNull() {
                this[this.tableInstrumentStatusReportAppTypeSecondColumnTable.NameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class InstrumentStatusAboutReportTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusAboutReportTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusAboutReportTableRowChangeEvent(InstrumentStatusAboutReportTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusAboutReportTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class InstrumentStatusPrintReportTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusPrintReportTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusPrintReportTableRowChangeEvent(InstrumentStatusPrintReportTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusPrintReportTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TestReportTableRowChangeEvent : global::System.EventArgs {
            
            private TestReportTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TestReportTableRowChangeEvent(TestReportTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TestReportTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ConcCalibrationDataTableRowChangeEvent : global::System.EventArgs {
            
            private ConcCalibrationDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConcCalibrationDataTableRowChangeEvent(ConcCalibrationDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConcCalibrationDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ConCalibrationLastCalibrationTableRowChangeEvent : global::System.EventArgs {
            
            private ConCalibrationLastCalibrationTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConCalibrationLastCalibrationTableRowChangeEvent(ConCalibrationLastCalibrationTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ConCalibrationLastCalibrationTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SizeCalibrationDataTableRowChangeEvent : global::System.EventArgs {
            
            private SizeCalibrationDataTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SizeCalibrationDataTableRowChangeEvent(SizeCalibrationDataTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SizeCalibrationDataTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SizeCalibrationLastCalibrationTableRowChangeEvent : global::System.EventArgs {
            
            private SizeCalibrationLastCalibrationTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SizeCalibrationLastCalibrationTableRowChangeEvent(SizeCalibrationLastCalibrationTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SizeCalibrationLastCalibrationTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class InstrumentStatusReportStorageTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusReportStorageTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportStorageTableRowChangeEvent(InstrumentStatusReportStorageTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportStorageTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class InstrumentStatusReportLowLevelControlTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusReportLowLevelControlTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportLowLevelControlTableRowChangeEvent(InstrumentStatusReportLowLevelControlTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportLowLevelControlTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class InstrumentStatusReportUserFirstColumnTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusReportUserFirstColumnTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportUserFirstColumnTableRowChangeEvent(InstrumentStatusReportUserFirstColumnTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportUserFirstColumnTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class InstrumentStatusReportUserSecondColumnTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusReportUserSecondColumnTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportUserSecondColumnTableRowChangeEvent(InstrumentStatusReportUserSecondColumnTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportUserSecondColumnTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class InstrumentStatusReportCellTypeFirstColumnTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusReportCellTypeFirstColumnTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportCellTypeFirstColumnTableRowChangeEvent(InstrumentStatusReportCellTypeFirstColumnTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportCellTypeFirstColumnTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class InstrumentStatusReportCellTypeSecondColumnTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusReportCellTypeSecondColumnTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportCellTypeSecondColumnTableRowChangeEvent(InstrumentStatusReportCellTypeSecondColumnTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportCellTypeSecondColumnTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class InstrumentStatusReportAppTypeFirstColumnTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusReportAppTypeFirstColumnTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportAppTypeFirstColumnTableRowChangeEvent(InstrumentStatusReportAppTypeFirstColumnTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportAppTypeFirstColumnTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class InstrumentStatusReportAppTypeSecondColumnTableRowChangeEvent : global::System.EventArgs {
            
            private InstrumentStatusReportAppTypeSecondColumnTableRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportAppTypeSecondColumnTableRowChangeEvent(InstrumentStatusReportAppTypeSecondColumnTableRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InstrumentStatusReportAppTypeSecondColumnTableRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591