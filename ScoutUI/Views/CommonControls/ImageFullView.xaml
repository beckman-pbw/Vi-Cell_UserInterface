<commonControls:BaseImageView x:Class="ScoutUI.Views.ucCommon.ImageFullView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ScoutUI.Views.ucCommon"
             xmlns:chartingToolkit="clr-namespace:System.Windows.Controls.DataVisualization.Charting;assembly=System.Windows.Controls.DataVisualization.Toolkit"
             xmlns:visualizationToolkit="clr-namespace:System.Windows.Controls.DataVisualization;assembly=System.Windows.Controls.DataVisualization.Toolkit"
             xmlns:primitives="clr-namespace:System.Windows.Controls.DataVisualization.Charting.Primitives;assembly=System.Windows.Controls.DataVisualization.Toolkit"
             xmlns:common="clr-namespace:ScoutUI.Common"
             xmlns:commonControls="clr-namespace:ScoutUI.Views.CommonControls"
             x:Name="ImageFullViewControl"
             mc:Ignorable="d">
    <UserControl.Resources>
        <Style TargetType="{x:Type Separator}"
               x:Key="SeparatorStyle">
            <Setter Property="Height"
                    Value="1" />
            <Setter Property="Background"
                    Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Rectangle Height="{TemplateBinding Height}"
                                   Fill="{DynamicResource GenericVeryLight}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Outer menu items-->
        <Style x:Key="MenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Foreground"
                    Value="{DynamicResource GenericVeryDark}" />
            <Style.Triggers>
                <Trigger Property="IsHighlighted"
                         Value="True">
                    <Setter Property="Background"
                            Value="{DynamicResource GenericVeryDark}" />
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="Foreground"
                            Value="{DynamicResource GenericVeryDark}" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="true">
                    <Setter Property="Background"
                            Value="{DynamicResource GenericVeryDark}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Outer menu -->
        <Style TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle"
                    Value="True" />
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">

                        <!--Here is where you change the border thickness to zero on the menu-->
                        <Border BorderThickness="1"
                                x:Name="Border" BorderBrush="{DynamicResource GenericVeryDark}"
                                Background="Transparent">
                            <StackPanel ClipToBounds="True"
                                        Orientation="Vertical"
                                        IsItemsHost="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter TargetName="Border"
                                        Property="Background"
                                        Value="{DynamicResource GenericVeryLight}" />
                                <Setter
                                    Property="Foreground"
                                    Value="{DynamicResource GenericVeryLight}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--SubmenuItem-->

        <ControlTemplate x:Key="SubmenuItemTemplateKey"
                         TargetType="{x:Type MenuItem}">
            <Border Name="Border">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20"
                                          SharedSizeGroup="Icon" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"
                                          SharedSizeGroup="Shortcut" />
                        <ColumnDefinition Width="13" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Name="Icon"
                                      Margin="6,0,6,0"
                                      VerticalAlignment="Center"
                                      ContentSource="Icon" />
                    <ContentPresenter Name="HeaderHost"
                                      Grid.Column="1"
                                      ContentSource="Header"
                                      RecognizesAccessKey="True" />
                    <TextBlock x:Name="InputGestureText"
                               Grid.Column="2"
                               Text="{TemplateBinding InputGestureText}"
                               Margin="5,2,0,2"
                               DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked"
                         Value="true">
                    <Setter TargetName="Icon"
                            Property="Visibility"
                            Value="Visible" />
                </Trigger>
                <Trigger Property="IsCheckable"
                         Value="true">
                    <Setter TargetName="Icon"
                            Property="Visibility"
                            Value="Visible" />
                </Trigger>
                <Trigger Property="IsHighlighted"
                         Value="true">
                    <Setter TargetName="Border"
                            Property="Background"
                            Value="{x:Null}" />
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="false">
                    <Setter Property="Foreground"
                            Value="#0f3c5a" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ContextMenu  x:Key="SharedContextMenu" x:Shared="true">
            <MenuItem Name="Histogram" Template="{DynamicResource SubmenuItemTemplateKey}"
                                              Click="MenuItem_OnClick" Style="{StaticResource MenuItemStyle}">
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Path Name="CheckMarkGreyLevelHistogram"
                                                      Width="8"
                                                      Height="8"
                                                      Visibility="Hidden"
                                                      SnapsToDevicePixels="False"
                                                      Stroke="{x:Null}"
                                                      StrokeThickness="2"
                                                      Data="M122.666,260.33355 C122.666,260.33355 124.333,298.33333 159.99966,297.66667 195.66633,297 196.66633,260 196.66633,260 196.66633,260 196.33267,223.33308 160.33283,222.66641 124.33299,221.99974 122.666,260.33355 122.666,260.33355 z"
                                                      Stretch="Fill" Fill="{DynamicResource GenericVeryDark}" />
                        <Label Margin="5,0,0,0"
                                                       Content="{Binding ResourceKeys[LID_ContextMenu_GreyLevelHistogram], Source={StaticResource ScoutUILanguageResource}}" />
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Name="ImageActualSize" 
                                              Template="{DynamicResource SubmenuItemTemplateKey}"
                                              Click="MenuItem_OnClick" Style="{StaticResource MenuItemStyle}">
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Path Name="CheckMarkActualSize"
                                                    Width="8"
                                                    Height="8"
                                                    Visibility="Hidden"
                                                    SnapsToDevicePixels="False"
                                                    Stroke="{x:Null}"
                                                    StrokeThickness="2"
                                                    Data="M122.666,260.33355 C122.666,260.33355 124.333,298.33333 159.99966,297.66667 195.66633,297 196.66633,260 196.66633,260 196.66633,260 196.33267,223.33308 160.33283,222.66641 124.33299,221.99974 122.666,260.33355 122.666,260.33355 z"
                                                    Stretch="Fill" Fill="{DynamicResource GenericVeryDark}" />
                        <Label Margin="5,0,0,0"
                                                       Content="{Binding ResourceKeys[LID_ContextMenu_ImageActualSize], Source={StaticResource ScoutUILanguageResource}}" />
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Name="ImageFitSize" 
                                              Click="MenuItem_OnClick"
                                              Template="{DynamicResource SubmenuItemTemplateKey}"
                                              Style="{StaticResource MenuItemStyle}">
                <MenuItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Path Name="CheckMarkFitToWindow"
                                                    Width="8"
                                                    Height="8"
                                                    Visibility="Hidden"
                                                    SnapsToDevicePixels="False"
                                                    Stroke="{x:Null}"
                                                    StrokeThickness="2"
                                                    Data="M122.666,260.33355 C122.666,260.33355 124.333,298.33333 159.99966,297.66667 195.66633,297 196.66633,260 196.66633,260 196.66633,260 196.33267,223.33308 160.33283,222.66641 124.33299,221.99974 122.666,260.33355 122.666,260.33355 z"
                                                    Stretch="Fill" Fill="{DynamicResource GenericVeryDark}" />
                        <Label Margin="5,0,0,0"
                                                       Content="{Binding ResourceKeys[LID_ContextMenu_ImageFitToWindow], Source={StaticResource ScoutUILanguageResource}}" />
                    </StackPanel>
                </MenuItem.Header>
            </MenuItem>
        </ContextMenu>

    </UserControl.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0" />
            <RowDefinition Height="*" />
            <RowDefinition Height="20" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="0" />
        </Grid.ColumnDefinitions>
        <Border CornerRadius="8" Grid.Column="1" Grid.Row="1" Width="1230" Height="700" Margin="20,10,0,0">
            <Border.Background>
                <SolidColorBrush Color="{Binding Path=Color, Source={StaticResource Level2Background}}" />
            </Border.Background>
        </Border>
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Name="GridMainImage" Grid.Column="1"
              Grid.Row="1" Margin="0,10,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="0" />
                <RowDefinition Height="*" />
                <RowDefinition Height="0" />
                <RowDefinition Height="60" />
            </Grid.RowDefinitions>

            <Grid Name="GridMain" Grid.Row="1" Width="1200">
                <chartingToolkit:Chart x:Name="chartHisto" Background="Transparent" BorderThickness="0"
                                       ContextMenu="{DynamicResource SharedContextMenu}" >

                    <chartingToolkit:Chart.Template>
                        <ControlTemplate TargetType="chartingToolkit:Chart">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <visualizationToolkit:Title Content="{TemplateBinding Title}"
                                                                Style="{TemplateBinding TitleStyle}" />

                                    <!-- Use a nested Grid to avoid possible clipping behavior resulting from ColumnSpan+Width=Auto -->
                                    <Grid Grid.Row="1" Margin="0,15,0,15">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <visualizationToolkit:Legend x:Name="Legend"
                                                                     TitleStyle="{TemplateBinding TitleStyle}"
                                                                     Style="{TemplateBinding LegendStyle}"
                                                                     Grid.Column="1" />
                                        <primitives:EdgePanel Grid.Column="0" x:Name="ChartArea"
                                                              Style="{TemplateBinding ChartAreaStyle}">
                                            <Grid Canvas.ZIndex="-1" Style="{TemplateBinding PlotAreaStyle}" />
                                            <Border Canvas.ZIndex="10" BorderBrush="{DynamicResource GenericVeryDark}" BorderThickness="2" />
                                        </primitives:EdgePanel>
                                    </Grid>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </chartingToolkit:Chart.Template>
                    <chartingToolkit:Chart.PlotAreaStyle>
                        <Style TargetType="Grid">
                            <Setter Property="Background" Value="Transparent" />
                        </Style>
                    </chartingToolkit:Chart.PlotAreaStyle>
                    <chartingToolkit:Chart.LegendStyle>
                        <Style TargetType="visualizationToolkit:Legend">
                            <Setter Property="Width" Value="0" />
                        </Style>
                    </chartingToolkit:Chart.LegendStyle>
                    <chartingToolkit:Chart.Series>
                        <chartingToolkit:LineSeries DependentValuePath="Pixel" IndependentValuePath="GrayLevel"
                                                    Title="Example" x:Name="lineChart">
                            <chartingToolkit:LineSeries.LegendItemStyle>
                                <Style TargetType="chartingToolkit:LegendItem">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Setter Property="Width" Value="0" />
                                    <Setter Property="Height" Value="0" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="BorderThickness" Value="0" />
                                </Style>
                            </chartingToolkit:LineSeries.LegendItemStyle>

                            <chartingToolkit:LineSeries.DependentRangeAxis>
                                <chartingToolkit:LinearAxis Orientation="Y" FontStyle="Normal" Minimum="0"
                                                            ShowGridLines="True" Foreground="{DynamicResource GenericVeryLight}">
                                    <chartingToolkit:LinearAxis.Title>
                                        <TextBlock Text="{Binding ResourceKeys[LID_GraphLabel_Pixel], Source={StaticResource ScoutUILanguageResource}}" FontStyle="Normal" />
                                    </chartingToolkit:LinearAxis.Title>
                                    <chartingToolkit:LinearAxis.GridLineStyle>
                                        <Style TargetType="Line">
                                            <Setter Property="Stroke" Value="#FF646464" />
                                            <Setter Property="StrokeDashArray" Value="2,4" />
                                        </Style>
                                    </chartingToolkit:LinearAxis.GridLineStyle>
                                </chartingToolkit:LinearAxis>
                            </chartingToolkit:LineSeries.DependentRangeAxis>
                            <chartingToolkit:LineSeries.IndependentAxis>
                                <chartingToolkit:LinearAxis Orientation="X" Minimum="0" FontStyle="Normal"
                                                            ShowGridLines="True" Foreground="{DynamicResource GenericVeryLight}">
                                    <chartingToolkit:LinearAxis.Title>
                                        <TextBlock Text="{Binding ResourceKeys[LID_GraphLabel_GrayLevel], Source={StaticResource ScoutUILanguageResource}}" FontStyle="Normal" />
                                    </chartingToolkit:LinearAxis.Title>
                                    <chartingToolkit:LinearAxis.GridLineStyle>
                                        <Style TargetType="Line">
                                            <Setter Property="Stroke" Value="#FF646464" />
                                            <Setter Property="StrokeDashArray" Value="2,4" />
                                        </Style>
                                    </chartingToolkit:LinearAxis.GridLineStyle>
                                </chartingToolkit:LinearAxis>
                            </chartingToolkit:LineSeries.IndependentAxis>
                            <chartingToolkit:LineSeries.DataPointStyle>
                                <Style TargetType="chartingToolkit:LineDataPoint">
                                    <Setter Property="Opacity" Value="0" />
                                    <Setter Property="Background" Value="{DynamicResource GenericVeryLight}" />
                                </Style>
                            </chartingToolkit:LineSeries.DataPointStyle>
                        </chartingToolkit:LineSeries>
                    </chartingToolkit:Chart.Series>
                </chartingToolkit:Chart>
            </Grid>

            <Grid x:Name="ImageView" Grid.Row="1" MaxWidth="1200" MaxHeight="650" Margin="20,0,0,0">
                <Grid.Background>
                    <SolidColorBrush Color="{Binding Path=Color, Source={StaticResource Level2Background}}" />
                </Grid.Background>
                <ScrollViewer Name="ImageScrollViewer" PanningMode="Both"  
                              ScrollChanged="ImageScrollViewer_OnScrollChanged"
                              ManipulationBoundaryFeedback="ScrollViewerManipulationBoundaryFeedback"
                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <ScrollViewer.Style>
                        <Style TargetType="{x:Type ScrollViewer}">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <!--<Setter Property="PanningMode" Value="Both" />-->
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid x:Name="Grid" Background="{TemplateBinding Background}"
                                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="Transparent" Grid.Row="1" />
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                    CanHorizontallyScroll="False"
                                                                    CanVerticallyScroll="False"
                                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                    Content="{TemplateBinding Content}"
                                                                    Grid.RowSpan="2" Margin="{TemplateBinding Padding}"
                                                                    Grid.ColumnSpan="2" />
                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                                       AutomationProperties.AutomationId="VerticalScrollBar"
                                                       Cursor="Arrow" Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableHeight}" Minimum="0"
                                                       Grid.Row="0"
                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ViewportSize="{TemplateBinding ViewportHeight}" Width="15" >
                                                <ScrollBar.ContextMenu>
                                                    <ContextMenu Visibility="Collapsed" />
                                                </ScrollBar.ContextMenu>
                                            </ScrollBar>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       AutomationProperties.AutomationId="HorizontalScrollBar"
                                                       Cursor="Arrow" Grid.Column="0"
                                                       Maximum="{TemplateBinding ScrollableWidth}" Minimum="0"
                                                       Orientation="Horizontal" Grid.Row="1"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                       ViewportSize="{TemplateBinding ViewportWidth}" Height="15" >
                                                <ScrollBar.ContextMenu>
                                                    <ContextMenu Visibility="Collapsed" />
                                                </ScrollBar.ContextMenu>
                                            </ScrollBar>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ScrollViewer.Style>
                    <Canvas Name="CanvasImage" ClipToBounds="True">
                        <Image ClipToBounds="True" Name="BindedImage" RenderTransformOrigin="0,0" Margin="0,0,0,0"
                               HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                               MouseLeave="OnLostFocus"
                               RenderOptions.BitmapScalingMode="NearestNeighbor"
                               RenderOptions.EdgeMode="Aliased"
                               ContextMenu="{DynamicResource SharedContextMenu}" >

                            <Image.InputBindings>
                                <MouseBinding Command="{Binding Path=OnTapImageCommand, ElementName=ImageFullViewControl}"
                                              MouseAction="LeftClick" />
                            </Image.InputBindings>
                        </Image>
                        <Popup x:Name="AnnotatedPopup" 
                                   StaysOpen="True"
                                   AllowsTransparency="False"
                                   Focusable="True"
                                   Placement="Relative"
                                   PlacementTarget="{Binding ElementName=BindedImage}">
                            <ListView Background="LightGoldenrodYellow"
                                          BorderBrush="{DynamicResource GenericVeryDark}"
                                          BorderThickness="1"
                                          ItemsSource="{Binding Path=AnnotatedDetails,ElementName=ImageFullViewControl}">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListViewItem}">
                                        <Setter Property="Focusable" Value="False"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="275"/>
                                                <ColumnDefinition Width="10"/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="10"/>
                                            </Grid.ColumnDefinitions>
                                            <Label Grid.Column="0" Style="{StaticResource ReviewItemLabelStyle}"  HorizontalAlignment="Left" FontSize="18" Padding="0" Margin="0" BorderThickness="0" Content="{Binding Key}"/>
                                            <Label Grid.Column="2" Style="{StaticResource ReviewItemLabelStyle}"  HorizontalAlignment="Left" FontSize="18" Padding="0" Margin="0" BorderThickness="0" Content="{Binding Value}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Popup>
                        <Rectangle x:Name="Rectangle"
                                       Width="50"
                                       Height="50"
                                       Stroke="LightGoldenrodYellow"
                                       Visibility="Collapsed"
                                       StrokeThickness="5"/>
                    </Canvas>
                </ScrollViewer>
                <Label Name="LblBubble" Background="Yellow" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,20,0,0" />
            </Grid>

            <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="0,0,80,0" HorizontalAlignment="Center">

                <ComboBox x:Name="ComboBoxFullImageType" VerticalContentAlignment="Center"
                          Visibility="{Binding Path=IsImageTypeAvailable, ElementName=ImageFullViewControl, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                          IsEnabled="{Binding Path=IsImageTypeEnable, ElementName=ImageFullViewControl, Mode=TwoWay}"
                          Style="{StaticResource CellTypeComboBoxLoginPageStyle}"
                          SelectedItem="{Binding Path=SelectedImageType, ElementName=ImageFullViewControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          FontSize="18" HorizontalAlignment="Left" Width="120" Height="48" >
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumToLocalizedDescriptionConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <local:HorizontalPaginationView x:Name="UcHorizontalPaginationView"
                                                Visibility="{Binding Path=IsHorizontalPaginationVisible,ElementName=ImageFullViewControl,Converter={StaticResource BooleanToVisibilityConverter}}"
                                                CommandParamNext="Right"
                                                CommandParamPrevious="Left"
                                                TraversalCommand="{Binding Path=ImageTraversalCommand,ElementName=ImageFullViewControl}"
                                                ImageIndexList="{Binding Path=ImageIndexList,ElementName=ImageFullViewControl}"
                                                SelectedImageIndex="{Binding Path=SelectedImageIndex,Mode=TwoWay,ElementName=ImageFullViewControl}"
                                                TotalImageCount="{Binding Path=TotalImageCount ,Mode=TwoWay,ElementName=ImageFullViewControl}"
                                                HorizontalAlignment="Center" />

                <StackPanel x:Name="SlideShowControlsStackPanel" Orientation="Horizontal"
                            Visibility="{Binding Path=ShowSlideShowButtons, ElementName=ImageFullViewControl, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button Style="{StaticResource RoundButtonDashBoardStyle}"
                        Command="{Binding PlaySlideShowCommand}">
                        <Image Source="{StaticResource PlaySource}" Margin="4,0,0,0"/>
                    </Button>
                    <Button Style="{StaticResource RoundButtonDashBoardStyle}" Margin="20,0,0,0"
                        Command="{Binding PauseSlideShowCommand}">
                        <Image Source="{StaticResource PauseSource}" Height="40" Width="40"/>
                    </Button>
                </StackPanel>
            </StackPanel>
        </Grid>

    </Grid>
</commonControls:BaseImageView>